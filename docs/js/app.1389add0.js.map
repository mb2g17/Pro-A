{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/middlepane/AutomataPreview.vue?5f02","webpack:///./src/config/cytoscape-config.ts","webpack:///./src/App.vue?f446","webpack:///./src/components/TabBody.vue?b191","webpack:///./src/components/leftpane/visualisation/OutlinePane.vue?81de","webpack:///./src/components/leftpane/visualisation/SearchTable.vue?089d","webpack:///./src/views/Main.vue?3d87","webpack:///./src/components/leftpane/computation/OperationButton.vue?9962","webpack:///./src/components/modals/styles/StylesModal.vue?0968","webpack:///./src/App.vue?8a71","webpack:///./src/components/HelloWorld.vue?154b","webpack:///./src/components/HelloWorld.vue?1d82","webpack:///./src/components/HelloWorld.vue?cbb5","webpack:///./src/components/HelloWorld.vue","webpack:///./src/App.vue?ec60","webpack:///./src/App.vue?640d","webpack:///./src/App.vue","webpack:///./src/views/Main.vue?44f9","webpack:///./src/components/middlepane/AutomataPreview.vue?0abf","webpack:///./src/events/OutlineUpdateEventHandler.ts","webpack:///./src/components/middlepane/AutomataPreview.vue?df1b","webpack:///./src/classes/Outcome.ts","webpack:///./src/components/middlepane/AutomataPreview.vue?3ea8","webpack:///./src/components/middlepane/AutomataPreview.vue","webpack:///./src/classes/AutomataCharacters.ts","webpack:///./src/classes/AutomataTransitionCache.ts","webpack:///./src/classes/AutomataFoldedStatesCache.ts","webpack:///./src/classes/Automata.ts","webpack:///./src/classes/AutomataConfig.ts","webpack:///./src/classes/FiniteAutomata.ts","webpack:///./src/classes/PushdownAutomataConfig.ts","webpack:///./src/classes/PushdownAutomata.ts","webpack:///./src/classes/TuringMachineTape.ts","webpack:///./src/classes/TuringMachineConfig.ts","webpack:///./src/classes/Circle.ts","webpack:///./src/classes/TuringMachine.ts","webpack:///./src/components/rightpane/animation/ConfigTable.vue?ab54","webpack:///./src/components/rightpane/animation/ConfigTable.vue?5d24","webpack:///./src/components/modals/NewTransitionModal.vue?fadf","webpack:///./src/components/rightpane/animation/ConfigTable.vue?4eb7","webpack:///./src/components/rightpane/animation/ConfigTable.vue","webpack:///./src/components/TabBody.vue?cec9","webpack:///./src/classes/AutomataOperations.ts","webpack:///./src/components/modals/NewTransitionModal.vue?eafa","webpack:///./src/components/modals/NewTransitionModal.vue?6330","webpack:///./src/components/modals/NewTransitionModal.vue","webpack:///./src/components/leftpane/visualisation/SearchTable.vue?b9f0","webpack:///./src/components/leftpane/visualisation/SearchTable.vue?db4d","webpack:///./src/components/leftpane/visualisation/SearchTable.vue?ec05","webpack:///./src/components/leftpane/visualisation/SearchTable.vue","webpack:///./src/components/leftpane/visualisation/MultiLevelSelect.vue?027b","webpack:///./src/components/leftpane/visualisation/MultiLevelSelect.vue?ffea","webpack:///./src/components/leftpane/visualisation/MultiLevelSelect.vue?5281","webpack:///./src/components/leftpane/visualisation/MultiLevelSelect.vue","webpack:///./src/components/middlepane/MiddlePane.vue?e0cb","webpack:///./src/events/ModalsEventHandler.ts","webpack:///./src/components/modals/styles/StylesModal.vue?9761","webpack:///./src/components/modals/styles/StyleColourPicker.vue?2fc5","webpack:///./src/components/modals/styles/StyleColourPicker.vue?8376","webpack:///./src/components/modals/styles/StyleColourPicker.vue?d322","webpack:///./src/components/modals/styles/StyleColourPicker.vue","webpack:///./src/components/modals/styles/StyleCard.vue?b6f2","webpack:///./src/components/modals/styles/StyleCard.vue?ce7b","webpack:///./src/components/modals/styles/StyleCard.vue?ee2e","webpack:///./src/components/modals/styles/StyleCard.vue","webpack:///./src/components/modals/styles/StylesModal.vue?752a","webpack:///./src/components/modals/styles/StylesModal.vue?da99","webpack:///./src/components/modals/styles/StylesModal.vue","webpack:///./src/components/middlepane/MiddlePane.vue?896b","webpack:///./src/components/middlepane/MiddlePane.vue?e522","webpack:///./src/components/middlepane/MiddlePane.vue","webpack:///./src/components/rightpane/RightPane.vue?392e","webpack:///./src/components/rightpane/animation/AnimationPane.vue?77dd","webpack:///./src/components/rightpane/animation/AnimationPane.vue?46e1","webpack:///./src/components/rightpane/animation/AnimationPane.vue?ec91","webpack:///./src/components/rightpane/animation/AnimationPane.vue","webpack:///./src/components/rightpane/information/InformationPane.vue?0450","webpack:///./src/components/rightpane/information/InformationPane.vue?6627","webpack:///./src/components/rightpane/information/InformationPane.vue?1274","webpack:///./src/components/rightpane/information/InformationPane.vue","webpack:///./src/components/rightpane/RightPane.vue?cbe6","webpack:///./src/components/rightpane/RightPane.vue?ba4b","webpack:///./src/components/rightpane/RightPane.vue","webpack:///./src/components/leftpane/LeftPane.vue?97f3","webpack:///./src/components/leftpane/visualisation/VisualisationPane.vue?7545","webpack:///./src/components/leftpane/visualisation/StateSearch.vue?64e6","webpack:///./src/components/leftpane/visualisation/StateSearch.vue?30d3","webpack:///./src/components/leftpane/visualisation/StateSearch.vue?457e","webpack:///./src/components/leftpane/visualisation/StateSearch.vue","webpack:///./src/components/leftpane/visualisation/OutlinePane.vue?a73c","webpack:///./src/components/leftpane/visualisation/OutlinePane.vue?8c47","webpack:///./src/components/leftpane/visualisation/OutlinePane.vue?97e0","webpack:///./src/components/leftpane/visualisation/OutlinePane.vue","webpack:///./src/components/leftpane/visualisation/VisualisationPane.vue?cdca","webpack:///./src/components/leftpane/visualisation/VisualisationPane.vue?9c74","webpack:///./src/components/leftpane/visualisation/VisualisationPane.vue","webpack:///./src/components/leftpane/computation/ComputationPane.vue?df68","webpack:///./src/components/leftpane/computation/OperationButton.vue?289d","webpack:///./src/components/leftpane/computation/OperationButton.vue?2784","webpack:///./src/components/leftpane/computation/OperationButton.vue?8bb3","webpack:///./src/components/leftpane/computation/OperationButton.vue","webpack:///./src/components/leftpane/computation/ComputationPane.vue?a1e3","webpack:///./src/components/leftpane/computation/ComputationPane.vue?8794","webpack:///./src/components/leftpane/computation/ComputationPane.vue","webpack:///./src/components/leftpane/LeftPane.vue?60a4","webpack:///./src/components/leftpane/LeftPane.vue?ae1e","webpack:///./src/components/leftpane/LeftPane.vue","webpack:///./src/components/TabBody.vue?e040","webpack:///./src/components/TabBody.vue?62ef","webpack:///./src/components/TabBody.vue","webpack:///./src/components/modals/NewTabModal.vue?82d0","webpack:///./src/components/modals/NewTabModal.vue?9423","webpack:///./src/components/modals/NewTabModal.vue?29e8","webpack:///./src/components/modals/NewTabModal.vue","webpack:///./src/classes/AutomataDeserializer.ts","webpack:///./src/misc/filereader.ts","webpack:///./src/components/modals/Modals.vue?c4b3","webpack:///./src/components/modals/Modals.vue?423a","webpack:///./src/components/modals/Modals.vue?b5f6","webpack:///./src/components/modals/Modals.vue","webpack:///./src/views/Main.vue?5d20","webpack:///./src/views/Main.vue?6e18","webpack:///./src/views/Main.vue","webpack:///./src/router/index.ts","webpack:///./src/store/index.ts","webpack:///./src/fontawesome/index.ts","webpack:///./src/main.ts","webpack:///./src/assets/logo.png","webpack:///./src/components/leftpane/computation/ComputationPane.vue?b2a1","webpack:///./src/components/HelloWorld.vue?3920","webpack:///./src/components/modals/styles/StyleCard.vue?2e2a","webpack:///./src/components/middlepane/MiddlePane.vue?edcf"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","myConfig","style","selector","layout","rows","wheelSensitivity","minZoom","maxZoom","pixelRatio","hideEdgesOnViewport","textureOnViewport","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","_v","_s","msg","_m","component","components","HelloWorld","scopedSlots","_u","fn","on","onLoadAutomataClick","staticStyle","onFileLoad","proxy","$event","preventDefault","onNewAutomataClick","model","callback","$$v","automataTab","expression","_l","automata","index","getName","onSaveAutomataClick","renameTab","closeTab","ref","refInFor","preConfig","afterCreated","getData","def","selectedNodes","Set","mousePositionX","mousePositionY","isAltDown","isDoingMachineSelect","cytoscape","e","console","log","fullStackTrace","cy","initEdgeHandles","initContextMenu","initExpandCollapse","initEdgeEditing","initDoubleClick","document","body","addEventListener","evt","event","id","target","add","clear","$","unselect","selectedState","getStateById","machineItems","getMachineWithTransitions","machineItemID","select","OutlineUpdateEventHandler","$emit","delete","_private","classes","has","position","x","y","parentX","parentY","autoWidth","autoHeight","parentWidth","parentHeight","tapX","tapY","left","top","Math","abs","api","expandCollapse","collapse","expand","stateID","state","updateItem","eh","edgehandles","handleInDrawMode","nodeLoopOffset","snap","edgeType","sourceNode","targetNode","loopAllowed","node","show","hide","addedEles","contextMenus","menuItems","content","tooltipText","hasTrailingDivider","onClickFunction","size","parentID","type","getElementById","move","parent","setData","cacheFoldedStates","addStateToFold","$bvToast","toast","title","variant","autoHideDelay","removeStateFromFold","stateName","initial","getState","setInitialState","toggleClass","final","setFinalState","forEach","selectedNode","removedElements","remove","elements","folds","elem","isStateInFold","getFoldOfState","removeState","symbol","sourceName","targetName","source","removeTransition","removeStateFold","$nextTick","fold","getFoldContents","coreAsWell","uniqueName","getNewStateName","addState","layoutBy","fisheye","animate","undoable","ready","cueEnabled","expandCollapseCueSensitivity","nodes","edgeEditing","bendRemovalSensitivity","handleReconnectEdge","sourceID","targetID","edge","changeSourceOfTransition","changeTargetOfTransition","edgeData","json","update","dblclick","constructor","edgeID","nodeID","Outcome","Epsilon","EmptyStackSymbol","StartTapeSymbol","EmptySymbol","NonEmptySymbol","WriteNothingSymbol","CircleSymbol","UncircleSymbol","cacheSourceTargetSymbol","cacheSourceTargetSymbolReverse","cacheNoOfTransitions","values","dataObj","addTransition","keys","sourceState","targetState","oldSourceName","newSourceName","currentTarget","currentSourceName","oldTargetName","newTargetName","stateToFold","foldToState","foldID","stateFoldID","set","states","item","inputString","cacheNodeID","cacheEdgeID","cacheInitialStates","cacheFinalStates","cacheTransition","newData","itemID","newItem","ID","displayName","payload","label","newSourceID","currentSymbol","currentTargetName","newTargetID","removeFold","transitionID","transition","newStateName","configInit","getOutcome","ACCEPT","step","getCurrentConfigs","classIndex","indexOf","stateNameNumber","foundStates","includes","setCurrentConfigs","newCurrentConfigs","config","character","epsilonTargetStates","getTargetStates","newConfig","applyTransition","inputSymbol","getInputSymbol","normalTargetStates","modelName","getModelName","group","JSON","stringify","openStates","closedStates","initialStates","poppedState","sourceMappings","getSourceMappings","getMachine","initialState","reachableStates","getReachableStates","map","items","sourceStateID","mapping","getTargetMappings","getTransition","targetMappings","finalStates","alphabet","pop","symbols","getTransitions","configArg","configs","filter","newConfigs","input","_state","_input","String","currentConfigs","REJECT","getInputLength","currentStateID","UNDECIDED","srcConfig","epsilonMove","targetStateID","newInput","getInput","getTruncatedInput","stack","_stack","join","acceptByEmptyStack","stackSymbol","emptyStack","nullSymbol","newStack","concat","output","outputStr","toString","initialTape","tape","assign","numberKey","parseInt","read","_tape","_index","rv","char","isCircled","fromCharCode","toUpperCase","charCodeAt","toLowerCase","charCode","match","readTapeSymbol","writeTapeSymbol","direction","nonEmptySymbol","circledSymbol","uncircledSymbol","isUncircled","srcTape","srcTapeIndex","newTape","write","circle","uncircle","undefined","fields","tableItems","onRowClicked","_config","_showDetails","pConfig","stackAsString","tConfig","tapeToString","BTable","BButton","NewTransitionModalMode","onOperationButtonClick","onStateFoldCompute","onDuplicateCompute","onUnionCompute","onConcatenationCompute","onKleeneStarCompute","onProductCompute","onMultiLevelExplore","onSearchItemClick","onCreateTransition","onEditTransition","onEditState","onStylesChange","onChangeHighlightedNodes","group1","group2","midX","reduce","total","currentValue","currentIndex","arr","midY","initialStateName","removeClass","finalState","finalStateName","newNodeName","newName","duplicatedObjects","srcObj","targetObjName","targetSrc","targetTarget","srcSymbol","srcSrc","srcTarget","groupStack","srcObjID","children","child","childID","childName","childTransitions","states1","states2","group2InitialStates","getInitialStates","transitionsToMake","statesToMake","statesToMakeInfo","state1ID","state2ID","state1","state2","sharedSymbols1","sharedSymbols2","sharedSymbolsIntersection","sharedSymbol","targetStates1","targetStates2","targetState1","targetState2","epsilonMoveTargets","epsilonMoveTarget","targetStateName","stateToMake","transitionTemplate","removeTransitionWithID","ADD","automataType","onCancelClick","onAddClick","_e","EDIT","onEditClick","isModalVisible","transitionSymbol","isEpsilonMove","tmState","isEmptySymbol","isNonEmptySymbol","isCircledSymbol","isUncircledSymbol","isStartTapeSymbol","inputtedTransitionSymbol","$set","inputStackSymbol","pdaState","isEmptyStackSymbol","isAnySymbol","outputStackSymbols","outputStackSymbol","outputStackSymbolIndex","inputtedOutputStackSymbols","isWriteEmptySymbol","isWriteNothing","isCircle","isUncircle","text","existingSymbols","inputtedInputStackSymbol","symbolToWrite","clearData","$bvModal","val","oldVal","onItemClick","state_name","query","thClass","tdClass","dirty","ids","isMultilevelExplorationEnabled","level","inputNumber","_n","zoom","onAddStyleClick","onStylesClick","onModalShown","onApplyClick","resetToDefault","card","all","selected","selectCard","deleteCard","directives","rawName","selectedCard","styleName","onStyleChange","onColourChange","colourValue","outline","newColourValue","verte","$refs","picker","$children","pickerRect","width","height","right","bottom","updateSquareColors","getStyle","colour","emitStyleChange","BCard","onCardClick","stopPropagation","onCloseClick","default","BRow","BCol","BButtonGroup","BBadge","styles","cards","styleNameCounter","addCard","cardName","generateName","getDefaultStyles","updateColourPickers","editableStyle","setColour","setOutline","defaultStyles","defaultStyle","args","selectedCardIndex","container","$el","querySelector","scrollTop","cardTitle","BModal","BForm","BCardText","StyleColourPicker","StyleCard","stylesModal","ModalsEventHandler","$on","automataID","automataPreview","getAutomataPreviewReference","zoomLevel","renderedPosition","getID","viewStyles","addStyle","AutomataPreview","StylesModal","onPassInputClick","onStepClick","outcome","onDeleteConfig","onPruneConfig","isSimulating","highlightedNodes","toLocaleString","RegExp","test","setInput","oldHighlightedNodes","updateOutcomeAndCurrentConfigs","currentConfig","deselect","$forceUpdate","reset","simulate","deleteConfig","stateExistsAsConfig","pruneConfig","ConfigTable","getNumberOfTransitions","animationPane","informationPane","BTabs","BTab","AnimationPane","InformationPane","_k","keyCode","onSearch","searchTable","setTable","findStates","SearchTable","enabled","imageSrc","onPaneClick","png","outlinePane","OutlinePane","StateSearch","MultiLevelSelect","automataTypeEnabled","currentStage","onClick","maxStages","successMessageEnabled","OperationButton","computationPane","visualisationPane","ComputationPane","VisualisationPane","rightPane","leftPane","middlePane","updateOutlinePane","updateStyleCards","Enabled","cytoscapeDiv","querySelectorAll","div","getBoundingClientRect","w","h","bb","boundingBox","min","full","scale","maxHeight","maxWidth","updateOutline","newStyle","newSelector","$dialog","prompt","response","renameState","deselectNode","selectNode","addClass","callbackArg","selectedID","cancel","grandParent","newDuplicatedObjects","duplicate","selectedObj","newDuplicatedObject","union","finalStateAutomata1","getFinalStates","initialStateAutomata2","concatenation","kleeneStar","product","center","openNodes","closedNodes","currentNodePopped","currentNode","currentLevel","currentNodeID","targetNodeNames","targetNodeName","MiddlePane","RightPane","LeftPane","NewTransitionModal","BContainer","BFormTextarea","BFormCheckbox","getAutomataName","onTypeClick","BFormInput","serialized","parse","setName","refresh","readFileAsync","file","Promise","resolve","reject","reader","FileReader","onload","onerror","readAsText","newTabModal","newTransitionModal","showEdit","NewTabModal","automatas","dataObjKey","newAutomata","createAutomata","fileInput","click","files","contents","decryptedBase64","decode","jsonContents","automataTabIndex","cytoscapeJSON","nodeData","jsonToSave","serialize","StyleCards","saveBlob","encode","jsonBlob","Blob","Modals","TabBody","use","routes","path","router","Store","mutations","actions","store","productionTip","render","$mount"],"mappings":"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","file":"js/app.1389add0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutomataPreview.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutomataPreview.vue?vue&type=style&index=0&lang=scss&\"","const myConfig: object = {\n    style: [\n        { // State\n            selector: 'node',\n            style: {\n                'background-color': '#666',\n                'content': 'data(displayName)',\n                'min-zoomed-font-size': '9px'\n            },\n        },\n        { // Selected state\n            selector: ':selected',\n            style: {\n                'background-color': '#933',\n                'color': '#F00'\n            }\n        },\n        { // Initial state\n            selector: '.initial-node',\n            style: {\n                'background-color': '#00f',\n                'content': 'data(displayName)',\n            },\n        },\n        { // Final state\n            selector: '.final-node',\n            style: {\n                'background-color': '#666',\n                'border-width': 4,\n                'content': 'data(displayName)',\n            },\n        },\n        { // Initial + final state\n            selector: '.initial-node.final-node',\n            style: {\n                'background-color': '#00f',\n                'border-width': 4,\n                'content': 'data(displayName)',\n            },\n        },\n        { // Highlighted state\n            selector: '.highlighted-node',\n            style: {\n                'background-color': '#ff0',\n            },\n        },\n        { // Edge handle\n            selector: '.eh-handle',\n            style: {\n                'background-color': 'red',\n                'width': 12,\n                'height': 12,\n                'shape': 'ellipse',\n                'overlay-opacity': 0,\n                'border-width': 12,\n                'border-opacity': 0,\n                'label': '',\n            },\n        },\n        { // Hovering over a state, edge handle\n            selector: '.eh-hover',\n            style: {\n                'background-color': 'red',\n            },\n        },\n        { // Making a transition, source state\n            selector: '.eh-source',\n            style: {\n                'border-width': 2,\n                'border-color': 'red',\n            },\n        },\n        { // Making a transition, target state\n            selector: '.eh-target',\n            style: {\n                'border-width': 2,\n                'border-color': 'red',\n            },\n        },\n        { // Making a transition, arrow\n            selector: '.eh-preview, .eh-ghost-edge',\n            style: {\n                'background-color': 'red',\n                'line-color': 'red',\n                'target-arrow-color': 'red',\n                'source-arrow-color': 'red',\n            },\n        },\n        { // Transition\n            selector: 'edge',\n            style: {\n                'width': 3,\n                'line-color': '#ccc',\n                'content': 'data(label)',\n\n                'curve-style': 'bezier',\n                'target-arrow-color': '#eee',\n                'target-arrow-shape': 'triangle',\n                'arrow-scale': 1,\n\n                'loop-direction': '-45deg',\n                'loop-sweep': '90deg',\n\n                'min-zoomed-font-size': '9px'\n\n                //'control-point-step-size': '70px',\n            },\n        },\n        { // Parent (state fold node)\n            selector: '.parent',\n            style: {\n                'background-color': '#50b8f8',\n                'border-width': 1,\n                'border-color': 'black'\n            }\n        },\n        { // Parent (state fold node)\n            selector: '.parent:selected',\n            style: {\n                'background-color': '#5099f8',\n            }\n        },\n        { // Parent (collapsed)\n            selector: '.cy-expand-collapse-collapsed-node',\n            style: {\n                'border-width': 1,\n                'border-color': 'black'\n            }\n        }\n    ],\n    layout: {\n        name: 'grid',\n        rows: 1,\n    },\n\n    wheelSensitivity: 0.15,\n    minZoom: 0.1,\n    maxZoom: 10,\n    pixelRatio: 1,\n    hideEdgesOnViewport: true,\n    textureOnViewport: true,\n};\n\nexport default myConfig;\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TabBody.vue?vue&type=style&index=0&id=6ef5f2a0&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TabBody.vue?vue&type=style&index=0&id=6ef5f2a0&lang=scss&scoped=true&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OutlinePane.vue?vue&type=style&index=0&id=4bc8f5ea&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OutlinePane.vue?vue&type=style&index=0&id=4bc8f5ea&scoped=true&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchTable.vue?vue&type=style&index=0&id=0370a8fa&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchTable.vue?vue&type=style&index=0&id=0370a8fa&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Main.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Main.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OperationButton.vue?vue&type=style&index=0&id=46b45728&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OperationButton.vue?vue&type=style&index=0&id=46b45728&scoped=true&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StylesModal.vue?vue&type=style&index=0&id=15753ff7&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StylesModal.vue?vue&type=style&index=0&id=15753ff7&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('h1',[_vm._v(_vm._s(_vm.msg))]),_vm._m(0),_c('h3',[_vm._v(\"Installed CLI Plugins\")]),_vm._m(1),_c('h3',[_vm._v(\"Essential Links\")]),_vm._m(2),_c('h3',[_vm._v(\"Ecosystem\")]),_vm._m(3)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" For a guide and recipes on how to configure / customize this project,\"),_c('br'),_vm._v(\" check out the \"),_c('a',{attrs:{\"href\":\"https://cli.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-cli documentation\")]),_vm._v(\". \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-babel\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"babel\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-typescript\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"typescript\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-unit-mocha\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"unit-mocha\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Core Docs\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://forum.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Forum\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://chat.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Community Chat\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://twitter.com/vuejs\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Twitter\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://news.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"News\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://router.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-router\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://vuex.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vuex\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-devtools#vue-devtools\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-devtools\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://vue-loader.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-loader\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/awesome-vue\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"awesome-vue\")])])])}]\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class HelloWorld extends Vue {\n    @Prop() private msg!: string;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=e18ab5de&scoped=true&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./HelloWorld.vue?vue&type=style&index=0&id=e18ab5de&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e18ab5de\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport HelloWorld from './components/HelloWorld.vue';\n\n@Component({\n    components: {\n        HelloWorld,\n    },\n})\nexport default class App extends Vue {}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--13-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=2d6ba521&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main\"},[_c('b-tabs',{attrs:{\"id\":\"tabs\",\"content-class\":\"mt-3\"},scopedSlots:_vm._u([{key:\"tabs-start\",fn:function(){return [_c('img',{attrs:{\"id\":\"logo\",\"src\":require(\"../assets/logo.png\")}}),_c('b-button',{staticClass:\"mr-3\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.onLoadAutomataClick}},[_vm._v(\"Load Automata\")]),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"loadFileInput\",\"type\":\"file\"},on:{\"change\":_vm.onFileLoad}})]},proxy:true},{key:\"tabs-end\",fn:function(){return [_c('b-nav-item',{attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.onNewAutomataClick($event)}}},[_c('b',[_vm._v(\"+\")])])]},proxy:true}]),model:{value:(_vm.automataTab),callback:function ($$v) {_vm.automataTab=$$v},expression:\"automataTab\"}},_vm._l((_vm.automatas),function(automata,index){return _c('b-tab',{attrs:{\"active\":\"\"},scopedSlots:_vm._u([{key:\"title\",fn:function(){return [_vm._v(\" \"+_vm._s(automata.getName())+\" \"),_c('font-awesome-icon',{staticClass:\"mr-1\",attrs:{\"icon\":['fas', 'save']},on:{\"click\":function($event){return _vm.onSaveAutomataClick(index)}}}),_c('font-awesome-icon',{staticClass:\"mr-1\",attrs:{\"icon\":['fas', 'pen-square']},on:{\"click\":function($event){return _vm.renameTab(index)}}}),_c('font-awesome-icon',{attrs:{\"icon\":['fas', 'times-circle']},on:{\"click\":function($event){return _vm.closeTab(index)}}})]},proxy:true}],null,true)},[_c('TabBody',{ref:(\"tab\" + index),refInFor:true,attrs:{\"automata\":automata,\"index\":index}})],1)}),1),_c('Modals')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cytoscape',{ref:\"cy\",attrs:{\"config\":_vm.myConfig,\"preConfig\":_vm.preConfig,\"afterCreated\":_vm.afterCreated}},_vm._l((_vm.automata.getData()),function(def){return _c('cy-element',{key:(\"\" + (def.data.id)),attrs:{\"definition\":def}})}),1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from \"vue\";\nexport default new Vue();","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Prop} from 'vue-property-decorator';\nimport $ from \"jquery\";\nimport edgehandles from 'cytoscape-edgehandles';\nimport contextMenus from 'cytoscape-context-menus';\nimport expandCollapse from 'cytoscape-expand-collapse';\nimport edgeEditing from 'cytoscape-edge-editing';\nimport dblclick from 'cytoscape-dblclick';\nimport navigator from 'cytoscape-navigator';\n\n// Automata config\nimport config from '../../config/cytoscape-config';\n\n// CSS for cytoscape-context-menus\nimport 'cytoscape-context-menus/cytoscape-context-menus.css';\n\n// Custom components and classes\nimport Automata from '@/classes/Automata';\nimport PushdownAutomata from \"@/classes/PushdownAutomata\";\nimport TuringMachine from \"@/classes/TuringMachine\";\n\n// Lodash\nimport _ from 'lodash';\nimport OutlineUpdateEventHandler from \"@/events/OutlineUpdateEventHandler\";\n\n@Component\nexport default class AutomataPreview extends Vue {\n    /** The automata to preview */\n    @Prop() public readonly automata!: Automata;\n\n    /** Config object (exported data stored as property) */\n    public myConfig: object = config;\n\n    /** The cytoscape instance in this preview component */\n    public cy: any;\n\n    /** ID of selected items */\n    public selectedNodes: Set<any> = new Set();\n\n    /** The x position of the mouse on the automata canvas, updated by mousemove */\n    public mousePositionX: number = 0;\n\n    /** The y position of the mouse on the automata canvas, updated by mousemove */\n    public mousePositionY: number = 0;\n\n    /** If true, alt key is down, if false it's not */\n    private isAltDown: boolean = false;\n\n    /** If true, we are doing a machine select. Prevents infinite loop select events */\n    private isDoingMachineSelect: boolean = false;\n\n    public preConfig(cytoscape: any) {\n        try {\n            contextMenus(cytoscape, $);\n            edgehandles(cytoscape, $);\n            expandCollapse(cytoscape, $);\n            edgeEditing(cytoscape, $);\n            dblclick(cytoscape, $);\n        } catch (e) {\n            console.log(e.fullStackTrace);\n        }\n        //cytoscape.use(contextMenus, $);\n        //cytoscape.use(edgehandles);\n    }\n\n    public afterCreated(cy: any) {\n        this.cy = cy; // Stores cytoscape instance\n\n        // Sets up extensions\n        this.initEdgeHandles();\n        this.initContextMenu();\n        this.initExpandCollapse();\n        this.initEdgeEditing();\n        this.initDoubleClick();\n\n        // Hacky event that remembers if ALT is held down\n        document.body.addEventListener('keydown', evt => {\n            /*if (evt.key === \"ArrowUp\")\n            {\n                for (const selectedObj of this.selectedNodes)\n                {\n                    this.cy.style()\n                        .selector(`#${selectedObj}`)\n                            .style('control-point-step-size', '200px')\n                        .update();\n\n                    let oldSize = cy.style().selector(`#${selectedObj}`).json();\n                    console.log(oldSize);\n                }\n            }*/\n\n            if (evt.key === \"Alt\")\n                this.isAltDown = true;\n        });\n        document.body.addEventListener('keyup', evt => {\n            if (evt.key === \"Alt\")\n                this.isAltDown = false;\n        });\n\n        // When the user selects a node\n        cy.on('select', (event: any) => {\n            const id = event.target.id();\n            this.selectedNodes.add(id);\n\n            // If alt is held down, select the whole machine\n            if (this.isAltDown && !this.isDoingMachineSelect) {\n                // --\n                // console.log(this.automata.getMachine(this.automata.getStateById(id).data.name));\n                // --\n\n                this.isDoingMachineSelect = true;\n                this.selectedNodes.clear();\n                this.cy.$(`#${id}`).unselect();\n\n                // Gets relevant items of this machine\n                const selectedState: any = this.automata.getStateById(id);\n                const machineItems: Set<string> = this.automata.getMachineWithTransitions(selectedState.data.name);\n\n                // Selects all the states of the machine\n                for (const machineItemID of machineItems) {\n                    this.cy.$(`#${machineItemID}`).select();\n                    this.selectedNodes.add(machineItemID);\n                }\n\n                // Sets flag to false\n                this.isDoingMachineSelect = false;\n            }\n\n            // Updates outline pane\n            OutlineUpdateEventHandler.$emit('updateOutline');\n        });\n\n        // When the user deselects a node\n        cy.on('unselect', (event: any) => {\n            const id = event.target.id();\n            this.selectedNodes.delete(id);\n\n            // Updates outline pane\n            OutlineUpdateEventHandler.$emit('updateOutline');\n        });\n\n        // When the user taps on the screen\n        cy.on('tap', (event: any) => {\n            // If we clicked on a parent\n            if (event.target[0]) {\n                if (event.target[0]._private.classes.has(\"parent\")) {\n                    // Gets x and y of parent\n                    const [parentX, parentY] = [event.target[0]._private.position.x, event.target[0]._private.position.y];\n                    const [parentWidth, parentHeight] = [event.target[0]._private.autoWidth, event.target[0]._private.autoHeight];\n\n                    // Gets x and y of click\n                    const [tapX, tapY] = [event.position.x, event.position.y];\n\n                    // Check if user tapped on cue (collapse version)\n                    const [left, top] =  [parentX - (parentWidth / 2), parentY - (parentHeight / 2)];\n                    if (Math.abs(tapX - left) < 6 && Math.abs(tapY - top) < 6) {\n                        let api = this.cy.expandCollapse('get');\n                        api.collapse(event.target);\n                    }\n\n                    // Check if user tapped on cue (expand version)\n                    else if (tapX < parentX && tapY < parentY && event.target[0]._private.classes.has(\"cy-expand-collapse-collapsed-node\")) {\n                        let api = this.cy.expandCollapse('get');\n                        api.expand(event.target);\n                    }\n                }\n            }\n        });\n\n        // When the user moves the mouse\n        cy.on('mousemove', (event: any) => {\n            this.mousePositionX = event.position.x;\n            this.mousePositionY = event.position.y;\n        });\n\n        // When the user drags an object and drops\n        cy.on('dragfree', (event: any) => {\n            // Updates outline pane\n            OutlineUpdateEventHandler.$emit('updateOutline');\n\n            // Gets ID and new position\n            const stateID = event.target._private.data.id;\n\n            // Updates position of state\n            let state = this.automata.getData()[stateID];\n            this.automata.updateItem(stateID, {\n                ...state,\n                position: event.target._private.position\n            });\n        });\n    }\n\n    /**\n     * Sets up edge handles extension\n     */\n    private initEdgeHandles() {\n        const eh = this.cy.edgehandles({\n            handleInDrawMode: true,\n            nodeLoopOffset: 50, // offset for edgeType: 'node' loops\n            snap: true,\n            edgeType: (sourceNode: any, targetNode: any) => {\n                // If we're selecting nothing\n                if (targetNode.length === 0)\n                    return \"flat\";\n\n                // If we're trying to select a fold, don't allow the edge\n                if (targetNode._private.classes.has(\"parent\"))\n                    return null;\n                else\n                    return \"flat\";\n            },\n            loopAllowed: function loopAllowed(node: any) {\n                // for the specified node, return whether edges from itself to itself are allowed\n                return true;\n            },\n            show: (sourceNode: any) => {\n                // If we're hovering on a parent, hide the edge handle\n                if (sourceNode[0]._private.classes.has(\"parent\"))\n                    eh.hide();\n            }\n        });\n\n        // On edge creation\n        this.cy.on('ehcomplete', (event: any, sourceNode: any, targetNode: any, addedEles: any) => {\n            this.$emit('createTransition', {event, sourceNode, targetNode, addedEles});\n        });\n    }\n\n    /**\n     * Sets up context menu extension\n     */\n    private initContextMenu() {\n        const cm = this.cy.contextMenus({\n            menuItems: [\n                // -- STATES --\n                /*{\n                    id: 'collapse',\n                    content: 'Collapse state',\n                    tooltipText: 'collapse',\n                    selector: 'node',\n                    onClickFunction: (event: any) => {\n                        let api = this.cy.expandCollapse('get');\n                        api.collapseAll();\n                    }\n                },\n                {\n                    id: 'Expand',\n                    content: 'Expand state',\n                    tooltipText: 'expand',\n                    selector: 'node',\n                    onClickFunction: (event: any) => {\n                        let api = this.cy.expandCollapse('get');\n                        api.expandAll();\n                    }\n                },*/\n                {\n                    id: 'add-to-fold',\n                    content: 'Add selected state(s) to this fold',\n                    tooltipText: 'add-to-fold',\n                    selector: '.parent',\n                    hasTrailingDivider: true,\n                    onClickFunction: (event: any) => {\n                        // If there are no selected nodes, send a toast\n                        if (this.selectedNodes.size === 0) {\n                            this.$bvToast.toast(\"No nodes selected to add to state fold!\", {\n                                title: 'Warning',\n                                variant: \"warning\",\n                                autoHideDelay: 5000\n                            });\n                            return;\n                        }\n\n                        // Gets parent ID\n                        const parentID = event.target[0]._private.data.id;\n\n                        // Goes through every selected node\n                        for (const node of this.selectedNodes) {\n                            // Only do this if this is a node\n                            if (this.automata.getStateById(node).data.type === \"node\") {\n                                // Sets parent of this node to new parent\n                                this.cy.getElementById(node).move({\n                                    parent: parentID\n                                });\n\n                                // Sets parent property in data\n                                let data: any = this.automata.getData();\n                                data[node].parent = parentID;\n                                this.automata.setData(data);\n\n                                // Change cache\n                                this.automata.cacheFoldedStates.addStateToFold(node, parentID);\n                            }\n                        }\n\n                        // Updates outline pane\n                        OutlineUpdateEventHandler.$emit('updateOutline');\n                    }\n                },\n                {\n                    id: 'remove-from-fold',\n                    content: 'Remove selected state(s) from folds',\n                    tooltipText: 'remove-from-fold',\n                    selector: 'node',\n                    hasTrailingDivider: true,\n                    onClickFunction: (event: any) => {\n                        // If there are no selected nodes, send a toast\n                        if (this.selectedNodes.size === 0) {\n                            this.$bvToast.toast(\"No nodes selected to remove from state folds!\", {\n                                title: 'Warning',\n                                variant: \"warning\",\n                                autoHideDelay: 5000\n                            });\n                            return;\n                        }\n                        // Goes through every selected node\n                        for (const node of this.selectedNodes) {\n                            // Only do this if this is a node\n                            if (this.automata.getStateById(node).data.type === \"node\") {\n                                // Removes parent from this node\n                                this.cy.getElementById(node).move({\n                                    parent: null\n                                });\n\n                                // Sets parent property in data\n                                let data: any = this.automata.getData();\n                                data[node].parent = null;\n                                this.automata.setData(data);\n\n                                // Change cache\n                                this.automata.cacheFoldedStates.removeStateFromFold(node);\n                            }\n                        }\n\n                        // Updates outline pane\n                        OutlineUpdateEventHandler.$emit('updateOutline');\n                    }\n                },\n                {\n                    id: 'initial',\n                    content: 'Toggle initial state',\n                    tooltipText: 'initial',\n                    selector: 'node',\n                    onClickFunction: (event: any) => {\n                        // Gets state name and initial property\n                        const stateName = event.target._private.data.name;\n                        const initial = this.automata.getState(stateName).data.initial;\n\n                        // Toggles initial state + class\n                        this.automata.setInitialState(stateName, !initial);\n                        event.target.toggleClass('initial-node');\n\n                        // Updates outline pane\n                        OutlineUpdateEventHandler.$emit('updateOutline');\n                    }\n                },\n                {\n                    id: 'final',\n                    content: 'Toggle final state',\n                    tooltipText: 'final',\n                    selector: 'node',\n                    onClickFunction: (event: any) => {\n                        // Gets state name and final property\n                        const stateName = event.target._private.data.name;\n                        const final = this.automata.getState(stateName).data.final;\n\n                        // Toggles initial state\n                        this.automata.setFinalState(stateName, !final);\n                        event.target.toggleClass('final-node');\n\n                        // Updates outline pane\n                        OutlineUpdateEventHandler.$emit('updateOutline');\n                    }\n                },\n                {\n                    id: 'remove',\n                    content: 'Remove',\n                    tooltipText: 'remove',\n                    selector: 'node, edge',\n                    onClickFunction: async (event: any) => {\n                        // Create selector that gets all selected objects\n                        let selector: string = \"#\" + event.target._private.data.id;\n                        this.selectedNodes.forEach(selectedNode => {\n                            selector +=\n                                (selector ? ',' : '') +\n                                \"#\" +\n                                selectedNode;\n                        });\n\n                        // Removes objects from Cytoscape\n                        const removedElements = this.cy.remove(this.cy.elements(selector));\n\n                        // Remembers folds the states were in\n                        const folds: Set<string> = new Set();\n\n                        // Goes through all removed elements\n                        for (let i = 0; i < removedElements.length; i++) {\n                            const elem = removedElements[i];\n\n                            // Removes from selected set\n                            this.selectedNodes.delete(elem._private.data.id);\n\n                            // If this is a state\n                            if (elem._private.data.type === \"node\") {\n                                // If this is within a fold\n                                if (this.automata.cacheFoldedStates.isStateInFold(elem._private.data.id)) {\n                                    // Remember this fold\n                                    folds.add(this.automata.cacheFoldedStates.getFoldOfState(elem._private.data.id));\n                                }\n\n                                // Removes node from data\n                                const name = elem._private.data.name;\n                                this.automata.removeState(name);\n                            }\n                            // If this is a transition\n                            else if (elem._private.data.type === \"edge\") {\n                                // Removes edge from data\n                                const [symbol, source, target] = [\n                                    elem._private.data.symbol,\n                                    elem._private.data.sourceName,\n                                    elem._private.data.targetName\n                                ];\n                                this.automata.removeTransition(symbol, source, target);\n                            }\n                            // If this is a state fold\n                            else {\n                                this.automata.removeStateFold(elem._private.data.id);\n                            }\n\n                            // Updates outline pane\n                            await this.$nextTick();\n                            OutlineUpdateEventHandler.$emit('updateOutline');\n                        }\n\n                        // Goes through all folds\n                        folds.forEach((fold: string) => {\n                            // If this fold is empty\n                            if (this.automata.cacheFoldedStates.getFoldContents(fold).size === 0)\n                            {\n                                this.cy.remove(\"#\" + fold);\n                                this.automata.removeStateFold(fold);\n                            }\n                        });\n                    },\n                    hasTrailingDivider: true\n                },\n                /*{\n                    id: 'add-bend-point',\n                    content: 'Add Bend Point',\n                    selector: 'edge',\n                    onClickFunction: (event: any) => {\n                        let edge = event.target || event.cyTarget;\n                        if(!bendPointUtilities.isIgnoredEdge(edge)) {\n\n                            bendPointUtilities.addBendPoint();\n                        }\n                    }\n                },*/\n                {\n                    id: 'add-node',\n                    content: 'Add node',\n                    tooltipText: 'add node',\n                    coreAsWell: true,\n                    onClickFunction: async (event: any) => {\n                        // Gets unique name\n                        const uniqueName = this.automata.getNewStateName();\n\n                        // Creates new state\n                        this.automata.addState(uniqueName, event.position.x, event.position.y, false, false);\n\n                        // Updates outline pane\n                        await this.$nextTick();\n                        OutlineUpdateEventHandler.$emit('updateOutline');\n                    }\n                },\n            ]\n        });\n    }\n\n    /**\n     * Sets up expand collapse extension\n     */\n    private initExpandCollapse() {\n        const ec = this.cy.expandCollapse({\n            layoutBy: null,\n            fisheye: false,\n            animate: false,\n            undoable: false,\n            ready: () => console.log(\"Expand collapse is ready\"),\n\n            cueEnabled: true,\n            expandCollapseCueSensitivity: 0.001\n        });\n\n        this.cy.nodes().on(\"expandcollapse.beforecollapse\", (event: any) => {\n            console.log(\"beforecollapse\");\n        });\n        this.cy.nodes().on(\"expandcollapse.aftercollapse\", (event: any) => {\n            console.log(\"aftercollapse\");\n        });\n        this.cy.nodes().on(\"expandcollapse.beforeexpand\", (event: any) => {\n            console.log(\"beforeexpand\");\n        });\n        this.cy.nodes().on(\"expandcollapse.afterexpand\", (event: any) => {\n            console.log(\"afterexpand\");\n        });\n    }\n\n    /**\n     * Sets up edge editing\n     */\n    private initEdgeEditing() {\n        (window as any)['$'] = $; // Globally defines jQuery so that this dumb plugin will work\n        let instance = this.cy.edgeEditing({\n            bendRemovalSensitivity: 16,\n            handleReconnectEdge: (sourceID: any, targetID: any, edge: any) => {\n                // Gets source and target names\n                const sourceName = this.automata.getStateById(sourceID).data.name;\n                const targetName = this.automata.getStateById(targetID).data.name;\n\n                // Updates on automata instance\n                this.automata.changeSourceOfTransition(edge.id, sourceID);\n                this.automata.changeTargetOfTransition(edge.id, targetID);\n\n                // Updates on cytoscape\n                let edgeData = this.cy.getElementById(edge.id)[0].json();\n                edgeData.data.source = sourceID;\n                edgeData.data.sourceName = sourceName;\n                edgeData.data.target = targetID;\n                edgeData.data.targetName = targetName;\n                this.cy.getElementById(edge.id)[0].json(edgeData);\n\n                // Updates outline pane\n                this.$nextTick();\n                OutlineUpdateEventHandler.$emit('updateOutline');\n            }\n        });\n        this.cy.style().update();\n    }\n\n    /**\n     * Sets up double clicking\n     */\n    private initDoubleClick() {\n        this.cy.dblclick();\n\n        this.cy.on('dblclick', async (event: any) => {\n            // If we're double clicking on empty space, create a new state\n            if (event.target.constructor.name === \"Core\") {\n                // Gets unique name\n                const uniqueName = this.automata.getNewStateName();\n\n                // Creates new state\n                this.automata.addState(uniqueName, this.mousePositionX, this.mousePositionY, false, false);\n\n                // Updates outline pane\n                await this.$nextTick();\n                OutlineUpdateEventHandler.$emit('updateOutline');\n            }\n            else {\n                // If we're double clicking on a transition\n                if (event.target._private.data.type === \"edge\") {\n                    // Get edge ID\n                    const edgeID = event.target._private.data.id;\n\n                    // Call event\n                    this.$emit(\"editTransition\", edgeID);\n                } else {\n                    // Get node ID\n                    const nodeID = event.target._private.data.id;\n\n                    // Call event\n                    this.$emit(\"editState\", nodeID);\n                }\n            }\n        });\n    }\n}\n","export enum Outcome {\n    UNDECIDED = 'UNDECIDED',\n    REJECT = 'REJECT',\n    ACCEPT = 'ACCEPT',\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutomataPreview.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutomataPreview.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AutomataPreview.vue?vue&type=template&id=f7ceca84&\"\nimport script from \"./AutomataPreview.vue?vue&type=script&lang=ts&\"\nexport * from \"./AutomataPreview.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./AutomataPreview.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * Unicode automata characters that are effort to copy-paste in\n */\nexport class AutomataCharacters {\n    public static readonly Epsilon = 'ε';\n\n    public static readonly EmptyStackSymbol = '⊥';\n    public static readonly StartTapeSymbol = '⊢';\n\n    public static readonly EmptySymbol = '□';\n    public static readonly NonEmptySymbol = '■';\n\n    public static readonly WriteNothingSymbol = '☒';\n    public static readonly CircleSymbol = '⦿';\n    public static readonly UncircleSymbol = '⦻';\n}\n","import Automata from \"@/classes/Automata\";\n\n/**\n * Stores transition cache for quick access\n */\nexport class AutomataTransitionCache {\n    /** Transition re-mapping from source --> target --> set of symbols */\n    private cacheSourceTargetSymbol: any = {};\n\n    /** Like cacheSourceTargetSymbol, but reverse, target --> source --> set of symbols */\n    private cacheSourceTargetSymbolReverse: any = {};\n\n    /** The number of transitions */\n    private cacheNoOfTransitions = 0;\n\n    /**\n     * Refreshes the cache, used for serialisation\n     */\n    public refresh(automata: Automata) {\n        this.cacheSourceTargetSymbol = {};\n        this.cacheSourceTargetSymbolReverse = {};\n\n        // Goes through all transitions\n        Object.values(automata.getData()).forEach((dataObj: any) => {\n            if (dataObj.data.type === \"edge\")\n                this.addTransition(dataObj.data.sourceName, dataObj.data.targetName, dataObj.data.symbol);\n        });\n    }\n\n    /**\n     * Gets the number of transitions\n     * @returns number of transitions that exist\n     */\n    public getNumberOfTransitions(): number {\n        return this.cacheNoOfTransitions;\n    }\n\n    /**\n     * Gets transitions based on source and target\n     * @param source - the name of the source state of the transition\n     * @param target - the name of the target state of the transition\n     * @return a set of symbols that go between these states\n     */\n    public getTransitions(source: string, target: string): Set<string> {\n        if (this.cacheSourceTargetSymbol[source]) {\n            if (this.cacheSourceTargetSymbol[source][target]) {\n                return this.cacheSourceTargetSymbol[source][target];\n            }\n        }\n        return new Set();\n    }\n\n    /**\n     * Gets possible transitions with source state with target mapping\n     * @param source - the source target name\n     * @return mapping from target --> set of symbols\n     */\n    public getTargetMappings(source: string) {\n        return this.cacheSourceTargetSymbol[source] ? this.cacheSourceTargetSymbol[source] : {};\n    }\n\n    /**\n     * Gets possible transitions with target state with mapping\n     * @param target - the target name of the state\n     * @return mapping from source --> set of symbols\n     */\n    public getSourceMappings(target: string) {\n        return this.cacheSourceTargetSymbolReverse[target] ? this.cacheSourceTargetSymbolReverse[target] : {};\n    }\n\n    public removeState(state: string) {\n        // Updates source --> target\n        for (const sourceState of Object.keys(this.cacheSourceTargetSymbol)) {\n            if (sourceState === state)\n                delete this.cacheSourceTargetSymbol[sourceState];\n            else {\n                for (const targetState of Object.keys(this.cacheSourceTargetSymbol[sourceState])) {\n                    if (targetState === state)\n                        delete this.cacheSourceTargetSymbol[sourceState][targetState];\n                }\n            }\n        }\n\n        // Updates target --> source\n        for (const targetState of Object.keys(this.cacheSourceTargetSymbolReverse)) {\n            if (targetState === state)\n                delete this.cacheSourceTargetSymbolReverse[targetState];\n            else {\n                for (const sourceState of Object.keys(this.cacheSourceTargetSymbolReverse[targetState])) {\n                    if (sourceState === state)\n                        delete this.cacheSourceTargetSymbolReverse[targetState][sourceState];\n                }\n            }\n        }\n    }\n\n    public addTransition(sourceState: string, targetState: string, symbol: string) {\n        if (!this.cacheSourceTargetSymbol[sourceState])\n            this.cacheSourceTargetSymbol[sourceState] = {};\n        if (!this.cacheSourceTargetSymbol[sourceState][targetState])\n            this.cacheSourceTargetSymbol[sourceState][targetState] = new Set();\n\n        if (!this.cacheSourceTargetSymbolReverse[targetState])\n            this.cacheSourceTargetSymbolReverse[targetState] = {};\n        if (!this.cacheSourceTargetSymbolReverse[targetState][sourceState])\n            this.cacheSourceTargetSymbolReverse[targetState][sourceState] = new Set();\n\n        // Add this transition\n        this.cacheSourceTargetSymbol[sourceState][targetState].add(symbol);\n        this.cacheSourceTargetSymbolReverse[targetState][sourceState].add(symbol);\n        this.cacheNoOfTransitions++;\n    }\n\n    public removeTransition(sourceState: string, targetState: string, symbol: string) {\n        if (this.cacheSourceTargetSymbol[sourceState])\n            if (this.cacheSourceTargetSymbol[sourceState][targetState]) {\n                // Deletes symbol\n                this.cacheSourceTargetSymbol[sourceState][targetState].delete(symbol);\n                this.cacheNoOfTransitions--;\n\n                // If there's no more transitions, delete this mapping\n                if (this.cacheSourceTargetSymbol[sourceState][targetState].size === 0)\n                    delete this.cacheSourceTargetSymbol[sourceState][targetState];\n            }\n\n        if (this.cacheSourceTargetSymbolReverse[targetState])\n            if (this.cacheSourceTargetSymbolReverse[targetState][sourceState]) {\n                // Deletes symbol\n                this.cacheSourceTargetSymbolReverse[targetState][sourceState].delete(symbol);\n\n                // If there's no more transitions, delete this mapping\n                if (this.cacheSourceTargetSymbolReverse[targetState][sourceState].size === 0)\n                    delete this.cacheSourceTargetSymbolReverse[targetState][sourceState];\n            }\n    }\n\n    public changeSourceOfTransition(oldSourceName: string, newSourceName: string, currentTarget: string, symbol: string) {\n        this.removeTransition(oldSourceName, currentTarget, symbol);\n        this.addTransition(newSourceName, currentTarget, symbol);\n    }\n\n    public changeTargetOfTransition(currentSourceName: string, oldTargetName: string, newTargetName: string, symbol: string) {\n        this.removeTransition(currentSourceName, oldTargetName, symbol);\n        this.addTransition(currentSourceName, newTargetName, symbol);\n    }\n}\n","import Vue from \"vue\";\nimport Automata from \"@/classes/Automata\";\n\n/**\n * Handles state fold cache\n */\nexport class AutomataFoldedStatesCache {\n    /** One State ID --> One State fold ID */\n    private stateToFold: any = {};\n\n    /** One state fold ID --> Many state IDs (as a set) */\n    private foldToState: any = {};\n\n    /**\n     * Gets whether a state is in a fold\n     * @param stateID - the ID of the state\n     * @returns true if the state is in a fold, false if not\n     */\n    public isStateInFold(stateID: string): boolean {\n        return !!this.stateToFold[stateID];\n    }\n\n    /**\n     * Gets the fold of a state\n     * @param stateID - the state to get the fold of\n     * @returns state fold ID\n     */\n    public getFoldOfState(stateID: string): string {\n        return this.stateToFold[stateID];\n    }\n\n    /**\n     * Gets contents of a state fold\n     * @param foldID - the fold ID\n     * @returns set of state IDs in that fold\n     */\n    public getFoldContents(foldID: string): Set<string> {\n        return this.foldToState[foldID];\n    }\n\n    /**\n     * Adds a state to a fold\n     * @param stateID - the ID of the state\n     * @param stateFoldID - the ID of the fold\n     */\n    public addStateToFold(stateID: string, stateFoldID: string) {\n        // Add entry to state --> fold\n        Vue.set(this.stateToFold, stateID, stateFoldID);\n\n        // Add entry to fold --> state\n        if (!this.foldToState[stateFoldID])\n            this.foldToState[stateFoldID] = new Set();\n        this.foldToState[stateFoldID].add(stateID);\n    }\n\n    /**\n     * Removes a state from its fold\n     * @param stateID - the ID of the state\n     */\n    public removeStateFromFold(stateID: string) {\n        // Remembers fold this state is in\n        const foldID = this.stateToFold[stateID];\n\n        // Removes entry from state --> fold\n        Vue.delete(this.stateToFold, stateID);\n\n        // Removes entry from fold --> state\n        if (this.foldToState[foldID])\n            this.foldToState[foldID].delete(stateID);\n    }\n\n    /**\n     * Removes a fold\n     * @param foldID - the ID of the fold\n     */\n    public removeFold(foldID: string) {\n        // Gets all states in this fold\n        const states: Set<string> = this.foldToState[foldID];\n\n        // Removes entry in fold --> state\n        Vue.delete(this.foldToState, foldID);\n\n        // Removes entries in state --> fold IF this fold had states\n        if (states)\n            states.forEach(state => this.removeStateFromFold(state));\n    }\n\n    /**\n     * Refreshes cache with automata\n     * @param automata - the automata to refresh cache with\n     */\n    public refresh(automata: Automata) {\n        Vue.set(this, \"stateToFold\", {});\n        Vue.set(this, \"foldToState\", {});\n\n        // For every object\n        Object.values(automata.getData()).forEach((item: any) => {\n            // If it's a state\n            if (item.data.type === \"node\") {\n                // If it has a parnet\n                if (item.parent) {\n                    // Add it in to a state fold\n                    this.addStateToFold(item.data.id, item.parent);\n                }\n            }\n        });\n    }\n}","import uuidv1 from 'uuid/v1';\nimport {Outcome} from '@/classes/Outcome';\nimport Vue from 'vue';\nimport AutomataConfig from '@/classes/AutomataConfig';\nimport FiniteAutomata from \"@/classes/FiniteAutomata\";\nimport AutomataMachineCache from \"@/classes/AutomataMachineCache\";\nimport _ from \"lodash\";\nimport {AutomataCharacters} from '@/classes/AutomataCharacters';\nimport {AutomataTransitionCache} from \"@/classes/AutomataTransitionCache\";\nimport {AutomataFoldedStatesCache} from \"@/classes/AutomataFoldedStatesCache\";\n\n/**\n * Abstract class of an automata such as FA, PDA or TM\n */\nexport default abstract class Automata {\n    /** The input string stored in the automata */\n    protected inputString: string = '';\n\n    /** Mapping from node names \"A\" to ID */\n    protected cacheNodeID: any = {};\n\n    /** Mapping from edge name \"a: A: B\" to ID */\n    protected cacheEdgeID: any = {};\n\n    /** Set of initial state names */\n    protected cacheInitialStates: Set<string> = new Set();\n\n    /** Set of final state names */\n    protected cacheFinalStates: Set<string> = new Set();\n\n    /** State IDs --> State fold ID that this state is in */\n    public cacheFoldedStates: AutomataFoldedStatesCache = new AutomataFoldedStatesCache();\n\n    /** Cache storing transition convenience */\n    public cacheTransition: AutomataTransitionCache = new AutomataTransitionCache();\n\n    /** Cytoscape data for all the graph objects */\n    protected data: any = {};\n\n    /** The name of the automata itself */\n    private name: string = '';\n\n    /** The ID of the automata */\n    private readonly id: string = '';\n\n    public constructor() {\n        this.id = uuidv1();\n    }\n\n    /**\n     * Sets the input string stored in the automata\n     * @param inputString - the new input string to put into the automata\n     */\n    public setInput(inputString: string) {\n        this.inputString = inputString;\n    }\n\n    /**\n     * Gets the input string of this automata\n     * @returns the current input string\n     */\n    public getInput(): string {\n        return this.inputString;\n    }\n\n    /**\n     * Gets the ID of the automata itself\n     * @returns the ID of the automata\n     */\n    public getID(): string {\n        return this.id;\n    }\n\n    /**\n     * Accessor for automata name\n     */\n    public getName(): string {\n        return this.name;\n    }\n\n    /**\n     * Mutator for automata name\n     * @param value - the new name for the automata\n     */\n    public setName(value: string) {\n        this.name = value;\n    }\n\n    /**\n     * Clones and returns the data to put into Cytoscape\n     * @returns the object to insert into cytoscape\n     */\n    public getData(): any {\n        return this.data;\n    }\n\n    public setData(newData: any) {\n        Vue.set(this, 'data', newData);\n    }\n\n    /**\n     * Updates one item in the data object\n     * @param itemID - the ID of the data object to update\n     * @param newItem - the new data object to replace\n     */\n    public updateItem(itemID: string, newItem: any) {\n        Vue.set(this.data, itemID, newItem);\n    }\n\n    /**\n     * Adds a state to the automata\n     * @param name - the name of the automata\n     * @param x - the X coordinate of the automata\n     * @param y - the Y coordinate of the automata\n     * @param initial - if true, this will be an initial state\n     * @param final - if true, this will be a final state\n     */\n    public addState(name: string, x: number, y: number, initial: boolean, final: boolean) {\n        // If this state doesn't already exist\n        if (!this.cacheNodeID[name]) {\n            // If it's initial or final, add to sets\n            if (initial) {\n                this.cacheInitialStates.add(name);\n            }\n            if (final) {\n                this.cacheFinalStates.add(name);\n            }\n\n            // Creates ID\n            const ID = uuidv1();\n\n            // Sets node name -> id mapping\n            Vue.set(this.cacheNodeID, name, ID);\n\n            // Sets data\n            Vue.set(this.data, ID, {\n                classes: [\n                    initial ? 'initial-node' : '',\n                    final ? 'final-node' : '',\n                ],\n                data: {\n                    id: ID,\n                    name, // The original name\n                    displayName: name, // The name that shows on the graph\n                    type: 'node',\n                    initial, final,\n                },\n                position: {x, y},\n            });\n        }\n    }\n\n    public addStateData(node: any) {\n        Vue.set(this.data, node.data.id, node);\n    }\n\n    /**\n     * Adds a transition\n     * @param symbol - the symbol of the transition\n     * @param source - name of the state to go from\n     * @param target - name of the state to go to\n     * @param payload - the information for this specific type of transition\n     */\n    public addTransition(symbol: string, source: string, target: string, payload?: any) {\n        // If the source and target states exist\n        if (this.cacheNodeID[source] && this.cacheNodeID[target]) {\n            // Creates the parent branches of edgeID\n            if (!this.cacheEdgeID[symbol]) {\n                Vue.set(this.cacheEdgeID, symbol, {});\n            }\n            if (!this.cacheEdgeID[symbol][source]) {\n                Vue.set(this.cacheEdgeID[symbol], source, {});\n            }\n\n            // If the transition doesn't already exist\n            if (!this.cacheEdgeID[symbol][source][target]) {\n                // Create ID\n                const ID = uuidv1();\n\n                // Create edge name -> id mapping\n                Vue.set(this.cacheEdgeID[symbol][source], target, ID);\n\n                // Gets IDs of the states\n                const sourceID = this.cacheNodeID[source];\n                const targetID = this.cacheNodeID[target];\n\n                // Sets data\n                Vue.set(this.data, ID, {\n                    data: {\n                        id: ID,\n                        label: symbol,\n                        symbol,\n                        source: sourceID,\n                        target: targetID,\n                        sourceName: source,\n                        targetName: target,\n                        type: 'edge',\n                    },\n                });\n\n                // Updates cache\n                this.cacheTransition.addTransition(source, target, symbol);\n            }\n        }\n    }\n\n    /**\n     * Gets a state by its name\n     * @param name - the name of the state to get\n     * @returns state object if found, null if not found\n     */\n    public getState(name: string): any | null {\n        const ID = this.cacheNodeID[name];\n        return this.getStateById(ID);\n    }\n\n    /**\n     * Gets a state by its ID\n     * @param ID - the ID of the state to get\n     * @returns state object if found, null if not found\n     */\n    public getStateById(ID: string): any | null {\n        return !!this.data[ID] ? this.data[ID] : null;\n    }\n\n    /**\n     * Changes the source node of a transition\n     * @param edgeID - the edge to change\n     * @param newSourceID - the new source of the edge\n     */\n    public changeSourceOfTransition(edgeID: string, newSourceID: string) {\n        const currentSymbol = this.data[edgeID].data.symbol;\n        const currentTargetName = this.data[edgeID].data.targetName;\n        const oldSourceName = this.data[edgeID].data.sourceName;\n        const newSourceName = this.data[newSourceID].data.name;\n\n        // Edits data\n        this.data[edgeID].data.source = newSourceID;\n        this.data[edgeID].data.sourceName = newSourceName;\n\n        // Edits edge ID lookup cache\n        delete this.cacheEdgeID[currentSymbol][oldSourceName][currentTargetName];\n        if (!this.cacheEdgeID[currentSymbol][newSourceName])\n            this.cacheEdgeID[currentSymbol][newSourceName] = {};\n        this.cacheEdgeID[currentSymbol][newSourceName][currentTargetName] = edgeID;\n\n        // Updates cache\n        this.cacheTransition.changeSourceOfTransition(oldSourceName, newSourceName, currentTargetName, currentSymbol);\n    }\n\n    /**\n     * Changes the target node of a transition\n     * @param edgeID - the edge to change\n     * @param newTargetID - the new target of the edge\n     */\n    public changeTargetOfTransition(edgeID: string, newTargetID: string) {\n        const currentSymbol = this.data[edgeID].data.symbol;\n        const currentSourceName = this.data[edgeID].data.sourceName;\n        const oldTargetName = this.data[edgeID].data.targetName;\n        const newTargetName = this.data[newTargetID].data.name;\n\n        // Edits data\n        this.data[edgeID].data.target = newTargetID;\n        this.data[edgeID].data.targetName = newTargetName;\n\n        // Edits edge ID lookup\n        Vue.delete(this.cacheEdgeID[currentSymbol][currentSourceName], oldTargetName);\n        Vue.set(this.cacheEdgeID[currentSymbol][currentSourceName], newTargetName, edgeID);\n\n        // Updates machine cache\n        this.cacheTransition.changeTargetOfTransition(currentSourceName, oldTargetName, newTargetName, currentSymbol);\n    }\n\n    /**\n     * Gets a transition with symbol, source and target\n     * @param symbol - the symbol of the transition\n     * @param source - the source state\n     * @param target - the target state\n     * @returns the transition object if found, null if not found\n     */\n    public getTransition(symbol: string, source: string, target: string): any | null {\n        // If edge branch exists, return transition object\n        if (this.cacheEdgeID[symbol]) {\n            if (this.cacheEdgeID[symbol][source]) {\n                if (this.cacheEdgeID[symbol][source][target]) {\n                    const edgeID = this.cacheEdgeID[symbol][source][target];\n                    return this.data[edgeID];\n                }\n            }\n        }\n        // It must not exist; return null\n        return null;\n    }\n\n    /**\n     * Removes a state\n     * @param stateName - the name of the state to delete\n     */\n    public removeState(stateName: string) {\n        // If this state exists\n        if (this.cacheNodeID[stateName]) {\n            // Gets state ID\n            const id = this.cacheNodeID[stateName];\n\n            // Delets nodeID entry\n            Vue.delete(this.cacheNodeID, stateName);\n\n            // Deletes data entry\n            delete this.data[id];\n\n            // Removes from initial / final state cache\n            this.cacheInitialStates.delete(stateName);\n            this.cacheFinalStates.delete(stateName);\n\n            // Updates transition cache\n            this.cacheTransition.removeState(stateName);\n\n            // Updates state fold cache\n            if (this.cacheFoldedStates.isStateInFold(id))\n                this.cacheFoldedStates.removeStateFromFold(id);\n        }\n    }\n\n    public removeStateFold(foldID: string) {\n        // Deletes data entry\n        if (this.data[foldID])\n            delete this.data[foldID];\n\n        // Updates cache\n        this.cacheFoldedStates.removeFold(foldID);\n    }\n\n    /**\n     * Removes a transition\n     * @param symbol - the symbol of the transition to remove\n     * @param source - the source state of the transition to remove\n     * @param target - the target state of the transition to remove\n     */\n    public removeTransition(symbol: string, source: string, target: string) {\n        // If this transition exists\n        if (this.cacheEdgeID[symbol][source][target]) {\n            // Gets edge ID\n            const id = this.cacheEdgeID[symbol][source][target];\n\n            // Delete edgeID entry\n            Vue.delete(this.cacheEdgeID[symbol][source], target);\n\n            // Deletes data entry\n            delete this.data[id];\n\n            // Updates cache\n            this.cacheTransition.removeTransition(source, target, symbol);\n        }\n    }\n\n    /**\n     * Removes a transition via ID\n     * @param transitionID - the ID of the transition to remove\n     */\n    public removeTransitionWithID(transitionID: string) {\n        if (this.data[transitionID]) {\n            // Gets transition object\n            const transition = this.data[transitionID].data;\n\n            // Deletes\n            this.removeTransition(transition.symbol, transition.sourceName, transition.targetName);\n        }\n    }\n\n    /**\n     * Renames a state\n     * @param stateID - the ID of the state to rename\n     * @param newStateName - the new state name\n     */\n    public renameState(stateID: string, newStateName: string) {\n        Vue.set(this.data[stateID].data, \"displayName\", newStateName);\n    }\n\n    /**\n     * Gets the number of states\n     * @returns the number of states\n     */\n    public getNumberOfStates(): number {\n        return Object.keys(this.cacheNodeID).length;\n    }\n\n    /**\n     * Gets the number of transitions\n     * @returns the number of transitions\n     */\n    public getNumberOfTransitions(): number {\n        return Object.keys(this.cacheEdgeID).length;\n    }\n\n    /**\n     * Simulates the automata with an input string in it\n     */\n    public simulate() {\n        // Check to see if the initial config accepts\n        this.configInit();\n        if (this.getOutcome() === Outcome.ACCEPT) {\n            return;\n        }\n\n        // It doesn't; compute steps until we do or run out of configs\n        do {\n            this.step();\n        } while (this.getOutcome() !== Outcome.ACCEPT && this.getCurrentConfigs().size > 0);\n    }\n\n    /**\n     * Gets a set of initial states\n     * @returns a Set of initial state names\n     */\n    public getInitialStates(): Set<string> {\n        return this.cacheInitialStates;\n    }\n\n    /**\n     * Gets a set of final states\n     * @returns a Set of final state names\n     */\n    public getFinalStates(): Set<string> {\n        return this.cacheFinalStates;\n    }\n\n    /**\n     * Sets a state's initial property\n     * @param stateName - the name of the state to change\n     * @param initial - if true, set this state to initial, if false, stop it from being initial\n     */\n    public setInitialState(stateName: string, initial: boolean) {\n        // Gets ID\n        const id = this.cacheNodeID[stateName];\n\n        // Updates set and classes\n        if (this.data[id].data.initial) {\n            this.cacheInitialStates.delete(stateName);\n\n            // Gets class index\n            const classIndex = this.data[id].classes.indexOf('initial-node');\n            this.data[id].classes.splice(classIndex, 1);\n        } else {\n            this.cacheInitialStates.add(stateName);\n            this.data[id].classes.push('initial-node');\n        }\n\n        // Sets initial\n        Vue.set(this.data[id].data, 'initial', initial);\n    }\n\n    /**\n     * Sets a state's final property\n     * @param stateName - the name of the state to change\n     * @param final - if true, set this state to final, if false, stop it from being final\n     */\n    public setFinalState(stateName: string, final: boolean) {\n        // Gets ID\n        const id = this.cacheNodeID[stateName];\n\n        // Updates set\n        if (this.data[id].data.final) {\n            this.cacheFinalStates.delete(stateName);\n\n            // Gets class index\n            const classIndex = this.data[id].classes.indexOf('final-node');\n            this.data[id].classes.splice(classIndex, 1);\n        } else {\n            this.cacheFinalStates.add(stateName);\n            this.data[id].classes.push('final-node');\n        }\n\n        // Sets final\n        Vue.set(this.data[id].data, 'final', final);\n    }\n\n    /**\n     * Gets a new, unique name for a state\n     */\n    public getNewStateName(): string {\n        // Gets set of states\n        const states = new Set(Object.keys(this.cacheNodeID));\n\n        // Gets the first state name number\n        let stateNameNumber = states.size + 1;\n\n        // Keep generating state names and incrementing the number until we get unique name\n        while (states.has('s' + stateNameNumber)) {\n            stateNameNumber++;\n        }\n\n        return 's' + stateNameNumber;\n    }\n\n    /**\n     * Finds states by name\n     * @param name - the name to search for\n     * @returns a set of IDs that match the name\n     */\n    public findStates(name: string): Set<string> {\n        const foundStates: Set<string> = new Set();\n        Object.keys(this.cacheNodeID).forEach(stateName => {\n            // Get ID and display name\n            const ID = this.cacheNodeID[stateName];\n            const displayName = this.data[ID].data.displayName;\n\n            if (displayName.includes(name))\n                foundStates.add(this.cacheNodeID[stateName]);\n        });\n        return foundStates;\n    }\n\n    /**\n     * Reads the next input symbol and travels to the next state\n     */\n    public step(): void {\n        // If there's no current states, add the initial ones and leave it at that\n        if (this.configInit()) {\n            this.setCurrentConfigs(this.getCurrentConfigs());\n            return;\n        }\n\n        // Remember the new set of current states\n        const newCurrentConfigs: Set<AutomataConfig> = new Set();\n\n        // Goes through each config\n        for (const config of this.getCurrentConfigs()) {\n            // Computes epsilon-like moves\n            [AutomataCharacters.Epsilon,\n                AutomataCharacters.NonEmptySymbol,\n                AutomataCharacters.CircleSymbol,\n                AutomataCharacters.UncircleSymbol].forEach(character => {\n\n                // Gets epsilon move target states\n                let epsilonTargetStates = this.getTargetStates(character, config.state);\n\n                // If there are none, change to empty array\n                if (!epsilonTargetStates) {\n                    epsilonTargetStates = [];\n                }\n\n                // Apply this transition for each epsilon target state\n                for (const targetState of epsilonTargetStates) {\n                    // Gets edge ID\n                    const edgeID = this.cacheEdgeID[character][config.state][targetState];\n\n                    // Gets new config by applying transition\n                    const newConfig = this.applyTransition(config, edgeID, true);\n\n                    // If the transition was succesful, add\n                    if (newConfig) {\n                        newCurrentConfigs.add(newConfig);\n                    }\n                }\n            });\n\n            // Gets first input symbol\n            const inputSymbol: string = config.getInputSymbol();\n\n            // If input symbol exists\n            if (inputSymbol) {\n                // Gets target states, from normal moves\n                let normalTargetStates = this.getTargetStates(inputSymbol, config.state);\n\n                // If they are null, replace with empty array\n                if (!normalTargetStates) {\n                    normalTargetStates = [];\n                }\n\n                // Apply this transition for each normal target state\n                for (const targetState of normalTargetStates) {\n                    // Gets edge ID\n                    const edgeID = this.cacheEdgeID[inputSymbol][config.state][targetState];\n\n                    // Gets new config by applying transition\n                    const newConfig = this.applyTransition(config, edgeID, false);\n\n                    // If the transition was succesful, add\n                    if (newConfig) {\n                        newCurrentConfigs.add(newConfig);\n                    }\n                }\n            }\n        }\n\n        // Updates this set of current states with the new one\n        this.setCurrentConfigs(newCurrentConfigs);\n    }\n\n    /**\n     * Serializes this automata into a JSON string (does not include animations)\n     * @returns JSON string representing this automata\n     */\n    public serialize(): string {\n        // Sets up a quick function to convert str --> Set to str --> array\n        function setToArrayMap(setObj: any) {\n            return _.mapValues(setObj, set => [...set]);\n        }\n\n        // Initial JSON\n        let json: any = {\n            modelName: this.getModelName(),\n            name: this.name,\n            data: {},\n            cacheEdgeID: this.cacheEdgeID,\n            cacheNodeID: this.cacheNodeID,\n            cacheInitialStates: [...this.cacheInitialStates],\n            cacheFinalStates : [...this.cacheFinalStates]\n        };\n\n        // Goes through items, checking if they're good\n        for (const itemID in this.data) {\n            // Get item\n            const item: any = this.data[itemID];\n\n            // If there's no 'classes' property, it's a transition and it's good to go\n            if (!item.classes)\n                json.data[itemID] = item;\n            else {\n                // If there's no 'parent' class, it's a normal node and can be added\n                if (![...item.classes].includes(\"parent\")) {\n                    json.data[itemID] = item;\n                } else {\n                    json.data[itemID] = {\n                        data: item.data,\n                        position: item.position,\n                        autoWidth: item.autoWidth,\n                        autoHeight: item.autoHeight,\n                        group: item.group,\n                        classes: [...item.classes]\n                    };\n                }\n            }\n        }\n\n        return JSON.stringify(json);\n    }\n\n    /**\n     * Gets the machines that have this state (proxy of AutomataMachineCache method)\n     * @param state - the state to get the machines of\n     * @returns a set of initial state names that can reach that state\n     */\n    public getMachine(state: string) : Set<string> {\n        // Stores open and closed states\n        const openStates: Set<string> = new Set([state]), closedStates: Set<string> = new Set();\n\n        // Initial states to return\n        const initialStates: Set<string> = new Set();\n\n        // Searches through open states\n        while (openStates.size > 0) {\n            // Pop an open state\n            const poppedState = [...openStates][0];\n            openStates.delete(poppedState);\n\n            // Put it in closed\n            closedStates.add(poppedState);\n\n            // If popped state is initial, add it\n            if (this.getState(poppedState).data.initial)\n                initialStates.add(poppedState);\n\n            // Gets states that can go to this popped state\n            const sourceMappings = this.cacheTransition.getSourceMappings(poppedState);\n            Object.keys(sourceMappings).forEach((state: any) => {\n                if (!closedStates.has(state))\n                    openStates.add(state);\n            });\n        }\n\n        return initialStates;\n    }\n\n    /**\n     * Gets the machines that have this state, with transitions\n     * @param state - the state name to get the machines of\n     * @returns a set of IDs of all the objects within the machines\n     */\n    public getMachineWithTransitions(state: string) : Set<string> {\n        // Gets the initial states from this state\n        const initialStates: Set<string> = this.getMachine(state);\n\n        // Gets all the states in these machines\n        let states: Set<string> = new Set();\n        for (const initialState of initialStates) {\n            const reachableStates = this.getReachableStates(initialState);\n            reachableStates.forEach((x) => states.add(x));\n        }\n\n        // Converts state names to IDs\n        states = new Set([...states].map((state) => this.getState(state).data.id));\n\n        // Gets all transitions from these states\n        const items: Set<string> = new Set(states);\n        for (const sourceStateID of states) {\n            // Gets state name\n            const sourceState = this.getStateById(sourceStateID).data.name;\n\n            const mapping = this.cacheTransition.getTargetMappings(sourceState);\n            Object.keys(mapping).forEach((targetState) => {\n                mapping[targetState].forEach((symbol: any) => {\n                    // Gets transition and adds to set\n                    const transition = this.getTransition(symbol, sourceState, targetState);\n                    items.add(transition.data.id);\n                });\n            });\n        }\n        return items;\n    }\n\n    /**\n     * Gets the states reachable by a state\n     * @param state - the state name\n     * @returns a set of states reachable by the specified state\n     */\n    public getReachableStates(state: string) : Set<string> {\n        // Stores open and closed states\n        const openStates: Set<string> = new Set([state]), closedStates: Set<string> = new Set();\n\n        // Searches through open states\n        while (openStates.size > 0) {\n            // Pop an open state\n            const poppedState = [...openStates][0];\n            openStates.delete(poppedState);\n\n            // Put it in closed\n            closedStates.add(poppedState);\n\n            // Gets next states from this popped state\n            const targetMappings = this.cacheTransition.getTargetMappings(poppedState);\n            Object.keys(targetMappings).forEach((state: any) => {\n                if (!closedStates.has(state))\n                    openStates.add(state);\n            });\n        }\n\n        return closedStates;\n    }\n\n    /**\n     * Gets the final states reachable by an initial state\n     * @param initialState - the initial state name\n     * @returns a set of final states reachable by the specified initial state\n     */\n    public getReachableFinalStates(initialState: string) : Set<string> {\n        // Stores open and closed states\n        const openStates: Set<string> = new Set([initialState]), closedStates: Set<string> = new Set();\n\n        // Stores final states to return\n        const finalStates: Set<string> = new Set();\n\n        // Searches through open states\n        while (openStates.size > 0) {\n            // Pop an open state\n            const poppedState = [...openStates][0];\n            openStates.delete(poppedState);\n\n            // Put it in closed\n            closedStates.add(poppedState);\n\n            // If it's final, add to set\n            if (this.getState(poppedState).data.final)\n                finalStates.add(poppedState);\n\n            // Gets next states from this popped state\n            const targetMappings = this.cacheTransition.getTargetMappings(poppedState);\n            Object.keys(targetMappings).forEach((state: any) => {\n                if (!closedStates.has(state))\n                    openStates.add(state);\n            });\n        }\n\n        return finalStates;\n    }\n\n    /**\n     * Gets the alphabet of the machine belonging to this state\n     * @param state - the state to get the alphabet of\n     */\n    public getAlphabet(state: string) : Set<string> {\n        // Stores states we need to look through; initially add initial states from this state\n        const openStates: string[] = [...this.getMachine(state)];\n\n        // Stores states we've already looked through\n        const closedStates: Set<string> = new Set();\n\n        // Stores alphabet to return\n        const alphabet: Set<string> = new Set();\n\n        // Goes through state fringe\n        while (openStates.length > 0) {\n            // Pops the next state\n            const sourceState: string | undefined = openStates.pop();\n\n            // If we've run out, then stop\n            if (!sourceState)\n                break;\n\n            // We've now \"looked\" at this one\n            closedStates.add(sourceState);\n\n            // If we have no transitions with this, move on\n            if (!this.cacheTransition.getTargetMappings(sourceState))\n                continue;\n\n            // For every target state\n            for (const targetState of Object.keys(this.cacheTransition.getTargetMappings(sourceState))) {\n                // If it's not closed, add to open states\n                if (!closedStates.has(targetState))\n                    openStates.push(targetState);\n\n                // Gets the symbols we can use from src to target and add them to the set\n                const symbols: Set<string> = this.cacheTransition.getTransitions(sourceState, targetState);\n                symbols.forEach((s) => alphabet.add(s));\n            }\n        }\n\n        // Return alphabet\n        return alphabet;\n    }\n\n    /**\n     * Returns a list of the current configurations of the automata\n     */\n    public abstract getCurrentConfigs(): Set<AutomataConfig>;\n\n    /**\n     * Deletes a config and saves the new set of configs without this config\n     * @param configArg - the config to delete\n     */\n    public deleteConfig(configArg: AutomataConfig) {\n        let configs: Set<AutomataConfig> = this.getCurrentConfigs();\n        configs = new Set([...configs].filter(config => config !== configArg));\n        this.setCurrentConfigs(configs);\n    }\n\n    /**\n     * Deletes all but the argument config and saves the new set of configs with just this config\n     * @param configArg - the config to prune\n     * @returns the set of state names that are no longer selected\n     */\n    public pruneConfig(configArg: AutomataConfig): Set<string> {\n        const configs: Set<AutomataConfig> = this.getCurrentConfigs();\n        const newConfigs = new Set([...configs].filter(config => config === configArg));\n        this.setCurrentConfigs(newConfigs);\n\n        return new Set([...configs]\n            .filter(config => config !== configArg)\n            .map(config => config.state));\n    }\n\n    /**\n     * Resets the animation of this automata\n     */\n    public abstract reset(): void;\n\n    /**\n     * The outcome of the automata: undecided, accept, reject\n     */\n    public abstract getOutcome(): Outcome;\n\n    /**\n     * Returns the name of this model\n     */\n    public abstract getModelName(): string;\n\n    /**\n     * Gets the target states from an input symbol and source state\n     * @param inputSymbol - the input symbol of the transition\n     * @param sourceState - the source state of the transition\n     * @returns an array of target state IDs if the transition exists, null if it doesn't\n     */\n    protected getTargetStates(inputSymbol: string, sourceState: string): any[] | null {\n        // If a transition for this state exists\n        if (this.cacheEdgeID[inputSymbol]) {\n            if (this.cacheEdgeID[inputSymbol][sourceState]) {\n                // Gets all the target states\n                return Object.keys(this.cacheEdgeID[inputSymbol][sourceState]);\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Sets the set of configs to a new one\n     * @param newConfigs - a new set of configs\n     */\n    protected abstract setCurrentConfigs(newConfigs: Set<AutomataConfig>): void;\n\n    /**\n     * Sets up initial configurations if needed\n     * @returns true if initial configs were added, false if not\n     */\n    protected abstract configInit(): boolean;\n\n    /**\n     * Applies a transition from a source config to a destination config\n     * @param srcConfig - the config to start from\n     * @param edgeID - the ID of the transition to take\n     * @param epsilonMove - true if it's an epsilon move, false if not\n     * @returns the new config if this transition was successful, null if not\n     */\n    protected abstract applyTransition(srcConfig: AutomataConfig, edgeID: number, epsilonMove: boolean): AutomataConfig | null;\n}\n","/**\n * A configuration that the automata could be in\n */\nexport default class AutomataConfig {\n    /** The current state this config is in */\n    private readonly _state: string;\n\n    /** The input this config has */\n    private readonly _input: string;\n\n    /**\n     * Creates an automata configuration\n     * @param state - the current state this config is on\n     * @param input - the current input this config has\n     */\n    public constructor(state: string, input: string) {\n        this._state = state;\n        this._input = input;\n    }\n\n    /**\n     * The current state this config is in\n     */\n    get state(): string {\n        return this._state;\n    }\n\n    /**\n     * Gets the length of the input\n     */\n    public getInputLength(): number {\n        return this._input.length;\n    }\n\n    /**\n     * Gets the selected input symbol of this configuration\n     */\n    public getInputSymbol(): string {\n        return this._input[0];\n    }\n\n    /**\n     * Gets the input string minus the selected input\n     */\n    public getTruncatedInput(): string {\n        return this._input.slice(1);\n    }\n\n    /**\n     * Gets whole input\n     */\n    public getInput(): string {\n        return String(this._input);\n    }\n}","import Automata from '@/classes/Automata';\nimport { Outcome } from '@/classes/Outcome';\nimport AutomataConfig from \"@/classes/AutomataConfig\";\nimport TuringMachineTape from \"@/classes/TuringMachineTape\";\nimport Vue from 'vue';\n\n/**\n * Implementation of a finite automata\n */\nexport default class FiniteAutomata extends Automata {\n    /** The current configs we're on */\n    private currentConfigs: Set<AutomataConfig> = new Set();\n\n    public getModelName(): string {\n        return \"Finite Automata\";\n    }\n\n    public getOutcome(): Outcome {\n        // If we have no surviving configs, fail\n        if (this.currentConfigs.size === 0) {\n            return Outcome.REJECT;\n        }\n\n        // Checks if any of our current configs are on a final state\n        for (const config of this.currentConfigs) {\n            // If we haven't exhuasted the whole input yet, it hasn't accepted\n            if (config.getInputLength() > 0)\n                continue;\n\n            // Gets ID of state of this config\n            const currentStateID = this.cacheNodeID[config.state];\n\n            // If this is final, we're finished\n            if (this.data[currentStateID].data.final)\n                return Outcome.ACCEPT;\n        }\n\n        // We still have configs, but none of them accept yet\n        return Outcome.UNDECIDED;\n    }\n\n    protected configInit(): boolean {\n        // If there is an outcome\n        if (this.getOutcome() !== Outcome.UNDECIDED) {\n            // Clear all the old configs\n            Vue.set(this, \"currentConfigs\", new Set());\n\n            // Add initial configs\n            for (const initialState of this.cacheInitialStates) {\n                this.currentConfigs.add(new AutomataConfig(initialState, this.inputString));\n            }\n            return true;\n        }\n        return false;\n    }\n\n    protected applyTransition(srcConfig: AutomataConfig, edgeID: number, epsilonMove: boolean): AutomataConfig {\n        // Gets target state ID and target state\n        const targetStateID = this.data[edgeID].data.target;\n        const targetState = this.data[targetStateID];\n\n        // Truncates input to get new input (if it's not an epsilon move)\n        let newInput = srcConfig.getInput();\n        if (!epsilonMove)\n            newInput = srcConfig.getTruncatedInput();\n\n        // Returns new config\n        return new AutomataConfig(targetState.data.name, newInput);\n    }\n\n    getCurrentConfigs(): Set<AutomataConfig> {\n        return this.currentConfigs;\n    }\n\n    protected setCurrentConfigs(newConfigs: Set<AutomataConfig>): void {\n        Vue.set(this, 'currentConfigs', newConfigs);\n        //this.currentConfigs = newConfigs;\n    }\n\n    public reset(): void {\n        // Resets configs and clears input string\n        Vue.set(this, \"currentConfigs\", new Set());\n        Vue.set(this, \"inputString\", '');\n    }\n}\n","import AutomataConfig from \"@/classes/AutomataConfig\";\n\n/**\n * A configuration that the pushdown automata could be in\n */\nexport default class PushdownAutomataConfig extends AutomataConfig {\n    /** The current stack this config has */\n    private readonly _stack: string[];\n    /**\n     * Creates an automata configuration\n     * @param state - the current state this config is on\n     * @param input - the current input this config has\n     * @param stack - the current stack this config has\n     */\n    public constructor(state: string, input: string, stack: string[]) {\n        super(state, input);\n        this._stack = stack;\n    }\n\n    /**\n     * The current stack this config has\n     */\n    get stack(): string[] {\n        return this._stack;\n    }\n\n    public stackAsString(): string {\n        return ['⊥', ...this.stack]\n            .filter((s) => s !== null) // Removes nulls\n            .join(\" ; \"); // Join them all into a string\n    }\n}\n","import Automata from \"@/classes/Automata\";\nimport {Outcome} from \"@/classes/Outcome\";\nimport AutomataConfig from \"@/classes/AutomataConfig\";\nimport PushdownAutomataConfig from \"@/classes/PushdownAutomataConfig\";\nimport Vue from \"vue\";\n\n/**\n * Implementation of a push-down automata\n * For stack symbols, use \"__empty\" for an empty stack symbol and null for epsilon (any stack symbol)\n */\nexport default class PushdownAutomata extends Automata {\n    /** The current configs we're on */\n    private currentConfigs: Set<PushdownAutomataConfig> = new Set();\n\n    /** If true, the PDA will accept by empty stack */\n    public acceptByEmptyStack: boolean = false;\n\n    public getModelName(): string {\n        return \"Pushdown Automata\";\n    }\n\n    public getCurrentConfigs(): Set<AutomataConfig> {\n        return this.currentConfigs;\n    }\n\n    protected setCurrentConfigs(newConfigs: Set<PushdownAutomataConfig>): void {\n        this.currentConfigs = newConfigs;\n    }\n\n    protected configInit(): boolean {\n        // If there is an outcome\n        if (this.getOutcome() !== Outcome.UNDECIDED) {\n            // Clear all the old configs\n            Vue.set(this, \"currentConfigs\", new Set());\n\n            // Add initial configs\n            for (const initialState of this.cacheInitialStates) {\n                this.currentConfigs.add(new PushdownAutomataConfig(initialState, this.inputString, []));\n            }\n            return true;\n        }\n        return false;\n    }\n\n    protected applyTransition(srcConfig: PushdownAutomataConfig, edgeID: number, epsilonMove: boolean): PushdownAutomataConfig | null {\n        // If one of these conditions is true, do the transition\n        const stackSymbol = this.data[edgeID].data.input === srcConfig.stack[srcConfig.stack.length - 1];\n        const emptyStack = this.data[edgeID].data.input === '⊥' && srcConfig.stack.length === 0;\n        const nullSymbol = this.data[edgeID].data.input === 'ε';\n        if (stackSymbol || emptyStack || nullSymbol) {\n            // Pops element off stack, then push output stack symbols\n            let newStack = srcConfig.stack;\n            if (stackSymbol)\n                newStack = newStack.slice(0, newStack.length - 1);\n            newStack = newStack.concat(this.data[edgeID].data.output);\n\n            // Gets target state ID and target state\n            const targetStateID = this.data[edgeID].data.target;\n            const targetState = this.data[targetStateID];\n\n            // Truncates input to get new input (if it's not an epsilon move)\n            let newInput = srcConfig.getInput();\n            if (!epsilonMove)\n                newInput = srcConfig.getTruncatedInput();\n\n            // Returns new config\n            return new PushdownAutomataConfig(targetState.data.name, newInput, newStack);\n        } else\n            return null;\n    }\n\n    addTransition(symbol: string, source: string, target: string, payload: any): void {\n        super.addTransition(symbol, source, target, payload);\n\n        /* Gets payload info\n         * input: the input stack symbol. Single string.\n         * output: stack symbols to put on the stack. Array of strings.\n        */\n        let {input, output} = payload;\n\n        // Converts string nulls to actual nulls\n        if (input === \"null\")\n            input = null;\n        if (output.length > 0 && output[0] === \"null\")\n            output = [];\n\n        // Gets transition ID\n        const id = this.cacheEdgeID[symbol][source][target];\n\n        // Converts output stack symbol array to string\n        const outputStr: string = output.length === 0 ? 'ε' : output.toString();\n\n        // Adds input and output stack symbols to data, and sets the label\n        this.data[id].data = {\n            ...this.data[id].data,\n            input, output,\n            label: `${symbol} ; ${input} / ${outputStr}`,\n        };\n    }\n\n    getOutcome(): Outcome {\n        // If we have no surviving states, fail\n        if (this.currentConfigs.size === 0) {\n            return Outcome.REJECT;\n        }\n\n        // Checks if any of our current states are final\n        for (const config of this.currentConfigs) {\n            // If we haven't exhausted the whole input yet, it hasn't accepted\n            if (config.getInputLength() > 0)\n                continue;\n\n            // Gets ID\n            const currentStateID = this.cacheNodeID[config.state];\n\n            // If this is final, we're finished\n            if (this.data[currentStateID].data.final)\n                return Outcome.ACCEPT;\n\n            // If this is an empty stack AND we should accept that, we're finished\n            if (config.stack.length === 0 && this.acceptByEmptyStack)\n                return Outcome.ACCEPT;\n        }\n\n        // There are still configs, but they haven't accepted yet\n        return Outcome.UNDECIDED;\n    }\n\n    reset(): void {\n        // Resets state and clears input string\n        this.currentConfigs = new Set();\n        this.inputString = '';\n    }\n}\n","/**\n * The tape of a Turing machine\n */\nexport default class TuringMachineTape {\n    /** The tape */\n    private tape: { [index: number]: string } = {};\n\n    /**\n     * Copy constructor\n     * @param initialTape - the tape to copy from\n     */\n    public constructor(initialTape: TuringMachineTape);\n\n    /**\n     * Initialises a Turing machine tape\n     * @param initialTape - the initial tape state, as a string\n     * @constructor\n     */\n    public constructor(initialTape: string);\n\n    public constructor(initialTape: any) {\n        if (typeof initialTape === \"string\") {\n            this.tape[-1] = '⊢';\n            for (let i = 0; i < initialTape.length; i++)\n                this.tape[i] = initialTape[i];\n        } else {\n            this.tape = Object.assign({}, initialTape.tape);\n        }\n    }\n\n    /**\n     * Writes to the tape\n     * @param index - the index of the tape to write to\n     * @param symbol - the symbol to write\n     */\n    public write(index: number, symbol: string) {\n        this.tape[index] = symbol;\n    }\n\n    /**\n     * Erases a symbol from the tape\n     * @param index - the index of the tape to erase from\n     */\n    public delete(index: number) {\n        delete this.tape[index];\n    }\n\n    /**\n     * Reads from the tape\n     * @param index - the index of the tape to read from\n     * @returns the symbol on the tape at that position, and null if empty\n     */\n    public read(index: number): string | null {\n        return this.tape[index] ? this.tape[index] : null;\n    }\n\n    /**\n     * The length of the tape, as defined by the written symbols\n     */\n    get length(): number {\n        return Object.keys(this.tape).length;\n    }\n\n    /**\n     * Checks if this tape is equal to another tape\n     * @param tape - the other tape to compare\n     */\n    public equals(tape: TuringMachineTape): boolean {\n        // Check if it's the same number of keys\n        if (this.length !== tape.length)\n            return false;\n\n        // Checks every value's equivalence\n        for (const key in Object.keys(this.tape)) {\n            const numberKey: number = parseInt(key);\n            if (this.read(numberKey) !== tape.read(numberKey))\n                return false;\n        }\n\n        // Assertions are OK; they're the same\n        return true;\n    }\n}","import AutomataConfig from \"@/classes/AutomataConfig\";\nimport TuringMachineTape from \"@/classes/TuringMachineTape\";\n\n/**\n * A configuration that the TM could be in\n */\nexport default class TuringMachineConfig extends AutomataConfig {\n    /** The current tape this config has */\n    private readonly _tape: TuringMachineTape;\n\n    /** The current tape index this config has */\n    private readonly _index: number;\n\n    /**\n     * Creates a TM configuration\n     * @param state - the current state this config is on\n     * @param tape - the current tape this config has\n     * @param index - the current tape index this config has\n     */\n    public constructor(state: string, tape: TuringMachineTape, index: number) {\n        super(state, \"\");\n        this._tape = tape;\n        this._index = index;\n    }\n\n    getInputSymbol(): string {\n        const symbol = this._tape.read(this._index);\n        return symbol ? symbol : \"□\";\n    }\n\n    getInputLength(): number {\n        return this._tape.length;\n    }\n\n    /**\n     * The current tape this config has\n     */\n    get tape(): TuringMachineTape {\n        return this._tape;\n    }\n\n    /**\n     * The current tape index this config has\n     */\n    get index(): number {\n        return this._index;\n    }\n\n    /**\n     * Converts tape to string\n     * @param size - the size of the window to convert the tape\n     */\n    tapeToString(size: number): string {\n        let rv: string = \"... \";\n\n        for (let i = this.index - size; i < this.index + size; i++) {\n            let s = this.tape.read(i);\n            if (s === null)\n                s = \"□\";\n            if (i === this.index)\n                s = `[${s}]`;\n            rv += (s + \",\");\n        }\n\n        return rv + \" ...\";\n    }\n}","/**\n * Used for circling and uncircling\n */\nexport class Circle {\n    /**\n     * Circles a letter / number\n     * @param char - the character to circle\n     * @returns the circled character, or the same char if it can't be circled\n     */\n    public static circle(char: string): string {\n        // If this is already circled, return the same char\n        if (this.isCircled(char))\n            return char;\n\n        // If it's zero\n        if (char === '0')\n            return String.fromCharCode(9450);\n\n        // If the char is a number\n        else if (!!+char)\n            return String.fromCharCode(parseInt(char) + 9311);\n\n        // If the char is upper-case\n        else if (char === char.toUpperCase())\n            return String.fromCharCode(char.charCodeAt(0) + 9333);\n\n        // If the char is lower-case\n        else if (char === char.toLowerCase())\n            return String.fromCharCode(char.charCodeAt(0) + 9327);\n\n        // It's none of them, so return the same char\n        else\n            return char;\n    }\n\n    /**\n     * Uncircles a letter / number\n     * @param char - the character to uncircle\n     * @returns the uncircled character, or the same char if it can't be uncircled\n     */\n    public static uncircle(char: string): string {\n        // Gets char code\n        const charCode: number = char.charCodeAt(0);\n\n        // If this is already uncircled, return the same char\n        if (!this.isCircled(char))\n            return char;\n\n        // If it's zero\n        if (charCode === 9450)\n            return '0';\n\n        // If it's a number\n        else if (charCode >= 9312 && charCode <= 9320)\n            return \"\" + (charCode - 9311);\n\n        // If it's upper-case\n        else if (charCode >= 9398 && charCode <= 9423)\n            return String.fromCharCode(charCode - 9333);\n\n        // If it's lower-case\n        else if (charCode >= 9424 && charCode <= 9449)\n            return String.fromCharCode(charCode - 9327);\n\n        // If it's none, return the same char\n        else\n            return char;\n    }\n\n    /**\n     * Checks if a character is circled\n     * @param char - the character to check if its circled\n     * @returns true if char is circled, false if not\n     */\n    public static isCircled(char: string): boolean {\n        return char.charCodeAt(0) >= 9312 && char.charCodeAt(0) <= 9450;\n    }\n\n    /**\n     * Checks if a character is uncircled\n     * @param char - the character to check if its uncircled\n     * @returns true if char is uncircled, false if not\n     */\n    public static isUncircled(char: string): boolean {\n        return (!!+char) || // Numeric\n                !!char.match(/[a-z]/i); // Letter\n    }\n}\n","import Automata from \"@/classes/Automata\";\nimport {Outcome} from \"@/classes/Outcome\";\nimport TuringMachineTape from \"@/classes/TuringMachineTape\";\nimport TuringMachineConfig from \"@/classes/TuringMachineConfig\";\nimport Vue from \"vue\";\nimport {AutomataCharacters} from '@/classes/AutomataCharacters';\nimport {Circle} from '@/classes/Circle';\n\n/**\n * Implementation of a Turing machine\n */\nexport default class TuringMachine extends Automata {\n    /** The current configurations we're on */\n    private currentConfigs: Set<TuringMachineConfig> = new Set();\n\n    public getModelName(): string {\n        return \"Turing Machine\";\n    }\n\n    public getCurrentConfigs(): Set<TuringMachineConfig> {\n        return this.currentConfigs;\n    }\n\n    protected setCurrentConfigs(newConfigs: Set<TuringMachineConfig>): void {\n        this.currentConfigs = newConfigs;\n    }\n\n    addTransition(symbol: string, source: string, target: string, payload: any): void {\n        const nonEmptySymbol: boolean = symbol === AutomataCharacters.NonEmptySymbol;\n        const circleSymbol: boolean = symbol === AutomataCharacters.CircleSymbol;\n        const uncircleSymbol: boolean = symbol === AutomataCharacters.UncircleSymbol;\n        // If transition looks for non-empty symbol or circle symbol, disguise it as an epsilon move\n        /*if (nonEmptySymbol || circleSymbol || uncircleSymbol) {\n            symbol = AutomataCharacters.Epsilon;\n        }\n\n        const readTapeSymbol = nonEmptySymbol ? AutomataCharacters.NonEmptySymbol :\n            uncircleSymbol ? AutomataCharacters.UncircleSymbol :\n            circleSymbol ? AutomataCharacters.CircleSymbol : symbol;*/\n        const readTapeSymbol = symbol;\n\n        super.addTransition(symbol, source, target, payload);\n\n        /* Gets payload info\n         * writeTapeSymbol: the symbol to write on the tape\n         * direction: L to go left, R to go right, S to stay\n        */\n        let {writeTapeSymbol, direction} = payload;\n\n        // Gets transition ID\n        const id = this.cacheEdgeID[symbol][source][target];\n\n        // Adds payload to data, and sets the label\n        Vue.set(this.data, id, {\n            data: {\n                ...this.data[id].data,\n                writeTapeSymbol, direction, readTapeSymbol,\n                label: readTapeSymbol + ' ; ' + writeTapeSymbol + ' , ' + direction,\n            },\n        });\n    }\n\n    protected configInit(): boolean {\n        // If there is an outcome\n        if (this.getOutcome() !== Outcome.UNDECIDED) {\n            // Clear all the old configs\n            Vue.set(this, \"currentConfigs\", new Set());\n\n            // Add initial configs\n            for (const initialState of this.cacheInitialStates) {\n                this.currentConfigs.add(new TuringMachineConfig(initialState, new TuringMachineTape(this.inputString), 0));\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Applies a transition from a source TM config to a destination TM config\n     * @param srcConfig - the config of the TM\n     * @param edgeID - the ID of the transition to take\n     * @param epsilonMove - true if epsilon move, false if not\n     * @returns the new config of the TM\n     */\n    protected applyTransition(srcConfig: TuringMachineConfig, edgeID: number, epsilonMove: boolean): TuringMachineConfig | null {\n        const nonEmptySymbol: boolean = this.data[edgeID].data.readTapeSymbol === AutomataCharacters.NonEmptySymbol;\n        const circledSymbol: boolean = this.data[edgeID].data.readTapeSymbol === AutomataCharacters.CircleSymbol;\n        const uncircledSymbol: boolean = this.data[edgeID].data.readTapeSymbol === AutomataCharacters.UncircleSymbol;\n\n        // Quit if...\n        if ((nonEmptySymbol && srcConfig.getInputSymbol() === AutomataCharacters.EmptySymbol) || // We're looking for non-empty symbol and we find empty symbol\n            (circledSymbol && !Circle.isCircled(srcConfig.getInputSymbol())) || // We're looking for circled symbols and we find an uncircled symbol\n            (uncircledSymbol && !Circle.isUncircled(srcConfig.getInputSymbol())) || // We're looking for uncircled symbols and we find something that's not un-circled\n            (srcConfig.getInputSymbol() !== this.data[edgeID].data.readTapeSymbol && !epsilonMove)) // Selected tape symbol is not the transition symbol (as long as it's not an epsilon move)\n            return null;\n\n        // Gets src state info\n        let [srcTape, srcTapeIndex] = [srcConfig.tape, srcConfig.index];\n\n        // Creates new tape\n        const newTape: TuringMachineTape = new TuringMachineTape(srcTape);\n\n        // If there isn't a \"write nothing\" symbol (if we have to write something)\n        if (this.data[edgeID].data.writeTapeSymbol !== AutomataCharacters.WriteNothingSymbol) {\n            // If we want to circle\n            if (this.data[edgeID].data.writeTapeSymbol === AutomataCharacters.CircleSymbol)\n                newTape.write(srcTapeIndex, Circle.circle(srcConfig.getInputSymbol()));\n            // If we want to uncircle\n            else if (this.data[edgeID].data.writeTapeSymbol === AutomataCharacters.UncircleSymbol)\n                newTape.write(srcTapeIndex, Circle.uncircle(srcConfig.getInputSymbol()));\n            // If write symbol is \"empty\", erase, otherwise write new symbol\n            else if (this.data[edgeID].data.writeTapeSymbol === AutomataCharacters.EmptySymbol)\n                newTape.delete(srcTapeIndex);\n            else\n                newTape.write(srcTapeIndex, this.data[edgeID].data.writeTapeSymbol);\n        }\n\n        // Make tape index go left or right\n        if (this.data[edgeID].data.direction === 'L')\n            srcTapeIndex--;\n        else if (this.data[edgeID].data.direction === 'R')\n            srcTapeIndex++;\n\n        // Gets target state ID and target state\n        const targetStateID = this.data[edgeID].data.target;\n        const targetState = this.data[targetStateID];\n\n        // Returns new state\n        return new TuringMachineConfig(targetState.data.name, newTape, srcTapeIndex);\n    }\n\n    getOutcome(): Outcome {\n        // If we have no surviving configs, fail\n        if (this.currentConfigs.size === 0) {\n            return Outcome.REJECT;\n        }\n\n        // Checks if any of our current configs are on a final state\n        for (const config of this.currentConfigs) {\n            // Gets ID of current state\n            const currentStateID = this.cacheNodeID[config.state];\n\n            // If this is final, we're finished\n            if (this.data[currentStateID].data.final)\n                return Outcome.ACCEPT;\n        }\n\n        // There are still configs, but they haven't accepted yet\n        return Outcome.UNDECIDED;\n    }\n\n    reset(): void {\n        // Resets state and clears input string\n        this.currentConfigs = new Set();\n        this.inputString = '';\n    }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"configTable\"}},[_c('h4',[_vm._v(\"Configuration table\")]),(_vm.configs === undefined || _vm.configs.size === 0)?_c('p',[_vm._v(\"No configurations!\")]):_c('b-table',{attrs:{\"fields\":_vm.fields,\"items\":_vm.tableItems},on:{\"row-clicked\":_vm.onRowClicked},scopedSlots:_vm._u([{key:\"row-details\",fn:function(data){return [_c('b-button',{staticClass:\"mr-2\",attrs:{\"variant\":\"danger\"},on:{\"click\":function($event){return _vm.$emit('onDeleteConfig', data.item._config)}}},[_vm._v(\"Delete\")]),_c('b-button',{attrs:{\"variant\":\"warning\"},on:{\"click\":function($event){return _vm.$emit('onPruneConfig', data.item._config)}}},[_vm._v(\"Prune\")])]}}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop, Vue} from 'vue-property-decorator';\nimport {BButton, BTable} from 'bootstrap-vue';\nimport AutomataConfig from '@/classes/AutomataConfig';\nimport PushdownAutomataConfig from \"@/classes/PushdownAutomataConfig\";\nimport TuringMachineConfig from \"@/classes/TuringMachineConfig\";\nimport Automata from \"@/classes/Automata\";\nimport FiniteAutomata from \"@/classes/FiniteAutomata\";\nimport PushdownAutomata from \"@/classes/PushdownAutomata\";\nimport TuringMachine from \"@/classes/TuringMachine\";\n\n@Component({\n    components: {\n        BTable, BButton\n    }\n})\nexport default class ConfigTable extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    @Prop() public readonly configs: Set<AutomataConfig> | undefined;\n\n    /**\n     * The fields that will appear on the table\n     */\n    get fields() {\n        const fields: string[] = [\"state\"];\n\n        if (this.automata instanceof FiniteAutomata)\n            fields.push(\"remaining_input\");\n        else if (this.automata instanceof PushdownAutomata) {\n            fields.push(\"remaining_input\");\n            fields.push(\"stack\");\n        }\n        else if (this.automata instanceof TuringMachine)\n            fields.push(\"tape\");\n\n        return fields;\n    }\n\n    /**\n     * Table items from config prop\n     * @returns array of items if configs is defined, null if undefined\n     */\n    get tableItems() {\n        // If configs is not undefined\n        if (this.configs !== undefined) {\n            // Creates array of items\n            let items = [];\n\n            // For each config, add table item\n            for (const config of this.configs) {\n\n                // If this is a pushdown automata\n                if (config instanceof PushdownAutomataConfig) {\n                    const pConfig: PushdownAutomataConfig = (config as PushdownAutomataConfig);\n                    items.push({\n                        \"state\": this.automata.getState(config.state).data.displayName,\n                        \"remaining_input\": config.getInputLength() > 0 ? config.getInput() : \"Empty\",\n                        \"stack\": pConfig.stackAsString(),\n\n                        \"_showDetails\": false,\n                        \"_config\": pConfig\n                    });\n                }\n\n                // If this is a turing machine\n                else if (config instanceof TuringMachineConfig) {\n                    const tConfig: TuringMachineConfig = (config as TuringMachineConfig);\n                    items.push({\n                        \"state\": this.automata.getState(config.state).data.displayName,\n                        \"tape\": tConfig.tapeToString(5),\n\n                        \"_showDetails\": false,\n                        \"_config\": tConfig\n                    });\n                }\n\n                // If this is a finite automata\n                else {\n                    items.push({\n                        \"state\": this.automata.getState(config.state).data.displayName,\n                        \"remaining_input\": config.getInputLength() > 0 ? config.getInput() : \"Empty\",\n\n                        \"_showDetails\": false,\n                        \"_config\": config\n                    });\n                }\n            }\n\n            // Return array of items\n            return items;\n        }\n        return null;\n    }\n\n    /**\n     * When a user clicks on a row\n     */\n    private onRowClicked(item: any, index: any, event: any) {\n        item._showDetails = !item._showDetails;\n    }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport uuid from \"uuid/v1\";\nimport {Component, Prop, Watch} from 'vue-property-decorator';\nimport Automata from \"@/classes/Automata\";\nimport FiniteAutomata from \"@/classes/FiniteAutomata\";\nimport PushdownAutomata from \"@/classes/PushdownAutomata\";\nimport TuringMachine from \"@/classes/TuringMachine\";\nimport {AutomataCharacters} from '@/classes/AutomataCharacters';\nimport $ from \"jquery\";\nimport OutlineUpdateEventHandler from \"@/events/OutlineUpdateEventHandler\";\n\n/** The types of modes the modal can be in */\nexport enum NewTransitionModalMode {\n    /** Will add a new transition */\n    ADD,\n    /** Will edit an existing transition */\n    EDIT\n}\n\n@Component\nexport default class NewTransitionModal extends Vue {\n    /** The mode the modal is in right now */\n    private mode: NewTransitionModalMode = NewTransitionModalMode.ADD;\n\n    /** True if modal is visible, false if not */\n    private isModalVisible: boolean = false;\n\n    /** The inputted (raw) transition symbol */\n    private inputtedTransitionSymbol: string = \"\";\n\n    /** The type of the automata we're editing */\n    private automataType: \"FA\" | \"PDA\" | \"TM\" = \"FA\";\n\n    /** The existing symbols between these two states that we cannot overwrite */\n    private existingSymbols: Set<String> = new Set();\n\n    /** State of inputs if it's a PDA */\n    private pdaState: any = {\n        inputtedInputStackSymbol: \"\",\n        isEmptyStackSymbol: false,\n        isAnySymbol: false,\n        inputtedOutputStackSymbols: [\"\"]\n    };\n\n    /** State of inputs if it's a TM */\n    private tmState: any = {\n        isEmptySymbol: false,\n        isNonEmptySymbol: false,\n        isCircledSymbol: false,\n        isUncircledSymbol: false,\n        isStartTapeSymbol: false,\n\n        isWriteEmptySymbol: false,\n        isWriteNothing: false,\n        isCircle: false,\n        isUncircle: false,\n\n        symbolToWrite: '',\n        direction: 'L'\n    };\n\n    /** If true, this is an epsilon move. False if not */\n    private isEpsilonMove: boolean = false;\n\n    /** Callback function after adding/editing a transition */\n    private callback!: (symbol: string, payload: any) => void;\n\n    private get NewTransitionModalMode() {\n        return NewTransitionModalMode;\n    }\n\n    /**\n     * The real transition symbol\n     */\n    private get transitionSymbol() {\n        // Epsilon move\n        if (this.isEpsilonMove)\n            return AutomataCharacters.Epsilon;\n\n        if (this.tmState.isEmptySymbol)\n            return AutomataCharacters.EmptySymbol;\n\n        if (this.tmState.isNonEmptySymbol)\n            return AutomataCharacters.NonEmptySymbol;\n\n        if (this.tmState.isCircledSymbol)\n            return AutomataCharacters.CircleSymbol;\n\n        if (this.tmState.isUncircledSymbol)\n            return AutomataCharacters.UncircleSymbol;\n\n        if (this.tmState.isStartTapeSymbol)\n            return AutomataCharacters.StartTapeSymbol;\n\n        // Default value\n        if (this.inputtedTransitionSymbol)\n            return this.inputtedTransitionSymbol;\n        else\n            return 'a';\n    }\n\n    /**\n     * The real inputted stack symbol (PDA only)\n     */\n    private get inputStackSymbol() {\n        if (this.pdaState.isEmptyStackSymbol)\n            return AutomataCharacters.EmptyStackSymbol;\n        if (this.pdaState.isAnySymbol)\n            return AutomataCharacters.Epsilon;\n        return this.pdaState.inputtedInputStackSymbol ? this.pdaState.inputtedInputStackSymbol : \"A\";\n    }\n\n    /**\n     * The real output stack symbols (PDA only)\n     */\n    private get outputStackSymbols() {\n        return this.pdaState.inputtedOutputStackSymbols.map((symbol: any) => symbol ? symbol : 'A');\n    }\n\n    /**\n     * The payload needed to pass into the automata method\n     */\n    private get payload() {\n        if (this.automataType === \"PDA\")\n            return {\n                input: this.inputStackSymbol,\n                output: this.outputStackSymbols\n            };\n        if (this.automataType === \"TM\")\n            return {\n                writeTapeSymbol: this.tmState.isWriteEmptySymbol ? AutomataCharacters.EmptySymbol :\n                    this.tmState.isWriteNothing ? AutomataCharacters.WriteNothingSymbol :\n                    this.tmState.isCircle ? AutomataCharacters.CircleSymbol :\n                    this.tmState.isUncircle ? AutomataCharacters.UncircleSymbol :\n                    this.tmState.symbolToWrite ? this.tmState.symbolToWrite : 'a',\n                direction: this.tmState.direction\n            };\n        return {};\n    }\n\n    private mounted() {\n        // Hacky jQuery event that creates automata upon 'enter' keypress\n        $(document).on('keypress', e => {\n            // If user pressed enter *and* modal is visibile, add automata\n            if (e.key === \"Enter\" && this.isModalVisible) {\n                if (this.mode === NewTransitionModalMode.ADD)\n                    this.onAddClick();\n                else\n                    this.onEditClick();\n            }\n        });\n    }\n\n    /**\n     * Shows the modal, \"add\" mode\n     * @param automataType - the type of automata to make a transition for\n     * @param existingSymbols - the symbols that already exist as a transition\n     * @param callback - the callback function when a transition has been made\n     */\n    public show(automataType: \"FA\" | \"PDA\" | \"TM\", existingSymbols: Set<string>, callback: (symbol: string, payload: any) => void) {\n        // Sets mode\n        this.mode = NewTransitionModalMode.ADD;\n\n        // Sets existing symbols\n        this.existingSymbols = existingSymbols;\n\n        // Stores automata type\n        this.automataType = automataType;\n\n        // Clears data\n        this.clearData();\n\n        // Stores callback\n        this.callback = callback;\n\n        // Shows the modal\n        this.$bvModal.show(\"newTransitionModal\");\n    }\n\n    /**\n     * Shows the modal, \"edit\" mode\n     * @param automataType - the type of automata to edit a transition for\n     * @param existingSymbols - the symbols that already exist as a transition\n     * @param transition - the transition data\n     * @param callback - the callback function when the transition has been edited\n     */\n    public showEdit(automataType: \"FA\" | \"PDA\" | \"TM\", existingSymbols: Set<string>, transition: any, callback: (symbol: string, payload: any) => void) {\n        // Sets mode\n        this.mode = NewTransitionModalMode.EDIT;\n\n        // Sets existing symbols\n        this.existingSymbols = existingSymbols;\n\n        // Stores automata type\n        this.automataType = automataType;\n\n        // Clears data\n        this.clearData();\n\n        // Stores callback\n        this.callback = callback;\n\n        // Fills in data\n        this.isEpsilonMove = transition.symbol === AutomataCharacters.Epsilon;\n\n        if (this.automataType === \"PDA\") {\n            this.pdaState.isEmptyStackSymbol = transition.input === AutomataCharacters.EmptyStackSymbol;\n            this.pdaState.isAnySymbol = transition.input === AutomataCharacters.Epsilon;\n            if (!this.pdaState.isEmptyStackSymbol && !this.pdaState.isAnySymbol)\n                this.pdaState.inputtedInputStackSymbol = transition.input;\n            this.pdaState.inputtedOutputStackSymbols = transition.output;\n        } else if (this.automataType === \"TM\") {\n            this.tmState.isEmptySymbol = transition.readTapeSymbol === AutomataCharacters.EmptySymbol;\n            this.tmState.isStartTapeSymbol = transition.readTapeSymbol === AutomataCharacters.StartTapeSymbol;\n\n            // Because non-empty are technically epsilon moves, we need to deselect flag\n            if (transition.readTapeSymbol === AutomataCharacters.NonEmptySymbol) {\n                this.tmState.isNonEmptySymbol = true;\n                this.isEpsilonMove = false;\n            }\n\n            // Because circled symbols are technically epsilon moves, we need to deselect flag\n            if (transition.readTapeSymbol === AutomataCharacters.CircleSymbol) {\n                this.tmState.isCircledSymbol = true;\n                this.isEpsilonMove = false;\n            }\n\n            // Because uncircled symbols are technically epsilon moves, we need to deselect flag\n            if (transition.readTapeSymbol === AutomataCharacters.UncircleSymbol) {\n                this.tmState.isUncircledSymbol = true;\n                this.isEpsilonMove = false;\n            }\n\n            this.$set(this.tmState, \"isWriteEmptySymbol\", transition.writeTapeSymbol === AutomataCharacters.EmptySymbol);\n            this.$set(this.tmState, \"isWriteNothing\", transition.writeTapeSymbol === AutomataCharacters.WriteNothingSymbol);\n            this.$set(this.tmState, \"isCircle\", transition.writeTapeSymbol === AutomataCharacters.CircleSymbol);\n            this.$set(this.tmState, \"isUncircle\", transition.writeTapeSymbol === AutomataCharacters.UncircleSymbol);\n            if (!this.tmState.isWriteEmptySymbol &&\n                !this.tmState.isWriteNothing &&\n                !this.tmState.isCircle &&\n                !this.tmState.isUncircle)\n                this.tmState.symbolToWrite = transition.writeTapeSymbol;\n            this.tmState.direction = transition.direction;\n        }\n\n        if (!this.isEpsilonMove && !this.tmState.isEmptySymbol)\n            this.inputtedTransitionSymbol = transition.symbol;\n\n        // Shows the modal\n        this.$bvModal.show(\"newTransitionModal\");\n    }\n\n    /**\n     * Clears data\n     */\n    private clearData() {\n        this.inputtedTransitionSymbol = \"\";\n        this.isEpsilonMove = false;\n        this.pdaState = {\n            inputtedInputStackSymbol: \"\",\n            isEmptyStackSymbol: false,\n            isAnySymbol: false,\n            inputtedOutputStackSymbols: [\"\"]\n        };\n        this.tmState = {\n            isEmptySymbol: false,\n            isNonEmptySymbol: false,\n            isCircledSymbol: false,\n            isUncircledSymbol: false,\n            isStartTapeSymbol: false,\n            isWriteEmptySymbol: false,\n            isWriteNothing: false,\n            isCircle: false,\n            isUncircle: false,\n            symbolToWrite: '',\n            direction: 'L'\n        };\n    }\n\n    /**\n     * When the user clicks cancel\n     */\n    private onCancelClick() {\n        // Hides the modal\n        this.$bvModal.hide(\"newTransitionModal\");\n    }\n\n    /**\n     * When the user clicks add\n     */\n    private async onAddClick() {\n        // If symbol is in existing symbols set\n        if (this.existingSymbols.has(this.transitionSymbol)) {\n            // Tell the user this transition exists\n            this.$bvToast.toast(`A transition with this input symbol already exists.`, {\n                title: `Cannot overwrite transition!`,\n                variant: \"danger\",\n                autoHideDelay: 5000\n            });\n            return;\n        }\n\n        // Runs callback\n        this.callback(this.transitionSymbol, this.payload);\n\n        // Hides the modal\n        this.$bvModal.hide(\"newTransitionModal\");\n\n        // Updates outline pane\n        await this.$nextTick();\n        OutlineUpdateEventHandler.$emit('updateOutline');\n    }\n\n    /**\n     * When the user clicks edit\n     */\n    private onEditClick() {\n        // Just do the same as adding\n        this.onAddClick();\n    }\n\n    // ----------------\n    // --* Read symbols\n    // ----------------\n\n    @Watch('isEpsilonMove')\n    private onIsEpsilonMoveChange(val: any, oldVal: any) {\n        if (val) {\n            this.tmState.isEmptySymbol = false;\n            this.tmState.isNonEmptySymbol = false;\n            this.tmState.isCircledSymbol = false;\n            this.tmState.isUncircledSymbol = false;\n            this.tmState.isStartTapeSymbol = false;\n        }\n    }\n\n    @Watch('tmState.isEmptySymbol')\n    private onIsEmptySymbolChange(val: any, oldVal: any) {\n        if (val) {\n            this.isEpsilonMove = false;\n            this.tmState.isNonEmptySymbol = false;\n            this.tmState.isCircledSymbol = false;\n            this.tmState.isUncircledSymbol = false;\n            this.tmState.isStartTapeSymbol = false;\n        }\n    }\n\n    @Watch('tmState.isNonEmptySymbol')\n    private onIsNonEmptySymbolChange(val: any, oldVal: any) {\n        if (val) {\n            this.isEpsilonMove = false;\n            this.tmState.isEmptySymbol = false;\n            this.tmState.isCircledSymbol = false;\n            this.tmState.isUncircledSymbol = false;\n            this.tmState.isStartTapeSymbol = false;\n        }\n    }\n\n    @Watch('tmState.isCircledSymbol')\n    private onIsCircledSymbolChange(val: any, oldVal: any) {\n        if (val) {\n            this.isEpsilonMove = false;\n            this.tmState.isEmptySymbol = false;\n            this.tmState.isNonEmptySymbol = false;\n            this.tmState.isUncircledSymbol = false;\n            this.tmState.isStartTapeSymbol = false;\n        }\n    }\n\n    @Watch('tmState.isUncircledSymbol')\n    private onIsUncircledSymbolChange(val: any, oldVal: any) {\n        if (val) {\n            this.isEpsilonMove = false;\n            this.tmState.isEmptySymbol = false;\n            this.tmState.isNonEmptySymbol = false;\n            this.tmState.isCircledSymbol = false;\n            this.tmState.isStartTapeSymbol = false;\n        }\n    }\n\n    @Watch('tmState.isStartTapeSymbol')\n    private onIsStartTapeSymbolChange(val: any, oldVal: any) {\n        if (val) {\n            this.isEpsilonMove = false;\n            this.tmState.isEmptySymbol = false;\n            this.tmState.isNonEmptySymbol = false;\n            this.tmState.isCircledSymbol = false;\n            this.tmState.isUncircledSymbol = false;\n        }\n    }\n\n    // ----------------\n    // --* TM Write tape symbols\n    // ----------------\n\n    @Watch('tmState.isWriteEmptySymbol')\n    private onIsWriteEmptySymbolChange(val: any, oldVal: any) {\n        if (val) {\n            this.tmState.isWriteNothing = false;\n            this.tmState.isCircle = false;\n            this.tmState.isUncircle = false;\n        }\n    }\n\n    @Watch('tmState.isWriteNothing')\n    private onIsWriteNothingChange(val: any, oldVal: any) {\n        if (val) {\n            this.tmState.isWriteEmptySymbol = false;\n            this.tmState.isCircle = false;\n            this.tmState.isUncircle = false;\n        }\n    }\n\n    @Watch('tmState.isCircle')\n    private onIsCircleChange(val: any, oldVal: any) {\n        if (val) {\n            this.tmState.isWriteEmptySymbol = false;\n            this.tmState.isWriteNothing = false;\n            this.tmState.isUncircle = false;\n        }\n    }\n\n    @Watch('tmState.isUncircle')\n    private onIsUncircleChange(val: any, oldVal: any) {\n        if (val) {\n            this.tmState.isWriteEmptySymbol = false;\n            this.tmState.isWriteNothing = false;\n            this.tmState.isCircle = false;\n        }\n    }\n\n    // ----------------\n    // --* PDA Input stack symbols\n    // ----------------\n\n    @Watch('pdaState.isEmptyStackSymbol')\n    private onIsEmptyStackSymbolChange(val: any, oldVal: any) {\n        if (val)\n            this.pdaState.isAnySymbol = false;\n    }\n\n    @Watch('pdaState.isAnySymbol')\n    private onIsAnySymbolChange(val: any, oldVal: any) {\n        if (val)\n            this.pdaState.isEmptyStackSymbol = false;\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigTable.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfigTable.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ConfigTable.vue?vue&type=template&id=2904abac&scoped=true&\"\nimport script from \"./ConfigTable.vue?vue&type=script&lang=ts&\"\nexport * from \"./ConfigTable.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2904abac\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-container',{attrs:{\"fluid\":\"\"}},[_c('b-row',[_c('b-col',[_c('LeftPane',{ref:\"leftPane\",attrs:{\"automata\":_vm.automata},on:{\"onOperationButtonClick\":_vm.onOperationButtonClick,\"onStateFoldCompute\":_vm.onStateFoldCompute,\"onDuplicateCompute\":_vm.onDuplicateCompute,\"onUnionCompute\":_vm.onUnionCompute,\"onConcatenationCompute\":_vm.onConcatenationCompute,\"onKleeneStarCompute\":_vm.onKleeneStarCompute,\"onProductCompute\":_vm.onProductCompute,\"onMultiLevelExplore\":_vm.onMultiLevelExplore,\"onSearchItemClick\":_vm.onSearchItemClick}})],1),_c('b-col',{attrs:{\"cols\":\"6\"}},[_c('MiddlePane',{ref:\"middlePane\",attrs:{\"automata\":_vm.automata},on:{\"onCreateTransition\":_vm.onCreateTransition,\"onEditTransition\":_vm.onEditTransition,\"onEditState\":_vm.onEditState,\"onStylesChange\":_vm.onStylesChange}})],1),_c('b-col',[_c('RightPane',{ref:\"rightPane\",attrs:{\"automata\":_vm.automata},on:{\"changeHighlightedNodes\":_vm.onChangeHighlightedNodes}})],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Automata from \"@/classes/Automata\";\nimport PushdownAutomata from \"@/classes/PushdownAutomata\";\nimport TuringMachine from \"@/classes/TuringMachine\";\nimport {AutomataCharacters} from \"@/classes/AutomataCharacters\";\n\n/**\n * Class containing a bunch of automata operations to perform\n */\nexport default class AutomataOperations {\n    /**\n     * Filters out initial states from a group of state IDs\n     * @param automata - the automata instace of which these states belong to\n     * @param group - a set of state IDs to filter\n     * @returns a set of initial states filtered from the given set of states\n     */\n    public static getInitialStates(automata: Automata, group: Set<string>) {\n        return new Set([...group].filter(n => automata.getStateById(n).data.initial));\n    }\n\n    /**\n     * Filters out final states from a group of state IDs\n     * @param automata - the automata instace of which these states belong to\n     * @param group - a set of state IDs to filter\n     * @returns a set of final states filtered from the given set of states\n     */\n    public static getFinalStates(automata: Automata, group: Set<string>) {\n        return new Set([...group].filter(n => automata.getStateById(n).data.final));\n    }\n\n    /**\n     * Performs union\n     * @param automata - the automata object to edit\n     * @param group1 - the first group of node IDs\n     * @param group2 - the second group of node IDs\n     * @param cy - the cytoscape instance (optional)\n     */\n    public static union(automata: Automata, group1: Set<string>, group2: Set<string>, cy?: any) {\n        // Gets the initial states from groups 1 and 2\n        const initialStates = [...group1, ...group2].filter(n => automata.getStateById(n).data.initial);\n\n        // Gets midpoint position of all of them\n        const midX: number = initialStates.reduce((total, currentValue, currentIndex, arr) =>\n            automata.getStateById(currentValue).position.x + total, 0) / initialStates.length;\n        const midY: number = initialStates.reduce((total, currentValue, currentIndex, arr) =>\n            automata.getStateById(currentValue).position.y + total, 0) / initialStates.length;\n\n        // Add a payload\n        let payload: any = {};\n        if (automata instanceof PushdownAutomata) {\n            payload = {\n                input: AutomataCharacters.Epsilon,\n                output: []\n            };\n        }\n        if (automata instanceof TuringMachine) {\n            payload = {\n                readTapeSymbol: AutomataCharacters.Epsilon,\n                writeTapeSymbol: AutomataCharacters.WriteNothingSymbol,\n                direction: 'S'\n            };\n        }\n\n        // Create a node that epsilon moves to the initial states\n        const newStateName: string = automata.getNewStateName();\n        automata.addState(newStateName, midX, midY, true, false);\n        for (const initialState of initialStates) {\n            // Gets initial state name\n            const initialStateName: string = automata.getStateById(initialState).data.name;\n\n            // Make transition from new node to this initial node\n            automata.addTransition(\"ε\", newStateName, initialStateName, payload);\n\n            // Makes all the other initial states not initial states\n            automata.setInitialState(initialStateName, false);\n\n            // If we have a cytoscape instance\n            if (cy)\n                cy.$(`#${initialState}`).removeClass(\"initial-node\");\n        }\n    }\n\n    /**\n     * Performs concatenation\n     * @param automata - the automata object to edit\n     * @param group1 - the group of final states of sub-automata 1\n     * @param group2 - the group of initial states of sub-automata 2\n     * @param cy - the cytoscape instance (optional)\n     */\n    public static concatenation(automata: Automata, group1: Set<string>, group2: Set<string>, cy?: any) {\n        // If it's a PDA, add a payload\n        let payload: any = {};\n        if (automata instanceof PushdownAutomata) {\n            payload = {\n                input: 'ε',\n                output: []\n            };\n        }\n\n        // For each final state\n        for (const finalState of group1) {\n            // Gets final state name\n            const finalStateName = automata.getStateById(finalState).data.name;\n\n            // Make this not a final state anymore\n            automata.setFinalState(finalStateName, false);\n            if (cy)\n                cy.$(`#${finalState}`).removeClass(\"final-node\");\n\n            // For each initial state\n            for (const initialState of group2) {\n                // Gets initial state name\n                const initialStateName = automata.getStateById(initialState).data.name;\n\n                // Create an epsilon move for this\n                automata.addTransition(\"ε\", finalStateName, initialStateName, payload);\n\n                // Make this not an initial state anymore\n                automata.setInitialState(initialStateName, false);\n                if (cy)\n                    cy.$(`#${initialState}`).removeClass(\"initial-node\");\n            }\n        }\n    }\n\n    /**\n     * Performs Kleene star\n     * @param automata - the automata object to edit\n     * @param group1 - the group of final states of the automata\n     * @param group2 - the group of initial states of the automata\n     * @param cy - the cytoscape instance (optional)\n     */\n    public static kleeneStar(automata: Automata, group1: Set<string>, group2: Set<string>, cy?: any) {\n        // Gets midpoint position of all initial states\n        const midX: number = [...group2].reduce((total, currentValue, currentIndex, arr) =>\n            automata.getStateById(currentValue).position.x + total, 0) / [...group2].length;\n        const midY: number = [...group2].reduce((total, currentValue, currentIndex, arr) =>\n            automata.getStateById(currentValue).position.y + total, 0) / [...group2].length;\n\n        // Creates a new node\n        const newNodeName = automata.getNewStateName();\n        automata.addState(newNodeName, midX, midY, true, true);\n\n        // If it's a PDA, add a payload\n        let payload: any = {};\n        if (automata instanceof PushdownAutomata) {\n            payload = {\n                input: 'ε',\n                output: []\n            };\n        }\n\n        // Makes all the final states go to it\n        for (const finalState of group1) {\n            // Gets final state name\n            const finalStateName = automata.getStateById(finalState).data.name;\n\n            // Creates transition\n            automata.addTransition(\"ε\", finalStateName, newNodeName, payload);\n        }\n\n        // Makes it go to all the initial states\n        for (const initialState of group2) {\n            // Gets initial state name\n            const initialStateName = automata.getStateById(initialState).data.name;\n\n            // Creates transition\n            automata.addTransition(\"ε\", newNodeName, initialStateName, payload);\n\n            // Make this not an initial state anymore\n            automata.setInitialState(initialStateName, false);\n            if (cy)\n                cy.$(`#${initialState}`).removeClass(\"initial-node\");\n        }\n    }\n\n    /**\n     * Duplicates a group of objects in an automata\n     * @param automata - the automata to copy stuff from\n     * @param group - the group of objects to copy\n     * @returns the set of new duplicated objects\n     */\n    public static duplicate(automata: Automata, group: Set<string>): Set<string> {\n        // Stores mapping of old state names to new state names\n        const newName: any = {};\n\n        // Stores the set of new duplicated objects, by ID\n        const duplicatedObjects: Set<string> = new Set();\n\n        // Set up some functions to help, returns new name of this state\n        function addState(srcObj: any): string {\n            // If we've already duplicated this state, then leave\n            if (newName[srcObj.data.id])\n                return newName[srcObj.data.name];\n\n            // Get new name (if it doesn't already exist)\n            const targetObjName = newName[srcObj.data.name] ? newName[srcObj.data.name] : automata.getNewStateName();\n\n            // Store in the mapping\n            newName[srcObj.data.name] = targetObjName;\n\n            // Creates new node\n            automata.addState(targetObjName,\n                srcObj.position.x + 10,\n                srcObj.position.y + 10,\n                srcObj.data.initial,\n                srcObj.data.final);\n\n            // Stores this in return set\n            duplicatedObjects.add(automata.getState(targetObjName).data.id);\n\n            return targetObjName;\n        }\n\n        function addTransition(srcObj: any) {\n            // Gets data\n            const [srcSymbol, srcSrc, srcTarget] = [srcObj.data.symbol, srcObj.data.sourceName, srcObj.data.targetName];\n\n            // Gets new source and target names\n            let targetSrc: string;\n            let targetTarget: string;\n            if (newName[srcSrc])\n                targetSrc = newName[srcSrc];\n            else\n                targetSrc = addState(automata.getState(srcSrc));\n\n            if (newName[srcTarget])\n                targetTarget = newName[srcTarget];\n            else\n                targetTarget = addState(automata.getState(srcTarget));\n\n            // Creates transition\n            automata.addTransition(srcSymbol, targetSrc, targetTarget, srcObj.data);\n\n            // Stores this in return set\n            duplicatedObjects.add(automata.getTransition(srcSymbol, targetSrc, targetTarget).data.id);\n        }\n\n        // Stores group as a stack\n        const groupStack: string[] = [...group];\n\n        // Goes through each object\n        while (groupStack.length > 0) {\n            // Gets obj id\n            const srcObjID = groupStack.pop();\n            if (!srcObjID)\n                break;\n\n            // Fetch object\n            const srcObj = automata.getData()[srcObjID];\n\n            // If it's a node\n            if (srcObj.data.type === \"node\") {\n                addState(srcObj);\n            }\n            // If it's an edge\n            else if (srcObj.data.type === \"edge\") {\n                addTransition(srcObj);\n            }\n            // If it's a state fold\n            else if (srcObj.classes.has(\"parent\")) {\n                // Goes through all children\n                srcObj.children.forEach((child: any) => {\n                    // Gets child name and ID\n                    const childID = child._private.data.id, childName = child._private.data.name;\n\n                    // Push child node\n                    groupStack.push(childID);\n\n                    // Gets child transitions\n                    const childTransitions = automata.cacheTransition.getTargetMappings(childName);\n                    Object.keys(childTransitions).forEach(targetNode => {\n                        childTransitions[targetNode].forEach((symbol: any) => {\n                            console.log(childName + \", \" + targetNode + \", \" + symbol);\n                            groupStack.push(automata.getTransition(symbol, childName, targetNode).data.id);\n                        });\n                    });\n                });\n            }\n        }\n\n        return duplicatedObjects;\n    }\n\n    /**\n     * Performs product on two machines in an automata\n     * @param automata - the automata to perform the operation on\n     * @param group1 - the first machine\n     * @param group2 - the second machine\n     * @param cy - the cytoscape instance\n     */\n    public static product(automata: Automata, group1: Set<string>, group2: Set<string>, cy?: any) {\n        // Gets states from groups\n        const states1: Set<string> = new Set();\n        const states2: Set<string> = new Set();\n        group1.forEach((item: any) => {\n            const state = automata.getStateById(item);\n            if (state.data.type === 'node')\n                states1.add(item);\n        });\n        group2.forEach((item: any) => {\n            const state = automata.getStateById(item);\n            if (state.data.type === 'node')\n                states2.add(item);\n        });\n\n        // Gets base position for this new automata\n        const group2InitialStates = this.getInitialStates(automata, group2);\n        const midX: number = [...group2InitialStates].reduce((total, currentValue, currentIndex, arr) =>\n            automata.getStateById(currentValue).position.x + total, 0) / [...group2InitialStates].length;\n        const midY: number = [...group2InitialStates].reduce((total, currentValue, currentIndex, arr) =>\n            automata.getStateById(currentValue).position.y + total, 0) / [...group2InitialStates].length;\n\n        // Stores all transitions to create {source, target, symbol}\n        const transitionsToMake: any[] = [];\n\n        // Stores all states to create\n        const statesToMake: Set<string> = new Set();\n        const statesToMakeInfo: any = {}; // {x, y, initial, final}\n\n        // Creates new states\n        let i: number = 0, j: number = 0;\n        states1.forEach(state1ID => {\n            states2.forEach(state2ID => {\n                // Gets states\n                const [state1, state2] = [automata.getStateById(state1ID), automata.getStateById(state2ID)];\n\n                // Creates state name\n                const newStateName = state1.data.name + ',' + state2.data.name;\n\n                // Gets shared transition symbols\n                const sharedSymbols1: Set<string> = new Set();\n                Object.values(automata.cacheTransition.getTargetMappings(state1.data.name)).forEach(\n                    (set: any) => set.forEach(\n                        (symbol: any) => sharedSymbols1.add(symbol)));\n                const sharedSymbols2: Set<string> = new Set();\n                Object.values(automata.cacheTransition.getTargetMappings(state2.data.name)).forEach(\n                    (set: any) => set.forEach(\n                        (symbol: any) => sharedSymbols2.add(symbol)));\n\n                // Intersects transitions between these two states\n                const sharedSymbolsIntersection: Set<string> = new Set([...sharedSymbols1].filter(x => sharedSymbols2.has(x)));\n\n                // For all shared symbols, generate transitions\n                sharedSymbolsIntersection.forEach(sharedSymbol => {\n                    const targetStates1 = Object.keys(automata[\"cacheEdgeID\"][sharedSymbol][state1.data.name]);\n                    const targetStates2 = Object.keys(automata[\"cacheEdgeID\"][sharedSymbol][state2.data.name]);\n\n                    targetStates1.forEach(targetState1 => targetStates2.forEach(targetState2 => {\n                        transitionsToMake.push({\n                            source: newStateName,\n                            target: `${targetState1},${targetState2}`,\n                            symbol: sharedSymbol\n                        });\n\n                        // We need these states\n                        statesToMake.add(newStateName);\n                        statesToMake.add(`${targetState1},${targetState2}`);\n                    }));\n                });\n\n                // For all epsilon moves, generate transitions\n                [state1, state2].forEach(state => {\n                    // If we have epsilon moves\n                    if (automata[\"cacheEdgeID\"][AutomataCharacters.Epsilon]) {\n                        if (automata[\"cacheEdgeID\"][AutomataCharacters.Epsilon][state.data.name]) {\n                            // Get epsilon move targets\n                            const epsilonMoveTargets = Object.keys(automata[\"cacheEdgeID\"][AutomataCharacters.Epsilon][state.data.name]);\n\n                            // Creates transitions from this\n                            epsilonMoveTargets.forEach(epsilonMoveTarget => {\n                                const targetStateName = state === state1 ? `${epsilonMoveTarget},${state2.data.name}` : `${state1.data.name},${epsilonMoveTarget}`;\n                                transitionsToMake.push({\n                                    source: newStateName,\n                                    target: targetStateName,\n                                    symbol: AutomataCharacters.Epsilon\n                                });\n\n                                // We need these states\n                                statesToMake.add(newStateName);\n                                statesToMake.add(targetStateName);\n                            });\n                        }\n                    }\n                });\n\n                // Adds info about this state\n                statesToMakeInfo[newStateName] = {\n                    x: midX + j * 75,\n                    y: midY + i * 75,\n                    initial: state1.data.initial && state2.data.initial,\n                    final: state1.data.final && state2.data.final\n                };\n\n                // Increments positional counter\n                j++;\n            });\n            // Increments positional counter\n            i++;\n            j = 0;\n        });\n\n        // Creates all the states\n        statesToMake.forEach(stateToMake =>\n            automata.addState(stateToMake,\n                statesToMakeInfo[stateToMake].x,\n                statesToMakeInfo[stateToMake].y,\n                statesToMakeInfo[stateToMake].initial,\n                statesToMakeInfo[stateToMake].final)\n        );\n\n        // Creates all the transitions\n        transitionsToMake.forEach(transitionTemplate => {\n            automata.addTransition(transitionTemplate.symbol, transitionTemplate.source, transitionTemplate.target);\n        });\n\n        // Deletes group 1 and group 2\n        [group1, group2].forEach(group => group.forEach(itemID => {\n            const item = automata.getData()[itemID];\n            if (item.data.type === 'node')\n                automata.removeState(item.data.name);\n            else if (item.data.type === 'edge')\n                automata.removeTransitionWithID(itemID);\n        }));\n    }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{attrs:{\"id\":\"newTransitionModal\"},on:{\"hide\":function($event){return _vm.$emit('hide')}},scopedSlots:_vm._u([{key:\"modal-title\",fn:function(){return [_vm._v(\" \"+_vm._s(_vm.mode === _vm.NewTransitionModalMode.ADD ? (\"New Transition (\" + _vm.automataType + \")\") : (\"Edit transition (\" + _vm.automataType + \")\"))+\" \")]},proxy:true},{key:\"modal-footer\",fn:function(){return [_c('div',{staticClass:\"w-100\"},[_c('b-button',{staticClass:\"float-left\",attrs:{\"variant\":\"danger\"},on:{\"click\":_vm.onCancelClick}},[_vm._v(\"Cancel\")]),(_vm.mode === _vm.NewTransitionModalMode.ADD)?_c('b-button',{staticClass:\"float-right\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.onAddClick}},[_vm._v(\"Add\")]):_vm._e(),(_vm.mode === _vm.NewTransitionModalMode.EDIT)?_c('b-button',{staticClass:\"float-right\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.onEditClick}},[_vm._v(\"Edit\")]):_vm._e()],1)]},proxy:true}]),model:{value:(_vm.isModalVisible),callback:function ($$v) {_vm.isModalVisible=$$v},expression:\"isModalVisible\"}},[_c('b-form',{on:{\"submit\":function($event){}}},[_c('b-form-group',{attrs:{\"label\":(\"Transition symbol: \" + _vm.transitionSymbol)}},[_c('b-form-input',{attrs:{\"placeholder\":\"a\",\"disabled\":_vm.isEpsilonMove || _vm.tmState.isEmptySymbol || _vm.tmState.isNonEmptySymbol || _vm.tmState.isCircledSymbol || _vm.tmState.isUncircledSymbol || _vm.tmState.isStartTapeSymbol},model:{value:(_vm.inputtedTransitionSymbol),callback:function ($$v) {_vm.inputtedTransitionSymbol=$$v},expression:\"inputtedTransitionSymbol\"}})],1),_c('b-form-group',[_c('b-form-checkbox',{model:{value:(_vm.isEpsilonMove),callback:function ($$v) {_vm.isEpsilonMove=$$v},expression:\"isEpsilonMove\"}},[_vm._v(\"Epsilon move\")]),(_vm.automataType === 'TM')?_c('b-form-checkbox',{model:{value:(_vm.tmState.isEmptySymbol),callback:function ($$v) {_vm.$set(_vm.tmState, \"isEmptySymbol\", $$v)},expression:\"tmState.isEmptySymbol\"}},[_vm._v(\"Empty symbol\")]):_vm._e(),(_vm.automataType === 'TM')?_c('b-form-checkbox',{model:{value:(_vm.tmState.isNonEmptySymbol),callback:function ($$v) {_vm.$set(_vm.tmState, \"isNonEmptySymbol\", $$v)},expression:\"tmState.isNonEmptySymbol\"}},[_vm._v(\"Non-empty symbol\")]):_vm._e(),(_vm.automataType === 'TM')?_c('b-form-checkbox',{model:{value:(_vm.tmState.isCircledSymbol),callback:function ($$v) {_vm.$set(_vm.tmState, \"isCircledSymbol\", $$v)},expression:\"tmState.isCircledSymbol\"}},[_vm._v(\"Circled symbol\")]):_vm._e(),(_vm.automataType === 'TM')?_c('b-form-checkbox',{model:{value:(_vm.tmState.isUncircledSymbol),callback:function ($$v) {_vm.$set(_vm.tmState, \"isUncircledSymbol\", $$v)},expression:\"tmState.isUncircledSymbol\"}},[_vm._v(\"Uncircled symbol\")]):_vm._e(),(_vm.automataType === 'TM')?_c('b-form-checkbox',{model:{value:(_vm.tmState.isStartTapeSymbol),callback:function ($$v) {_vm.$set(_vm.tmState, \"isStartTapeSymbol\", $$v)},expression:\"tmState.isStartTapeSymbol\"}},[_vm._v(\"Start of the tape symbol\")]):_vm._e()],1),(_vm.automataType === 'PDA')?[_c('b-form-group',{attrs:{\"label\":(\"Input stack symbol: \" + _vm.inputStackSymbol)}},[_c('b-form-input',{attrs:{\"placeholder\":\"A\",\"disabled\":_vm.pdaState.isEmptyStackSymbol || _vm.pdaState.isAnySymbol},model:{value:(_vm.pdaState.inputtedInputStackSymbol),callback:function ($$v) {_vm.$set(_vm.pdaState, \"inputtedInputStackSymbol\", $$v)},expression:\"pdaState.inputtedInputStackSymbol\"}})],1),_c('b-form-group',[_c('b-form-checkbox',{model:{value:(_vm.pdaState.isEmptyStackSymbol),callback:function ($$v) {_vm.$set(_vm.pdaState, \"isEmptyStackSymbol\", $$v)},expression:\"pdaState.isEmptyStackSymbol\"}},[_vm._v(\"Empty stack symbol\")]),_c('b-form-checkbox',{model:{value:(_vm.pdaState.isAnySymbol),callback:function ($$v) {_vm.$set(_vm.pdaState, \"isAnySymbol\", $$v)},expression:\"pdaState.isAnySymbol\"}},[_vm._v(\"Any symbol\")])],1),_c('b-form-group',{attrs:{\"label\":(\"Output stack symbols: \" + (_vm.outputStackSymbols.length === 0 ? 'Do not output any stack symbols' : _vm.outputStackSymbols.join(',')))}},[_c('b-container',{staticClass:\"pl-0 pr-0 flex-column justify-content-center\"},[_vm._l((_vm.pdaState.inputtedOutputStackSymbols),function(outputStackSymbol,outputStackSymbolIndex){return _c('b-row',{staticClass:\"mt-2\",attrs:{\"align-h\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"10\"}},[_c('b-form-input',{attrs:{\"placeholder\":\"A\"},model:{value:(_vm.pdaState.inputtedOutputStackSymbols[outputStackSymbolIndex]),callback:function ($$v) {_vm.$set(_vm.pdaState.inputtedOutputStackSymbols, outputStackSymbolIndex, $$v)},expression:\"pdaState.inputtedOutputStackSymbols[outputStackSymbolIndex]\"}})],1),_c('b-col',{staticClass:\"pl-0\",attrs:{\"cols\":\"2\"}},[_c('b-button',{staticClass:\"w-100\",attrs:{\"variant\":\"outline-danger\"},on:{\"click\":function($event){return _vm.pdaState.inputtedOutputStackSymbols.splice(outputStackSymbolIndex, 1)}}},[_vm._v(\"-\")])],1)],1)}),_c('b-row',{attrs:{\"align-h\":\"center\"}},[_c('b-col',{attrs:{\"cols\":\"3\"}}),_c('b-col',[_c('b-button',{staticClass:\"w-100 mt-2\",attrs:{\"variant\":\"outline-primary\",\"align-h\":\"center\"},on:{\"click\":function($event){return _vm.pdaState.inputtedOutputStackSymbols.push('')}}},[_vm._v(\"+\")])],1),_c('b-col',{attrs:{\"cols\":\"3\"}})],1)],2)],1)]:_vm._e(),(_vm.automataType === 'TM')?[_c('b-form-group',{attrs:{\"label\":(\"Symbol to write: \" + (_vm.payload.writeTapeSymbol))}},[_c('b-form-input',{attrs:{\"placeholder\":\"a\",\"disabled\":_vm.tmState.isWriteEmptySymbol || _vm.tmState.isWriteNothing || _vm.tmState.isCircle || _vm.tmState.isUncircle},model:{value:(_vm.tmState.symbolToWrite),callback:function ($$v) {_vm.$set(_vm.tmState, \"symbolToWrite\", $$v)},expression:\"tmState.symbolToWrite\"}})],1),_c('b-form-group',[_c('b-form-checkbox',{model:{value:(_vm.tmState.isWriteEmptySymbol),callback:function ($$v) {_vm.$set(_vm.tmState, \"isWriteEmptySymbol\", $$v)},expression:\"tmState.isWriteEmptySymbol\"}},[_vm._v(\"Empty symbol\")]),_c('b-form-checkbox',{model:{value:(_vm.tmState.isWriteNothing),callback:function ($$v) {_vm.$set(_vm.tmState, \"isWriteNothing\", $$v)},expression:\"tmState.isWriteNothing\"}},[_vm._v(\"Write nothing\")]),_c('b-form-checkbox',{model:{value:(_vm.tmState.isCircle),callback:function ($$v) {_vm.$set(_vm.tmState, \"isCircle\", $$v)},expression:\"tmState.isCircle\"}},[_vm._v(\"Circled read symbol\")]),_c('b-form-checkbox',{model:{value:(_vm.tmState.isUncircle),callback:function ($$v) {_vm.$set(_vm.tmState, \"isUncircle\", $$v)},expression:\"tmState.isUncircle\"}},[_vm._v(\"Uncircled read symbol\")])],1),_c('b-form-group',{attrs:{\"label\":(\"Direction: \" + (_vm.tmState.direction))}},[_c('b-form-radio-group',{staticClass:\"w-100\",attrs:{\"options\":[{text: 'L(eft)', value: 'L'}, {text: 'S(tay)', value: 'S'}, {text: 'R(ight)', value: 'R'}],\"buttons\":\"\",\"button-variant\":\"outline-primary\"},model:{value:(_vm.tmState.direction),callback:function ($$v) {_vm.$set(_vm.tmState, \"direction\", $$v)},expression:\"tmState.direction\"}})],1)]:_vm._e()],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewTransitionModal.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewTransitionModal.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NewTransitionModal.vue?vue&type=template&id=d4fdeaf4&scoped=true&\"\nimport script from \"./NewTransitionModal.vue?vue&type=script&lang=ts&\"\nexport * from \"./NewTransitionModal.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d4fdeaf4\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.dirty)?_c('div',{attrs:{\"id\":\"scrollablePane\"}},[(_vm.items.length > 0)?_c('b-table',{attrs:{\"items\":_vm.items,\"fields\":_vm.fields},scopedSlots:_vm._u([{key:\"cell(state_name)\",fn:function(data){return [_c('p',{staticClass:\"item\",on:{\"click\":function($event){return _vm.onItemClick(data.item.id)}}},[_vm._v(_vm._s(data.item.state_name))])]}}],null,false,601872459)}):_c('p',[_vm._v(\"No results for '\"+_vm._s(_vm.query)+\"'.\")])],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport {BTable} from \"bootstrap-vue\";\nimport Vue from 'vue';\nimport Automata from \"@/classes/Automata\";\n\n@Component({\n    components: {\n        BTable\n    }\n})\nexport default class SearchTable extends Vue {\n    @Prop() public readonly automata!: Automata;\n\n    /** Array of items for table to display */\n    private items: SearchTableResult[] = [];\n\n    /** Fields definition */\n    private fields: any[] = [\n        { key: 'id', thClass: 'd-none', tdClass: 'd-none' },\n        { key: 'state_name' }\n    ];\n\n    /** If true, search has been used */\n    private dirty: boolean = false;\n\n    /** The query that was used */\n    private query: string = \"\";\n\n    /**\n     * Sets the table\n     * @param query - the string that was used to search\n     * @param ids - the IDs of the states to put\n     */\n    public setTable(query: string, ids: Set<string>) {\n        this.clear();\n        this.dirty = true;\n        this.query = query;\n        ids.forEach(id => this.items.push(new SearchTableResult(\n            id,\n            this.automata.getData()[id].data.displayName\n        )));\n    }\n\n    /**\n     * Clears the table\n     */\n    public clear() {\n        Vue.set(this, \"items\", []);\n    }\n\n    private onItemClick(id: string) {\n        this.$emit('itemClick', id);\n    }\n}\n\n/**\n * A displayable result via the table\n */\nclass SearchTableResult {\n    constructor(id: string, state_name: string) {\n        this.id = id;\n        this.state_name = state_name;\n    }\n\n    public id: string = \"\";\n    public state_name: string = \"\";\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchTable.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SearchTable.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SearchTable.vue?vue&type=template&id=0370a8fa&scoped=true&\"\nimport script from \"./SearchTable.vue?vue&type=script&lang=ts&\"\nexport * from \"./SearchTable.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SearchTable.vue?vue&type=style&index=0&id=0370a8fa&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0370a8fa\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"multilevel-exploration\"}},[_c('b-form-checkbox',{staticClass:\"mt-2\",attrs:{\"value\":true,\"unchecked-value\":false},model:{value:(_vm.isMultilevelExplorationEnabled),callback:function ($$v) {_vm.isMultilevelExplorationEnabled=$$v},expression:\"isMultilevelExplorationEnabled\"}},[_vm._v(\" Multi-level exploration: \"+_vm._s(_vm.isMultilevelExplorationEnabled ? (\"Level \" + _vm.level) : \"Disabled\")+\" \")]),_c('b-form-input',{attrs:{\"disabled\":!_vm.isMultilevelExplorationEnabled,\"type\":\"range\",\"min\":\"0\",\"max\":\"20\",\"placeholder\":\"Abstraction level\"},model:{value:(_vm.inputNumber),callback:function ($$v) {_vm.inputNumber=_vm._n($$v)},expression:\"inputNumber\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Prop, Watch} from 'vue-property-decorator';\n\n@Component\nexport default class MultiLevelSelect extends Vue {\n    /** If true, user wants to perform multi-level exploration */\n    private isMultilevelExplorationEnabled: boolean = false;\n\n    /** Number on the input box */\n    private inputNumber: number = 0;\n\n    /** Returns the level at which to perform multi-level exploration on, -1 means disabled */\n    public get level(): number {\n        return this.isMultilevelExplorationEnabled ? this.inputNumber : -1;\n    }\n\n    @Watch(\"level\")\n    private onLevelChange(val: number, oldVal: number) {\n        this.$emit(\"multiLevelExplore\", this.level);\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiLevelSelect.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MultiLevelSelect.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MultiLevelSelect.vue?vue&type=template&id=8e89002a&scoped=true&\"\nimport script from \"./MultiLevelSelect.vue?vue&type=script&lang=ts&\"\nexport * from \"./MultiLevelSelect.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"8e89002a\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"middlePane\"}},[_c('div',{attrs:{\"id\":\"zoom-and-styles\"}},[_c('div',{attrs:{\"id\":\"zoom\"}},[_c('b-button',{attrs:{\"variant\":\"warning\"},on:{\"click\":function($event){return _vm.zoom('in')}}},[_c('font-awesome-icon',{attrs:{\"icon\":['fas', 'search-plus']}})],1),_c('b-button',{attrs:{\"variant\":\"warning\"},on:{\"click\":function($event){return _vm.zoom('out')}}},[_c('font-awesome-icon',{attrs:{\"icon\":['fas', 'search-minus']}})],1)],1),_c('div',[_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":_vm.onAddStyleClick}},[_vm._v(\"Add style\")]),_c('b-button',{staticClass:\"ml-2\",attrs:{\"variant\":\"warning\"},on:{\"click\":_vm.onStylesClick}},[_vm._v(\"View styles\")])],1)]),_c('AutomataPreview',{ref:\"automata\",attrs:{\"automata\":_vm.automata},on:{\"createTransition\":function($event){return _vm.$emit('onCreateTransition', $event)},\"editTransition\":function($event){return _vm.$emit('onEditTransition', $event)},\"editState\":function($event){return _vm.$emit('onEditState', $event)}}}),_c('StylesModal',{ref:\"stylesModal\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from \"vue\";\nexport default new Vue();","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{ref:\"stylesModal\",attrs:{\"no-close-on-backdrop\":\"\",\"static\":true,\"size\":\"xl\"},on:{\"shown\":_vm.onModalShown},scopedSlots:_vm._u([{key:\"modal-title\",fn:function(){return [_vm._v(\" Styles \")]},proxy:true},{key:\"modal-footer\",fn:function(){return [_c('div',{staticClass:\"w-100\"},[_c('b-button',{staticClass:\"float-left\",attrs:{\"variant\":\"danger\"},on:{\"click\":_vm.onCancelClick}},[_vm._v(\"Cancel\")]),_c('b-button',{staticClass:\"float-right\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.onApplyClick}},[_vm._v(\"Apply\")]),_c('b-button',{staticClass:\"float-right mr-2\",attrs:{\"variant\":\"secondary\"},on:{\"click\":_vm.resetToDefault}},[_vm._v(\"Reset to default\")])],1)]},proxy:true}]),model:{value:(_vm.isModalVisible),callback:function ($$v) {_vm.isModalVisible=$$v},expression:\"isModalVisible\"}},[_c('b-row',[_c('b-col',{attrs:{\"cols\":\"3\",\"id\":\"styleCards\"}},_vm._l((_vm.cards),function(card,title){return _c('StyleCard',{key:title,attrs:{\"title\":title,\"all\":card.all,\"states\":card.states,\"selected\":card.selected},on:{\"onCardClick\":function($event){return _vm.selectCard(title)},\"onCloseClick\":function($event){return _vm.deleteCard(title)}}})}),1),_c('b-col',{attrs:{\"cols\":\"9\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.selectedCard),expression:\"!selectedCard\"}]},[_c('p',[_vm._v(\"Select a style card from the left\")])]),_c('b-row',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.selectedCard),expression:\"selectedCard\"}]},_vm._l((_vm.styles),function(style,styleName){return _c('b-col',{attrs:{\"cols\":\"4\"}},[_c('StyleColourPicker',{ref:styleName,refInFor:true,attrs:{\"label\":styleName},on:{\"styleChange\":_vm.onStyleChange}})],1)}),1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-card',{staticClass:\"mb-2\",attrs:{\"title\":_vm.label}},[_c('verte',{ref:\"verte\",staticClass:\"mb-3\",attrs:{\"model\":\"rgb\",\"value\":\"#F00\",\"enableAlpha\":false},on:{\"input\":_vm.onColourChange},model:{value:(_vm.colourValue),callback:function ($$v) {_vm.colourValue=$$v},expression:\"colourValue\"}},[_c('svg',{attrs:{\"height\":\"24\",\"width\":\"24\"}},[_c('circle',{attrs:{\"cx\":\"12\",\"cy\":\"12\",\"r\":\"10\",\"stroke\":\"black\",\"stroke-width\":_vm.outline ? 3 : 0}})])]),_c('b-form-checkbox',{model:{value:(_vm.outline),callback:function ($$v) {_vm.outline=$$v},expression:\"outline\"}},[_vm._v(\" Outline \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport {Prop, Watch} from \"vue-property-decorator\";\nimport {BCard} from \"bootstrap-vue\";\n\n@Component({\n    components: {\n        BCard\n    }\n})\nexport default class StyleColourPicker extends Vue {\n    @Prop() private label!: string;\n\n    /** Verte reference */\n    private verte: any;\n\n    /** The colour value as rgb string */\n    private colourValue: string = \"rgb(255, 0, 0)\";\n\n    /** If true, style has outline, if false it doesn't */\n    private outline: boolean = false;\n\n    /**\n     * Sets the colour of the picker programmatically\n     * @param newColourValue - the new colour value\n     */\n    public setColour(newColourValue: string) {\n        this.colourValue = newColourValue;\n    }\n\n    /**\n     * Sets the outline\n     * @param value - if true, outline is enabled, If false, outline is disabled\n     */\n    public setOutline(value: boolean) {\n        this.outline = value;\n    }\n\n    private mounted() {\n        // Stores verte reference\n        this.verte = this.$refs[\"verte\"];\n\n        // Hacky code that updates colour picker canvases\n        const picker = this.verte.$children[0];\n        //picker.pickerRect = picker.$refs.canvas.getBoundingClientRect();\n        picker.pickerRect = {\n            x: 595,\n            y: 164,\n            width: 250,\n            height: 150,\n            top: 164,\n            right: 845,\n            bottom: 314,\n            left: 595\n        };\n        picker.updateSquareColors();\n    }\n\n    /**\n     * Gets the style represented by this picker\n     */\n    private getStyle(): any {\n        return {\n            'background-color': this.colourValue,\n            'border-width': this.outline ? 4 : 0,\n        };\n    }\n\n    /**\n     * Emits a style change from this component\n     */\n    private emitStyleChange() {\n        this.$emit(\"styleChange\", {\n            name: this.label,\n            style: this.getStyle()\n        });\n    }\n\n    /**\n     * When colour has changed\n     * @param colour - the new colour as a string\n     */\n    private onColourChange(colour: string) {\n        this.emitStyleChange();\n    }\n\n    @Watch('outline')\n    private onOutlineChange(val: boolean, oldVal: boolean) {\n        this.emitStyleChange();\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StyleColourPicker.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StyleColourPicker.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StyleColourPicker.vue?vue&type=template&id=90cf0c62&scoped=true&\"\nimport script from \"./StyleColourPicker.vue?vue&type=script&lang=ts&\"\nexport * from \"./StyleColourPicker.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"90cf0c62\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-card',{staticClass:\"mb-2 clickable\",attrs:{\"bg-variant\":_vm.selected ? 'success' : '',\"text-variant\":_vm.selected ? 'white' : 'black'},on:{\"click\":_vm.onCardClick}},[_c('b-row',[_c('b-col',{staticClass:\"p-0\",attrs:{\"cols\":_vm.all ? 12 : 9}},[_c('p',[_vm._v(_vm._s(_vm.all ? \"All\" : _vm.title))]),(!_vm.all)?_c('div',{staticClass:\"stateNames\"},_vm._l((_vm.states),function(state){return _c('b-badge',{key:state,attrs:{\"pill\":\"\"}},[_vm._v(_vm._s(state))])}),1):_vm._e()]),(!_vm.all)?_c('b-col',{staticClass:\"p-0\",attrs:{\"cols\":\"3\"}},[_c('b-button',{attrs:{\"href\":\"#\",\"variant\":\"danger\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.onCloseClick($event)}}},[_vm._v(\"X\")])],1):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport {Prop} from \"vue-property-decorator\";\nimport Component from \"vue-class-component\";\nimport {BButton, BCard, BCol, BRow, BButtonGroup, BBadge} from \"bootstrap-vue\";\n\n@Component({\n    components: {\n        BCard, BRow, BCol, BButton, BButtonGroup, BBadge\n    }\n})\nexport default class StyleCard extends Vue {\n    /** If true, this style card is for all nodes */\n    @Prop({default: false}) private readonly all!: boolean;\n\n    /** Title of the card */\n    @Prop() private readonly title!: string;\n\n    /** If true, this card is selected. If false it is deselected */\n    @Prop({default: false}) private readonly selected!: boolean;\n\n    /** The states this style affects */\n    @Prop({default: []}) private readonly states!: string[];\n\n    /**\n     * When the user clicks on the card\n     */\n    private onCardClick() {\n        this.$emit(\"onCardClick\");\n    }\n\n    /**\n     * When the user clicks the close button\n     */\n    private onCloseClick() {\n        this.$emit(\"onCloseClick\");\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StyleCard.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StyleCard.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StyleCard.vue?vue&type=template&id=6494a582&scoped=true&\"\nimport script from \"./StyleCard.vue?vue&type=script&lang=ts&\"\nexport * from \"./StyleCard.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./StyleCard.vue?vue&type=style&index=0&id=6494a582&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6494a582\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from \"vue\";\nimport {Component} from \"vue-property-decorator\";\nimport {BForm, BModal, BRow, BCol, BCard, BButton, BCardText, BButtonGroup} from \"bootstrap-vue\";\nimport StyleColourPicker from \"@/components/modals/styles/StyleColourPicker.vue\";\nimport StyleUpdateEventHandler from \"@/events/StyleUpdateEventHandler\";\nimport StyleCard from \"@/components/modals/styles/StyleCard.vue\";\nimport $ from \"jquery\";\n\n@Component({\n    components: {\n        BRow, BCol, BModal, BForm, BCard, BCardText, BButton, BButtonGroup,\n\n        StyleColourPicker, StyleCard\n    }\n})\nexport default class StylesModal extends Vue {\n    /** If true, modal is visible. If false, it is not */\n    private isModalVisible: boolean = false;\n\n    /**\n     * The different styles to take care of\n     */\n    private styles: any = {\n        \"Default node\": {\n            selector: 'node',\n        },\n        \"Initial node\": {\n            selector: '.initial-node',\n        },\n        \"Final node\": {\n            selector: '.final-node',\n        },\n        \"Initial + final node\": {\n            selector: '.initial-node.final-node',\n        },\n        \"Highlighted node\": {\n            selector: '.highlighted-node',\n        },\n    };\n\n    /**\n     * The style cards, mapping from title -> style card object\n     */\n    private cards: any = {};\n\n    /** Counts the number of style names that has been generated */\n    private styleNameCounter: number = 1;\n\n    /** The callback to run when styles are applied */\n    private callback: any;\n\n    mounted() {\n        //this.resetToDefault();\n        this.addCard([], \"All\");\n        Vue.set(this.cards[\"All\"], 'all', true);\n    }\n\n    /**\n     * Adds a new card\n     * @param states - the states that this card affects\n     * @param cardName - the name of the card, leave it to generate one\n     * @param select - if true, this new card will be selected after being created\n     */\n    public addCard(states: string[], cardName?: string, select: boolean = true) {\n        if (!cardName)\n            cardName = this.generateName();\n\n        Vue.set(this.cards, cardName, {\n            all: false,\n            states,\n            selected: false,\n            styles: this.getDefaultStyles()\n        });\n\n        if (select) {\n            this.selectCard(cardName);\n        }\n    }\n\n    /**\n     * Generates a style name\n     * @returns the generated style name\n     */\n    public generateName(): string {\n        const rv: string = \"Style\" + this.styleNameCounter;\n        this.styleNameCounter++;\n        return rv;\n    }\n\n    /**\n     * Shows this modal\n     */\n    public show(callback: any) {\n        this.callback = callback;\n        (this.$refs['stylesModal'] as any).show();\n    }\n\n    /**\n     * Hides this modal\n     */\n    public hide() {\n        (this.$refs['stylesModal'] as any).hide();\n    }\n\n    /**\n     * Updates style cards\n     */\n    public updateStyleCard(cards: any) {\n        Vue.set(this, \"cards\", cards);\n    }\n\n    /**\n     * Selects a new card\n     * @param title - the new card to select\n     */\n    private selectCard(title: string) {\n        // If a card has already been selected, unselect that one\n        if (this.selectedCard)\n            this.cards[this.selectedCard].selected = false;\n\n        // Select this card\n        this.cards[title].selected = true;\n\n        // Update colour pickers\n        this.updateColourPickers();\n    }\n\n    /**\n     * Deletes a card\n     * @param title - the name of the card to delete\n     */\n    private deleteCard(title: string) {\n        Vue.delete(this.cards, title);\n    }\n\n    /**\n     * Updates colour pickers of currently selected card\n     */\n    private updateColourPickers() {\n        // If no card is selected, leave\n        if (!this.selectedCard)\n            return;\n\n        // Goes through each style of this card\n        Object.keys(this.cards[this.selectedCard].styles).forEach(editableStyle => {\n            // Gets style\n            const style = this.cards[this.selectedCard].styles[editableStyle].style;\n\n            // Get colour picker reference\n            const picker = (this.$refs[editableStyle] as any)[0];\n\n            // Sets colour and border\n            picker.setColour(style['background-color']);\n            picker.setOutline(style['border-width'] !== 0);\n        });\n    }\n\n    /**\n     * Gets the currently selected card by sequential search\n     * @return the title of the selected card. Returns empty string if none is selected\n     */\n    private get selectedCard(): string {\n        for (const cardTitle in this.cards) {\n            if (this.cards[cardTitle].selected)\n                return cardTitle;\n        }\n        return \"\";\n    }\n\n    /**\n     * Gets default styling for a card\n     * @returns - the default styles as an object\n     */\n    private getDefaultStyles(): any {\n        // Gets default styles\n        const defaultStyles: any[] = require(\"../../../config/cytoscape-config\").default.style;\n\n        // Stores return value\n        let rv: any = {};\n\n        // Goes through every default style\n        defaultStyles.forEach(defaultStyle => {\n            // Goes through every editable style\n            Object.keys(this.styles).forEach(editableStyle => {\n                // If we have a match\n                if (defaultStyle.selector === this.styles[editableStyle].selector) {\n                    // Sets up object for this editable style\n                    rv[editableStyle] = {\n                        selector: defaultStyle.selector,\n                        style: {}\n                    };\n\n                    // Saves main colour\n                    rv[editableStyle]['style']['background-color'] = defaultStyle.style['background-color'];\n\n                    // Loads outline\n                    if (Object.keys(defaultStyle.style).includes('border-width') && defaultStyle.style['border-width'] > 0)\n                        rv[editableStyle]['style']['border-width'] = 4;\n                    else\n                        rv[editableStyle]['style']['border-width'] = 0;\n                }\n            });\n        });\n\n        // Returns style\n        return rv;\n    }\n\n\n    /**\n     * Resets styles back to default\n     */\n    private resetToDefault() {\n        // If there is no selected style, quit\n        if (!this.selectedCard)\n            return;\n\n        // Resets style to default\n        Vue.set(this.cards[this.selectedCard], \"styles\", this.getDefaultStyles());\n\n        // Update pickers\n        this.updateColourPickers();\n    }\n\n    /**\n     * When the user doesn't want to apply changes\n     */\n    private onCancelClick() {\n        this.hide();\n    }\n\n    /**\n     * When the user wants to apply changes\n     */\n    private onApplyClick() {\n        this.callback(this.cards);\n        this.hide();\n    }\n\n    /**\n     * When the style changes on a picker\n     * @param args - the name of the updated picker and new style\n     */\n    private onStyleChange(args: any) {\n        const {name, style} = args;\n\n        // If a card is selected, update data\n        if (this.selectedCard)\n            this.cards[this.selectedCard].styles[name].style = style;\n    }\n\n    /**\n     * When the modal has just been shown\n     */\n    private onModalShown() {\n        // Gets selected card\n        const selectedCard = this.selectedCard;\n\n        // If no card is selected, bail out\n        if (!selectedCard)\n            return;\n\n        // Gets index of selected node\n        const selectedCardIndex = Object.keys(this.cards).indexOf(selectedCard);\n\n        // Highlights selected node\n        const container = this.$el.querySelector(\"#styleCards\");\n        if (container != null) {\n            container.scrollTop = 0;\n            container.scrollTop = $(container.children[selectedCardIndex]).position().top;\n        }\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StylesModal.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StylesModal.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StylesModal.vue?vue&type=template&id=15753ff7&scoped=true&\"\nimport script from \"./StylesModal.vue?vue&type=script&lang=ts&\"\nexport * from \"./StylesModal.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./StylesModal.vue?vue&type=style&index=0&id=15753ff7&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15753ff7\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport AutomataPreview from \"./AutomataPreview.vue\";\nimport Vue from \"vue\";\nimport Automata from \"@/classes/Automata\";\nimport ModalsEventHandler from \"@/events/ModalsEventHandler\";\nimport StylesModal from \"@/components/modals/styles/StylesModal.vue\";\nimport ordinal from \"ordinal\";\n\n@Component({\n    components: {\n        AutomataPreview, StylesModal\n    }\n})\nexport default class MiddlePane extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    /** Styles modal reference */\n    private stylesModal: any;\n\n    mounted() {\n        this.stylesModal = this.$refs[\"stylesModal\"];\n\n        // When the user wants to change styles\n        ModalsEventHandler.$on(\"onStylesChange\", (automataID: any) => {\n        });\n\n        ModalsEventHandler.$on(\"onAddStyle\", (args: any) => {\n        });\n    }\n\n    /**\n     * Updates style cards\n     */\n    public updateStyleCards(cards: any) {\n        this.stylesModal.cards = cards;\n    }\n\n    public get isThereSelectedNodes(): boolean {\n        const automataPreview = this.getAutomataPreviewReference();\n        console.log(automataPreview);\n        return automataPreview ? this.getAutomataPreviewReference().selectedNodes.size > 0 : false;\n    }\n\n    /**\n     * Gets automata preview reference\n     * @returns AutomataPreview reference (make sure to type it as 'any')\n     */\n    public getAutomataPreviewReference(): any {\n        return this.$refs[\"automata\"];\n    }\n\n    /**\n     * When the user wants to view styles\n     * @param callback - run when the user tries to apply styles\n     */\n    public viewStyles(callback: any) {\n        this.stylesModal.show(callback);\n    }\n\n    /**\n     * When the user wants to add a style\n     * @param callback - run when the user tries to apply styles\n     * @param selectedNodes - the nodes of the new style\n     */\n    public addStyle(callback: any, selectedNodes: string[]) {\n        this.stylesModal.show(callback);\n        this.stylesModal.addCard(selectedNodes);\n    }\n\n    /**\n     * Zooms the canvas in a direction\n     * @param direction either the string 'in' or 'out' for zooming in and out; everything else will be ignored\n     */\n    private zoom(direction: string) {\n        // Gets automata preview reference\n        const automataPreview: any = this.getAutomataPreviewReference();\n\n        // Gets new zoom level\n        let zoomLevel = automataPreview.cy.zoom();\n        if (direction === \"in\")\n            zoomLevel += 0.15;\n        else if (direction === \"out\")\n            zoomLevel -= 0.15;\n\n        // Sets new zoom level from the centre of the viewport\n        automataPreview.cy.zoom({\n            level: zoomLevel,\n            renderedPosition: {x: automataPreview.cy.width() / 2, y: automataPreview.cy.height() / 2}\n        });\n    }\n\n    /**\n     * When the user wants to change styles\n     */\n    private onStylesClick() {\n        // Emits event to open up style modal\n        ModalsEventHandler.$emit(\"onStylesChange\", this.automata.getID());\n        this.viewStyles((cards: any) => this.$emit(\"onStylesChange\", cards));\n    }\n\n    /**\n     * When the user wants to add a style\n     */\n    private onAddStyleClick() {\n        // Gets automata preview reference\n        const automataPreview: any = this.getAutomataPreviewReference();\n\n        // If there are no selected nodes, don't do anything\n        if (automataPreview.selectedNodes.size === 0) {\n            // Tell the user to select nodes next time\n            this.$bvToast.toast(`Please select the nodes you wish to customise before adding a style.`, {\n                title: `No selected nodes to stylise!`,\n                variant: \"danger\",\n                autoHideDelay: 5000\n            });\n            return;\n        }\n\n        // Converts selected node IDs to names\n        const selectedNodes = [...automataPreview.selectedNodes].map(id => this.automata.getStateById(id).data.name);\n\n        // Emits event to open up style modal\n        this.addStyle((cards: any) => this.$emit(\"onStylesChange\", cards), selectedNodes);\n    }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiddlePane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiddlePane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./MiddlePane.vue?vue&type=template&id=379e072f&scoped=true&\"\nimport script from \"./MiddlePane.vue?vue&type=script&lang=ts&\"\nexport * from \"./MiddlePane.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./MiddlePane.vue?vue&type=style&index=0&id=379e072f&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"379e072f\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-tabs',[_c('b-tab',{staticClass:\"pt-2\",attrs:{\"title\":\"Animation\",\"active\":\"\"}},[_c('AnimationPane',{ref:\"animationPane\",attrs:{\"automata\":_vm.automata},on:{\"changeHighlightedNodes\":function($event){return _vm.$emit('changeHighlightedNodes', $event)}}})],1),_c('b-tab',{staticClass:\"pt-2\",attrs:{\"title\":\"Information\"}},[_c('InformationPane',{ref:\"informationPane\",attrs:{\"automata\":_vm.automata}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"animationPane\"}},[_c('b-form-textarea',{staticClass:\"mb-3\",attrs:{\"placeholder\":\"Input string\",\"rows\":\"3\",\"max-rows\":\"6\"},model:{value:(_vm.inputString),callback:function ($$v) {_vm.inputString=$$v},expression:\"inputString\"}}),_c('div',{staticClass:\"d-flex justify-content-center mb-2\"},[_c('b-button',{staticClass:\"mr-2\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.onPassInputClick}},[_vm._v(\"Compute immediately\")]),_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.onStepClick}},[_vm._v(\"Step\")])],1),_c('b-button',{staticClass:\"mb-3\",attrs:{\"variant\":\"danger\"},on:{\"click\":_vm.onCancelClick}},[_vm._v(\"Cancel\")]),(_vm.isSimulating)?_c('h2',{attrs:{\"id\":\"decision\"}},[_vm._v(_vm._s(_vm.outcome))]):_vm._e(),_c('ConfigTable',{attrs:{\"automata\":_vm.automata,\"configs\":_vm.currentConfigs},on:{\"onDeleteConfig\":_vm.onDeleteConfig,\"onPruneConfig\":_vm.onPruneConfig}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport Automata from \"@/classes/Automata\";\nimport Vue from \"vue\";\nimport ConfigTable from \"@/components/rightpane/animation/ConfigTable.vue\";\nimport AutomataConfig from \"@/classes/AutomataConfig\";\n\n@Component({\n    components: {\n        ConfigTable\n    }\n})\nexport default class AnimationPane extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    /** The input string inputted by the user */\n    public inputString: string = '';\n\n    /** If true, we are simulating. If false, we aren't */\n    public isSimulating: boolean = false;\n\n    /** The set of current configurations of this automata (to be displayed) */\n    private currentConfigs: Set<AutomataConfig> = new Set();\n\n    /** The set of highlighted node names during animation */\n    private highlightedNodes: Set<string> = new Set();\n\n    /** The outcome of an animation */\n    private outcome: string = \"UNDECIDED\";\n\n    /**\n     * Updates outcome and currentConfigs fields to reflect Automata\n     */\n    public updateOutcomeAndCurrentConfigs() {\n        this.$set(this, \"outcome\", this.automata.getOutcome().toLocaleString());\n        this.$set(this, \"currentConfigs\", this.automata.getCurrentConfigs());\n    }\n\n    /**\n     * When the user clicks on \"Step\" button\n     */\n    private onStepClick() {\n        // Checks if input is legit\n        if (!RegExp('^([A-Z]|[a-z]|[1-9])*$').test(this.inputString)) {\n            // Tell the user\n            this.$bvToast.toast(`Only letters and numbers are allowed as input symbols.`, {\n                title: `Invalid input string!`,\n                variant: \"danger\",\n                autoHideDelay: 5000\n            });\n            return;\n        }\n\n        // We are now simulating\n        this.isSimulating = true;\n\n        // Set new input\n        this.automata.setInput(this.inputString);\n\n        // Remembers old highlighted nodes and clears the set\n        const oldHighlightedNodes: Set<string> = new Set(this.highlightedNodes);\n        this.highlightedNodes.clear();\n\n        // Steps the automata\n        this.automata.step();\n\n        // Updates outcome and current configurations\n        this.updateOutcomeAndCurrentConfigs();\n\n        // Fill in highlighted nodes\n        this.currentConfigs.forEach((currentConfig: AutomataConfig) => {\n            this.highlightedNodes.add(currentConfig.state);\n        });\n\n        // Emits event that toggles highlightings\n        this.$emit(\"changeHighlightedNodes\", {\n            deselect: oldHighlightedNodes,\n            select: new Set(this.highlightedNodes)\n        });\n\n        // Updates vue\n        this.$forceUpdate();\n    }\n\n    /**\n     * When the user clicks on \"Pass input\" button\n     */\n    private onPassInputClick() {\n        // Checks if input is legit\n        if (!RegExp('^([A-Z]|[a-z]|[1-9])*$').test(this.inputString)) {\n            // Tell the user\n            this.$bvToast.toast(`Only letters and numbers are allowed as input symbols.`, {\n                title: `Invalid input string!`,\n                variant: \"danger\",\n                autoHideDelay: 5000\n            });\n            return;\n        }\n\n        // We are now simulating\n        this.isSimulating = true;\n\n        // Clears automata\n        this.automata.reset();\n\n        // Remembers old highlighted nodes and clears the set\n        const oldHighlightedNodes: Set<string> = new Set(this.highlightedNodes);\n        this.highlightedNodes.clear();\n\n        // Sets the input string\n        this.automata.setInput(this.inputString);\n        this.inputString = '';\n        this.automata.simulate();\n\n        // Updates outcome and current configuration\n        this.updateOutcomeAndCurrentConfigs();\n\n        // Fill in highlighted nodes\n        this.highlightedNodes.clear();\n        this.currentConfigs.forEach((currentConfig: AutomataConfig) => {\n            this.highlightedNodes.add(currentConfig.state);\n        });\n\n        // Emits event that toggles highlightings\n        this.$emit(\"changeHighlightedNodes\", {\n            deselect: oldHighlightedNodes,\n            select: new Set(this.highlightedNodes)\n        });\n\n        // Updates vue\n        this.$forceUpdate();\n    }\n\n    /**\n     * When the user clicks on \"Cancel\" button\n     */\n    private onCancelClick() {\n        this.isSimulating = false; // We are no longer simulating\n        this.$set(this, \"currentConfigs\", new Set());\n        this.automata.reset(); // Reset automata configurations and input\n\n        // Emits event that toggles highlightings\n        this.$emit(\"changeHighlightedNodes\", {\n            deselect: new Set(this.highlightedNodes),\n            select: new Set()\n        });\n        this.highlightedNodes.clear();\n\n        // Updates vue\n        this.$forceUpdate();\n    }\n\n    /**\n     * When the user wants to delete a configuration\n     * @param config - the configuration to delete\n     */\n    private onDeleteConfig(config: AutomataConfig) {\n        this.automata.deleteConfig(config);\n        this.updateOutcomeAndCurrentConfigs();\n\n        // Check if any other configs have this state too\n        let stateExistsAsConfig: boolean = false;\n        this.automata.getCurrentConfigs().forEach(currentConfig => {\n            if (currentConfig.state === config.state) {\n                stateExistsAsConfig = true;\n            }\n        });\n\n        // If no other config shares this state, unhighlight it\n        if (!stateExistsAsConfig) {\n            // Emits event that toggles highlightings\n            this.$emit(\"changeHighlightedNodes\", {\n                deselect: new Set([config.state]),\n                select: new Set()\n            });\n        }\n    }\n\n    /**\n     * When the user wants to delete all but one config\n     * @param config - the config to leave\n     */\n    private onPruneConfig(config: AutomataConfig) {\n        const deselect = this.automata.pruneConfig(config);\n        this.updateOutcomeAndCurrentConfigs();\n\n        // Deselects states that no longer have configs\n        this.$emit(\"changeHighlightedNodes\", {\n            deselect: deselect,\n            select: new Set()\n        });\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnimationPane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AnimationPane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AnimationPane.vue?vue&type=template&id=922f7c4a&scoped=true&\"\nimport script from \"./AnimationPane.vue?vue&type=script&lang=ts&\"\nexport * from \"./AnimationPane.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"922f7c4a\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"informationPane\"}},[_c('p',[_vm._v(\"Number of states: \"+_vm._s(Object.keys(_vm.automata[\"cacheNodeID\"]).length))]),_c('p',[_vm._v(\"Number of transitions: \"+_vm._s(_vm.automata[\"cacheTransition\"].getNumberOfTransitions()))]),_c('p',[_vm._v(\"Number of objects: \"+_vm._s(Object.keys(_vm.automata[\"cacheNodeID\"]).length + _vm.automata[\"cacheTransition\"][\"cacheNoOfTransitions\"]))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport Automata from \"@/classes/Automata\";\nimport Vue from \"vue\";\n\n@Component\nexport default class InformationPane extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InformationPane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InformationPane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./InformationPane.vue?vue&type=template&id=62987830&scoped=true&\"\nimport script from \"./InformationPane.vue?vue&type=script&lang=ts&\"\nexport * from \"./InformationPane.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"62987830\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport {BTab, BTabs} from \"bootstrap-vue\";\nimport AnimationPane from \"./animation/AnimationPane.vue\";\nimport InformationPane from \"./information/InformationPane.vue\";\nimport Vue from \"vue\";\nimport Automata from \"@/classes/Automata\";\n\n@Component({\n    components: {\n        BTabs, BTab,\n        AnimationPane, InformationPane\n    }\n})\nexport default class RightPane extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    /** Animation pane reference */\n    private animationPane: any;\n\n    /** Information pane reference */\n    private informationPane: any;\n\n    /** Accessor for animation pane reference */\n    get AnimationPane() {\n        return this.animationPane;\n    }\n\n    /** Accessor for information pane reference */\n    get InformationPane() {\n        return this.informationPane;\n    }\n\n    private mounted() {\n        this.animationPane = (this.$refs[\"animationPane\"] as any);\n        this.informationPane = (this.$refs[\"informationPane\"] as any);\n    }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RightPane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RightPane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./RightPane.vue?vue&type=template&id=5e464dae&scoped=true&\"\nimport script from \"./RightPane.vue?vue&type=script&lang=ts&\"\nexport * from \"./RightPane.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5e464dae\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"leftPane\"}},[_c('h2',[_vm._v(_vm._s(_vm.automata.getModelName()))]),_c('b-tabs',[_c('b-tab',{staticClass:\"pt-2\",attrs:{\"title\":\"Computation\",\"active\":\"\"}},[_c('ComputationPane',{ref:\"computationPane\",attrs:{\"automata\":_vm.automata},on:{\"onOperationButtonClick\":function($event){return _vm.$emit('onOperationButtonClick', $event)},\"onStateFoldCompute\":function($event){return _vm.$emit('onStateFoldCompute', $event)},\"onDuplicateCompute\":function($event){return _vm.$emit('onDuplicateCompute', $event)},\"onUnionCompute\":function($event){return _vm.$emit('onUnionCompute', $event)},\"onConcatenationCompute\":function($event){return _vm.$emit('onConcatenationCompute', $event)},\"onKleeneStarCompute\":function($event){return _vm.$emit('onKleeneStarCompute', $event)},\"onProductCompute\":function($event){return _vm.$emit('onProductCompute', $event)}}})],1),_c('b-tab',{staticClass:\"pt-2\",attrs:{\"title\":\"Visualisation\"}},[_c('VisualisationPane',{ref:\"visualisationPane\",attrs:{\"automata\":_vm.automata},on:{\"onMultiLevelExplore\":function($event){return _vm.$emit('onMultiLevelExplore', $event)},\"onSearchItemClick\":function($event){return _vm.$emit('onSearchItemClick', $event)}}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"visualisationPane\"}},[_c('OutlinePane',{ref:\"outlinePane\"}),_c('MultiLevelSelect',{on:{\"multiLevelExplore\":function($event){return _vm.$emit('onMultiLevelExplore', $event)}}}),_c('StateSearch',{attrs:{\"automata\":_vm.automata},on:{\"onSearchItemClick\":function($event){return _vm.$emit('onSearchItemClick', $event)}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"stateSearch\"}},[_c('b-form-input',{staticClass:\"mt-3\",attrs:{\"type\":\"text\",\"placeholder\":\"State search\"},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.onSearch($event)}}}),_c('SearchTable',{ref:\"searchTable\",attrs:{\"automata\":_vm.automata},on:{\"itemClick\":function($event){return _vm.$emit('onSearchItemClick', $event)}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport Vue from \"vue\";\nimport SearchTable from \"@/components/leftpane/visualisation/SearchTable.vue\";\nimport Automata from \"@/classes/Automata\";\n\n@Component({\n    components: {\n        SearchTable\n    }\n})\nexport default class StateSearch extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    /**\n     * When the user wants to search for a state\n     */\n    private onSearch(event: any) {\n        // Gets query string\n        const query: string = event.target.value;\n\n        // Gets search table reference\n        const searchTable: any = (this.$refs[`searchTable`] as any);\n\n        // Sets table contents via query\n        searchTable.setTable(query, this.automata.findStates(query));\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StateSearch.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StateSearch.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./StateSearch.vue?vue&type=template&id=a6a72022&scoped=true&\"\nimport script from \"./StateSearch.vue?vue&type=script&lang=ts&\"\nexport * from \"./StateSearch.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a6a72022\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-form-checkbox',{staticClass:\"mt-2\",model:{value:(_vm.enabled),callback:function ($$v) {_vm.enabled=$$v},expression:\"enabled\"}},[_vm._v(\" Outline pane: \"+_vm._s(_vm.enabled ? 'Enabled' : 'Disabled')+\" \")]),(_vm.enabled)?_c('img',{ref:\"outlineImage\",staticClass:\"outline-image\",attrs:{\"src\":_vm.imageSrc},on:{\"click\":_vm.onPaneClick}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Watch} from \"vue-property-decorator\";\nimport Vue from \"vue\";\nimport OutlineUpdateEventHandler from \"@/events/OutlineUpdateEventHandler\";\n\n@Component\nexport default class OutlinePane extends Vue {\n    /** What the image is displaying */\n    private imageSrc: string = \"\";\n\n    /** If true, outline pane will be visible and updated */\n    private enabled: boolean = false;\n    get Enabled(): boolean {\n        return this.enabled;\n    }\n\n    private mounted() {\n        // Updates outline pane\n        OutlineUpdateEventHandler.$emit('updateOutline');\n    }\n\n    /**\n     * Updates the image outline\n     * @param png - the image to update with\n     */\n    public updateOutline(png: any) {\n        Vue.set(this, \"imageSrc\", png);\n    }\n\n    /**\n     * When the user clicks on the pane, perform a manual update\n     */\n    private onPaneClick() {\n        OutlineUpdateEventHandler.$emit('updateOutline');\n    }\n\n    @Watch(\"enabled\")\n    private onEnabledChange(val: number, oldVal: number) {\n        // If we're enabling, update pane\n        if (val)\n            OutlineUpdateEventHandler.$emit('updateOutline');\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OutlinePane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OutlinePane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./OutlinePane.vue?vue&type=template&id=4bc8f5ea&scoped=true&\"\nimport script from \"./OutlinePane.vue?vue&type=script&lang=ts&\"\nexport * from \"./OutlinePane.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./OutlinePane.vue?vue&type=style&index=0&id=4bc8f5ea&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4bc8f5ea\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport Vue from \"vue\";\nimport Automata from \"@/classes/Automata\";\nimport MultiLevelSelect from \"@/components/leftpane/visualisation/MultiLevelSelect.vue\";\nimport SearchTable from \"@/components/leftpane/visualisation/SearchTable.vue\";\nimport StateSearch from \"@/components/leftpane/visualisation/StateSearch.vue\";\nimport OutlinePane from \"@/components/leftpane/visualisation/OutlinePane.vue\";\n\n@Component({\n    components: {\n        OutlinePane,\n        StateSearch,\n        SearchTable, MultiLevelSelect\n    }\n})\nexport default class VisualisationPane extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    /**\n     * Outline pane component reference\n     */\n    private outlinePane: any;\n\n    private mounted() {\n        this.outlinePane = this.$refs[\"outlinePane\"];\n    }\n\n    get OutlinePane(): any {\n        return this.outlinePane;\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VisualisationPane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VisualisationPane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./VisualisationPane.vue?vue&type=template&id=59cfd9b2&scoped=true&\"\nimport script from \"./VisualisationPane.vue?vue&type=script&lang=ts&\"\nexport * from \"./VisualisationPane.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59cfd9b2\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"operations\"}},[_c('OperationButton',{attrs:{\"name\":\"State fold\",\"max-stages\":\"1\",\"variant\":\"warning\",\"success-message-enabled\":false},on:{\"onOperationButtonClick\":function($event){return _vm.$emit('onOperationButtonClick', $event)},\"onOperationCompute\":function($event){return _vm.$emit('onStateFoldCompute', $event)}}}),_c('OperationButton',{attrs:{\"name\":\"Duplicate\",\"max-stages\":\"1\",\"success-message-enabled\":false},on:{\"onOperationButtonClick\":function($event){return _vm.$emit('onOperationButtonClick', $event)},\"onOperationCompute\":function($event){return _vm.$emit('onDuplicateCompute', $event)}}}),_c('OperationButton',{attrs:{\"name\":\"Union\",\"max-stages\":\"2\"},on:{\"onOperationButtonClick\":function($event){return _vm.$emit('onOperationButtonClick', $event)},\"onOperationCompute\":function($event){return _vm.$emit('onUnionCompute', $event)}}}),(_vm.automataTypeEnabled('pushdown'))?_c('OperationButton',{attrs:{\"name\":\"Concatenation\",\"max-stages\":\"2\"},on:{\"onOperationButtonClick\":function($event){return _vm.$emit('onOperationButtonClick', $event)},\"onOperationCompute\":function($event){return _vm.$emit('onConcatenationCompute', $event)}}}):_vm._e(),(_vm.automataTypeEnabled('pushdown'))?_c('OperationButton',{attrs:{\"name\":\"Kleene star\",\"max-stages\":\"1\"},on:{\"onOperationButtonClick\":function($event){return _vm.$emit('onOperationButtonClick', $event)},\"onOperationCompute\":function($event){return _vm.$emit('onKleeneStarCompute', $event)}}}):_vm._e(),(_vm.automataTypeEnabled('finite'))?_c('OperationButton',{attrs:{\"name\":\"Product\",\"max-stages\":\"2\"},on:{\"onOperationButtonClick\":function($event){return _vm.$emit('onOperationButtonClick', $event)},\"onOperationCompute\":function($event){return _vm.$emit('onProductCompute', $event)}}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.currentStage === 0)?_c('b-button',{staticClass:\"button\",attrs:{\"variant\":_vm.currentStage === 0 ? _vm.variant : 'success'},on:{\"click\":_vm.onClick}},[_vm._v(\" \"+_vm._s(_vm.name)+\" \")]):_c('b-button-group',{staticClass:\"button p-0\"},[_c('b-button',{staticClass:\"button\",attrs:{\"variant\":_vm.currentStage === 0 ? _vm.variant : 'success'},on:{\"click\":_vm.onClick}},[_vm._v(\" \"+_vm._s(_vm.name)+\" \")]),_c('b-button',{attrs:{\"variant\":\"danger\"},on:{\"click\":_vm.onCancelClick}},[_vm._v(\"Cancel\")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport Vue from \"vue\";\nimport ordinal from \"ordinal\";\n\n@Component\nexport default class OperationButton extends Vue {\n    /** The name of this operation */\n    @Prop() private readonly name!: string;\n\n    /** The variant of the button */\n    @Prop({default: 'primary'}) private readonly variant!: string;\n\n    /** The number of stages this button should go through */\n    @Prop({default: 1}) private readonly maxStages!: number;\n\n    /** If true, success messages will be enabled. If false, they will not show up */\n    @Prop({default: true}) private readonly successMessageEnabled!: boolean;\n\n    /** The current stage this button is on */\n    private currentStage: number = 0;\n\n    /** Selected nodes for each stage, with the index being the stage */\n    private selectedNodes: Set<string>[] = [];\n\n    /**\n     * When the user clicks on this operation button\n     */\n    private onClick() {\n        // Uses an event and a callback to get the currently selected nodes\n        this.$emit(\"onOperationButtonClick\", (nodes: Set<string>) => {\n            // If nodes have been selected\n            if (nodes.size > 0) {\n                // Push nodes and increment stage\n                this.selectedNodes.push(nodes);\n                this.currentStage++;\n\n                // If we've reached the final stage, emit event that we're done and clear properties\n                if (this.currentStage >= this.maxStages) {\n                    this.$emit(\"onOperationCompute\", this.selectedNodes);\n                    this.currentStage = 0;\n                    Vue.set(this, \"selectedNodes\", []);\n\n                    // Give the user a success message, if it's enabled\n                    if (this.successMessageEnabled) {\n                        this.$bvToast.toast(`${this.name} successfully computed!`, {\n                            title: 'Success!',\n                            variant: \"success\",\n                            autoHideDelay: 5000\n                        });\n                    }\n                } else {\n                    // Tell the user to select the next group\n                    this.$bvToast.toast(`Select the ${ordinal(this.currentStage + 1)} machine and press ${this.name} again.`, {\n                        title: `Select another machine`,\n                        variant: \"warning\",\n                        autoHideDelay: 5000\n                    });\n                }\n            } else {\n                // Tell the user to select something this time\n                this.$bvToast.toast(`Please select a machine and press ${this.name} again.`, {\n                    title: `No machines selected!`,\n                    variant: \"warning\",\n                    autoHideDelay: 5000\n                });\n            }\n        });\n    }\n\n    /**\n     * When the user wants to cancel this operation\n     */\n    private onCancelClick() {\n        this.currentStage = 0;\n        Vue.set(this, \"selectedNodes\", []);\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OperationButton.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OperationButton.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./OperationButton.vue?vue&type=template&id=46b45728&scoped=true&\"\nimport script from \"./OperationButton.vue?vue&type=script&lang=ts&\"\nexport * from \"./OperationButton.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./OperationButton.vue?vue&type=style&index=0&id=46b45728&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"46b45728\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport Vue from \"vue\";\nimport Automata from \"@/classes/Automata\";\nimport OperationButton from \"@/components/leftpane/computation/OperationButton.vue\";\nimport FiniteAutomata from \"@/classes/FiniteAutomata\";\nimport PushdownAutomata from \"@/classes/PushdownAutomata\";\n@Component({\n    components: {OperationButton}\n})\nexport default class ComputationPane extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    private automataTypeEnabled(type: string): boolean {\n        if (type === \"finite\") {\n            return this.automata instanceof FiniteAutomata;\n        }\n        else if (type === \"pushdown\") {\n            return this.automata instanceof FiniteAutomata ||\n                    this.automata instanceof PushdownAutomata;\n        }\n        return true;\n    }\n}\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComputationPane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/ts-loader/index.js??ref--13-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComputationPane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ComputationPane.vue?vue&type=template&id=12a87784&scoped=true&\"\nimport script from \"./ComputationPane.vue?vue&type=script&lang=ts&\"\nexport * from \"./ComputationPane.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ComputationPane.vue?vue&type=style&index=0&id=12a87784&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"12a87784\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Component, Prop} from \"vue-property-decorator\";\nimport {BTab, BTabs} from \"bootstrap-vue\";\nimport Vue from \"vue\";\nimport VisualisationPane from \"@/components/leftpane/visualisation/VisualisationPane.vue\";\nimport ComputationPane from \"@/components/leftpane/computation/ComputationPane.vue\";\nimport Automata from \"@/classes/Automata\";\n\n@Component({\n    components: {\n        ComputationPane,\n        VisualisationPane,\n        BTab, BTabs\n    }\n})\nexport default class LeftPane extends Vue {\n    /** Automata reference */\n    @Prop() private readonly automata!: Automata;\n\n    /** Computation pane reference */\n    private computationPane: any;\n\n    /** Visualisation pane reference */\n    private visualisationPane: any;\n\n    private mounted() {\n        this.computationPane = this.$refs[\"computationPane\"];\n        this.visualisationPane = this.$refs[\"visualisationPane\"];\n    }\n\n    /** Accessor for computation pane reference */\n    get ComputationPane() {\n        return this.computationPane;\n    }\n\n    /** Accessor for visualisation pane reference */\n    get VisualisationPane() {\n        return this.visualisationPane;\n    }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LeftPane.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LeftPane.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./LeftPane.vue?vue&type=template&id=03ddabea&scoped=true&\"\nimport script from \"./LeftPane.vue?vue&type=script&lang=ts&\"\nexport * from \"./LeftPane.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"03ddabea\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {Vue, Component, Prop} from 'vue-property-decorator';\nimport { BButton, BContainer, BRow, BCol, BTabs, BTab, BFormTextarea, BFormCheckbox } from 'bootstrap-vue';\nimport AutomataPreview from '@/components/middlepane/AutomataPreview.vue';\nimport ConfigTable from '@/components/rightpane/animation/ConfigTable.vue';\nimport Automata from \"../classes/Automata\";\nimport uuidv1 from \"uuid/v1\";\nimport AutomataOperations from \"@/classes/AutomataOperations\";\nimport NewTransitionModal from \"@/components/modals/NewTransitionModal.vue\";\nimport SearchTable from \"@/components/leftpane/visualisation/SearchTable.vue\";\nimport MultiLevelSelect from \"@/components/leftpane/visualisation/MultiLevelSelect.vue\";\n\nimport MiddlePane from \"@/components/middlepane/MiddlePane.vue\";\nimport RightPane from \"@/components/rightpane/RightPane.vue\";\nimport LeftPane from \"@/components/leftpane/LeftPane.vue\";\nimport ModalsEventHandler from \"@/events/ModalsEventHandler\";\nimport FiniteAutomata from \"@/classes/FiniteAutomata\";\nimport PushdownAutomata from \"@/classes/PushdownAutomata\";\nimport TuringMachine from \"@/classes/TuringMachine\";\nimport OutlineUpdateEventHandler from \"@/events/OutlineUpdateEventHandler\";\nimport StyleUpdateEventHandler from \"@/events/StyleUpdateEventHandler\";\n\n@Component({\n    components: {\n        // Custom components\n        MiddlePane, RightPane, LeftPane,\n        ConfigTable, AutomataPreview, NewTransitionModal, SearchTable, MultiLevelSelect,\n\n        // Bootstrap components\n        BButton, BContainer, BRow, BCol, BTabs, BTab, BFormTextarea, BFormCheckbox,\n    },\n})\nexport default class TabBody extends Vue {\n    @Prop() public readonly automata!: Automata;\n    @Prop() public readonly index!: number;\n\n    /** Automata preview reference */\n    private automataPreview: any;\n\n    /** Right pane reference */\n    private rightPane: any;\n\n    /** Left pane reference */\n    private leftPane: any;\n\n    /** Middle pane reference */\n    private middlePane: any;\n\n    /** A stored copy of currently applied style cards */\n    private cards: any;\n\n    get RightPane(): any {\n        return this.rightPane;\n    }\n\n    get LeftPane(): any {\n        return this.leftPane;\n    }\n\n    get MiddlePane(): any {\n        return this.middlePane;\n    }\n\n    get StyleCards(): any {\n        return this.cards;\n    }\n\n    private mounted() {\n        this.automataPreview = (this.$refs[\"middlePane\"] as any).getAutomataPreviewReference();\n        this.rightPane = (this.$refs[\"rightPane\"] as any);\n        this.leftPane = (this.$refs[\"leftPane\"] as any);\n        this.middlePane = (this.$refs[\"middlePane\"] as any);\n\n        // Update outline pane if event is captured\n        OutlineUpdateEventHandler.$on('updateOutline', () => {\n            this.updateOutlinePane();\n        });\n    }\n\n    /**\n     * Updates style cards\n     */\n    public updateStyleCards(cards: any) {\n        this.onStylesChange(cards);\n        this.middlePane.updateStyleCards(cards);\n    }\n\n    /**\n     * Updates outline pane using Cytoscape instance\n     */\n    private updateOutlinePane() {\n        // If the pane is disabled, don't update\n        if (!this.leftPane.VisualisationPane.OutlinePane.Enabled)\n            return;\n\n        // Selects a cytoscape div where the bounding rect isn't 0\n        let cytoscapeDiv: any = undefined;\n        document.querySelectorAll(\"#cytoscape-div\").forEach((div: Element) => {\n            if (div.getBoundingClientRect().width != 0 && div.getBoundingClientRect().height != 0)\n                cytoscapeDiv = div;\n        });\n\n        // If cytoscape is still undefined, just leave\n        if (!cytoscapeDiv)\n            return;\n\n        // Gets properties\n        const w = cytoscapeDiv.getBoundingClientRect().width;\n        const h = cytoscapeDiv.getBoundingClientRect().height;\n        const bb = this.automataPreview.cy.elements().boundingBox();\n        const zoom = Math.min(w / bb.w, h / bb.h);\n\n        // Gets outline png and updates img with it\n        const png = this.automataPreview.cy.png({\n            full: true,\n            scale: zoom,\n            maxHeight: h,\n            maxWidth: w\n        });\n        this.leftPane.VisualisationPane.OutlinePane.updateOutline(png);\n    }\n\n    /**\n     * Swaps the stylesheet for another\n     * @param newStyle - the new stylesheet\n     */\n    private changeStyle(newStyle: any) {\n        this.automataPreview.cy.style(newStyle);\n    }\n\n    /**\n     * Executed when styles are updated\n     */\n    private onStylesChange(cards: any) {\n        this.cards = cards;\n\n        // Gets styles array and resets cytoscape style to default\n        const defaultStyles: any[] = require(\"../config/cytoscape-config\").default.style;\n        this.automataPreview.cy.style(defaultStyles);\n\n        // For every card\n        Object.keys(cards).forEach(card => {\n            // For every style\n            Object.keys(cards[card].styles).forEach(styleName => {\n                // Gets selector and style\n                const selector = cards[card].styles[styleName].selector;\n                const style = cards[card].styles[styleName].style;\n\n                // Updates selector based on nodes\n                let newSelector = \"\";\n                let selectedNodeIndex = 0;\n\n                // Goes through every selected state\n                cards[card].states.forEach((state: string) => {\n                    // If this state exists, append to selector\n                    if (this.automata.getState(state)) {\n                        newSelector +=\n                            (newSelector ? ',' : '') +\n                            \"#\" +\n                            this.automata.getState(state).data.id +\n                            (selector === 'node' ? '' : selector);\n                    }\n                    selectedNodeIndex++;\n                });\n\n                this.automataPreview.cy.style()\n                    .selector(newSelector)\n                    .style('background-color', style['background-color'])\n                    .style('border-width', style['border-width'])\n                    .update();\n            });\n        });\n\n        // Waits for a tick and then updates outline\n        this.$nextTick();\n        this.updateOutlinePane();\n    }\n\n    /**\n     * When user wants to create a transition\n     */\n    private onCreateTransition(args: any) {\n        // Destructures arguments\n        const {event, sourceNode, targetNode, addedEles} = args;\n\n        // Removes automatically created element\n        this.automataPreview.cy.remove(addedEles);\n\n        // Gets automata type\n        let automataType: string = \"\";\n        if (this.automata instanceof FiniteAutomata)\n            automataType = \"FA\";\n        if (this.automata instanceof PushdownAutomata)\n            automataType = \"PDA\";\n        if (this.automata instanceof TuringMachine)\n            automataType = \"TM\";\n\n        // Gets existing symbols\n        const existingSymbols = this.automata.cacheTransition.getTransitions(\n            sourceNode.json().data.name,\n            targetNode.json().data.name);\n\n        // Uses modal for transition creation\n        ModalsEventHandler.$emit(\"onNewTransition\", {\n            automataType, existingSymbols,\n            callback: (symbol: string, payload: any) => {\n                this.automata.addTransition(\n                    symbol,\n                    sourceNode.json().data.name,\n                    targetNode.json().data.name,\n                    payload\n                );\n            }\n        });\n    }\n\n    /**\n     * When user wants to edit a transition\n     * @param transitionID - the ID of the transition to edit\n     */\n    private onEditTransition(transitionID: string) {\n        // Gets automata type\n        let automataType: string = \"\";\n        if (this.automata instanceof FiniteAutomata)\n            automataType = \"FA\";\n        if (this.automata instanceof PushdownAutomata)\n            automataType = \"PDA\";\n        if (this.automata instanceof TuringMachine)\n            automataType = \"TM\";\n\n        // Gets source and target nodes in advance\n        const [sourceNode, targetNode] = [\n            this.automata.getData()[transitionID].data.sourceName,\n            this.automata.getData()[transitionID].data.targetName\n        ];\n\n        // Gets existing symbols\n        const existingSymbols = this.automata.cacheTransition.getTransitions(sourceNode, targetNode);\n        existingSymbols.delete(this.automata.getData()[transitionID].data.symbol);\n\n        // Uses modal for transition editing\n        ModalsEventHandler.$emit(\"onEditTransition\", {\n            automataType, existingSymbols,\n            transition: this.automata.getData()[transitionID].data,\n            callback: (symbol: string, payload: any) => {\n                // Remove old transition, add new one\n                this.automata.removeTransitionWithID(transitionID);\n                this.automata.addTransition(\n                    symbol,\n                    sourceNode,\n                    targetNode,\n                    payload\n                );\n            }\n        });\n    }\n\n    /**\n     * When user wants to edit a state\n     * @param stateID - the ID of the state to edit\n     */\n    private async onEditState(stateID: string) {\n        // Gets state\n        let state = this.automata.getData()[stateID];\n\n        let response = await (this as any).$dialog.prompt({\n            text: `Type new name here`,\n            title: state.data.displayName ? `Renaming '${state.data.displayName}'` : \"Naming state fold\"\n        });\n\n        // If it wasn't cancelled, rename\n        if (response) {\n            this.automataPreview.cy.getElementById(stateID).json({\n                data: {\n                    displayName: response\n                }\n            });\n            this.automata.renameState(stateID, response);\n\n            // Updates outline pane\n            await this.$nextTick();\n            this.updateOutlinePane();\n        }\n    }\n\n    /**\n     * When the user needs to change highlighted nodes\n     */\n    private onChangeHighlightedNodes(args: any) {\n        // Destructs the args\n        const {deselect, select} = args;\n\n        // Deselects nodes\n        deselect.forEach((deselectNode: any) => {\n            const id = this.automata.getState(deselectNode).data.id;\n\n            // Removes from Automata\n            const classIndex = this.automata.getData()[id].classes.indexOf('highlighted-node');\n            this.automata[\"data\"][id].classes.splice(classIndex, 1);\n\n            // Removes from cytoscape\n            this.automataPreview.cy.getElementById(id).removeClass('highlighted-node');\n        });\n\n        // Selects nodes\n        select.forEach((selectNode: any) => {\n            const id = this.automata.getState(selectNode).data.id;\n\n            // Adds to Automata\n            this.automata[\"data\"][id].classes.push('highlighted-node');\n\n            // Adds to cytoscape\n            this.automataPreview.cy.getElementById(id).addClass('highlighted-node');\n        });\n    }\n\n    /**\n     * When the user clicks on an operation button\n     */\n    private onOperationButtonClick(callback: any) {\n        // Creates callback argument (set of selected nodes)\n        const callbackArg = new Set(this.automataPreview.selectedNodes);\n\n        // Deselect all nodes\n        for (const selectedID of this.automataPreview.selectedNodes)\n            this.automataPreview.cy.getElementById(selectedID).unselect();\n\n        // Calls back this event with the currently selected nodes\n        callback(callbackArg);\n    }\n\n    /**\n     * When the user wants to perform \"State fold\"\n     */\n    private onStateFoldCompute(selectedNodes: Set<string>[]) {\n        let cancel: boolean = false;\n        // Checks for state folds or states that are already in folds\n        selectedNodes[0].forEach(selectedNode => {\n            // If this is a state fold\n            if (this.automataPreview.cy.getElementById(selectedNode)._private.classes.has(\"parent\"))\n                cancel = true;\n\n            // If this is a state that is in a fold already\n            if (this.automata.cacheFoldedStates.isStateInFold(selectedNode))\n                cancel = true;\n        });\n        if (cancel)\n            return;\n\n        // Creates parent node\n        let parentID = uuidv1();\n        const parentNode = this.automataPreview.cy.add([\n            {\n                group: 'nodes',\n                data: { id: parentID, name: \"\" },\n                position: { x: 100, y: 100 },\n                classes: ['parent']\n            },\n        ]);\n\n        // Sets parent of all selected nodes\n        let grandParent: any = null;\n        for (const node of selectedNodes[0]) {\n            // Only do this if this is a node\n            if (this.automata.getStateById(node).data.type === \"node\") {\n                console.log(node);\n                grandParent = this.automataPreview.cy.getElementById(node)[0]._private.data.parent;\n                this.automataPreview.cy.getElementById(node).move({\n                    parent: parentID\n                });\n\n                // Sets parent property in data\n                let data: any = this.automata.getData();\n                data[node].parent = parentID;\n                this.automata.setData(data);\n            }\n        }\n\n        // Sets grandparent (parent of parent)\n        this.automataPreview.cy.getElementById(parentID).move({\n            parent: grandParent\n        });\n\n        // Add this node to automata class\n        let newData: any = this.automata.getData();\n        newData[parentID] = this.automataPreview.cy.nodes(\"#\" + parentID)[0]._private;\n        this.automata.setData(newData);\n\n        // Add all nodes to cache\n        selectedNodes[0].forEach(selectedNode => {\n            // Only do this if this is a node\n            if (this.automata.getStateById(selectedNode).data.type === \"node\")\n                this.automata.cacheFoldedStates.addStateToFold(selectedNode, parentID);\n        });\n    }\n\n    /**\n     * When the user wants to perform \"Duplicate\"\n     */\n    private async onDuplicateCompute(selectedNodes: Set<string>[]) {\n        // Duplicates\n        const newDuplicatedObjects: Set<string> = AutomataOperations.duplicate(this.automata, selectedNodes[0]);\n\n        // Waits for one tick\n        await this.$nextTick();\n\n        // De-selects the currently selected nodes\n        for (const selectedObj of this.automataPreview.selectedNodes)\n            this.automataPreview.cy.getElementById(selectedObj).unselect();\n\n        // Clears selected nodes\n        this.automataPreview.selectedNodes.clear();\n\n        // Selects all the duplicates\n        for (const newDuplicatedObject of newDuplicatedObjects)\n            this.automataPreview.cy.getElementById(newDuplicatedObject).select();\n    }\n\n    /**\n     * When the user wants to perform \"Union\"\n     */\n    private onUnionCompute(selectedNodes: Set<string>[]) {\n        // Performs union\n        AutomataOperations.union(this.automata, selectedNodes[0], selectedNodes[1], this.automataPreview.cy);\n    }\n\n    /**\n     * When the user wants to perform \"Concatenation\"\n     */\n    private onConcatenationCompute(selectedNodes: Set<string>[]) {\n        // Gets final states of automata 1 and initial states of automata 2\n        const finalStateAutomata1 = AutomataOperations.getFinalStates(this.automata, selectedNodes[0]);\n        const initialStateAutomata2 = AutomataOperations.getInitialStates(this.automata, selectedNodes[1]);\n\n        // Concatenate\n        AutomataOperations.concatenation(this.automata, finalStateAutomata1, initialStateAutomata2, this.automataPreview.cy);\n        this.$forceUpdate();\n    }\n\n    /**\n     * When the user wants to perform \"Kleene star\"\n     */\n    private onKleeneStarCompute(selectedNodes: Set<string>[]) {\n        // Gets final states and initial states of the automata\n        const finalStates = AutomataOperations.getFinalStates(this.automata, selectedNodes[0]);\n        const initialStates = AutomataOperations.getInitialStates(this.automata, selectedNodes[0]);\n\n        // Kleene star\n        AutomataOperations.kleeneStar(this.automata, finalStates, initialStates, this.automataPreview.cy);\n        this.$forceUpdate();\n    }\n\n    /**\n     * When the user wants to perform \"Product\"\n     */\n    private onProductCompute(selectedNodes: Set<string>[]) {\n        // Product\n        AutomataOperations.product(this.automata, selectedNodes[0], selectedNodes[1], this.automataPreview.cy);\n        this.$forceUpdate();\n    }\n\n    /**\n     * When the user clicked on an item in the search table\n     */\n    private onSearchItemClick(id: string) {\n        // Get position of node and pans there\n        this.automataPreview.cy.center(this.automataPreview.cy.getElementById(id));\n    }\n\n    /**\n     * When the user wants to see multi-levels\n     */\n    private onMultiLevelExplore(level: number) {\n        // Clear all selected nodes\n        this.automataPreview.selectedNodes.forEach((selectedNode: any) => this.automataPreview.cy.getElementById(selectedNode).unselect());\n\n        // If the level is -1, don't select anything\n        if (level === -1)\n            return;\n\n        // Stores names of open and closed nodes\n        const openNodes: [string, number][] = [];\n        const closedNodes: Set<string> = new Set();\n\n        // Fills open nodes with initial states\n        this.automata.getInitialStates().forEach((initialState: any) => openNodes.push([initialState, 0]));\n\n        // Goes through all open nodes\n        while (openNodes.length > 0) {\n            // Pops next node\n            const currentNodePopped = openNodes.pop();\n            if (currentNodePopped) {\n                const [currentNode, currentLevel]: [string, number] = currentNodePopped;\n\n                // If this node is closed, don't bother\n                if (closedNodes.has(currentNode))\n                    continue;\n\n                // Select this node\n                const currentNodeID = this.automata.getState(currentNode).data.id;\n                this.automataPreview.cy.getElementById(currentNodeID).select();\n\n                // Close this node\n                closedNodes.add(currentNode);\n\n                // If there are still levels to go up by\n                if (currentLevel < level) {\n                    // Get the next nodes we can go to and add to open nodes\n                    const targetNodeNames = Object.keys(this.automata.cacheTransition.getTargetMappings(currentNode));\n                    targetNodeNames.forEach((targetNodeName: any) => openNodes.push([\n                        targetNodeName,\n                        currentLevel + 1\n                    ]));\n                }\n            } else {\n                break;\n            }\n        }\n    }\n\n    /**\n     * Is called when the new transition modal is hidden\n     * (is mainly used for a bug fix)\n     */\n    private onNewTransitionModalHide() {\n        // Gets automata preview and deselects everything\n        for (const selectedID of this.automataPreview.selectedNodes)\n            this.automataPreview.cy.getElementById(selectedID).unselect();\n        this.automataPreview.selectedNodes.clear();\n    }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TabBody.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TabBody.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./TabBody.vue?vue&type=template&id=6ef5f2a0&scoped=true&\"\nimport script from \"./TabBody.vue?vue&type=script&lang=ts&\"\nexport * from \"./TabBody.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./TabBody.vue?vue&type=style&index=0&id=6ef5f2a0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6ef5f2a0\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-modal',{ref:\"newTabModal\",scopedSlots:_vm._u([{key:\"modal-title\",fn:function(){return [_vm._v(\" New Automata \")]},proxy:true},{key:\"modal-footer\",fn:function(){return [_c('div',{staticClass:\"w-100\"},[_c('b-button',{staticClass:\"float-left\",attrs:{\"variant\":\"danger\"},on:{\"click\":_vm.onCancelClick}},[_vm._v(\"Cancel\")]),_c('b-button',{staticClass:\"float-right\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.onAddClick}},[_vm._v(\"Add\")])],1)]},proxy:true}]),model:{value:(_vm.isModalVisible),callback:function ($$v) {_vm.isModalVisible=$$v},expression:\"isModalVisible\"}},[_c('b-form',{on:{\"submit\":function($event){}}},[_c('b-form-group',{attrs:{\"label\":(\"Automata type: \" + (_vm.getAutomataName()))}},[_c('b-button-group',[_c('b-button',{attrs:{\"variant\":\"primary\",\"disabled\":_vm.type === 'FA'},on:{\"click\":function($event){return _vm.onTypeClick('FA')}}},[_vm._v(\"Finite Automata\")]),_c('b-button',{attrs:{\"variant\":\"primary\",\"disabled\":_vm.type === 'PDA'},on:{\"click\":function($event){return _vm.onTypeClick('PDA')}}},[_vm._v(\"Pushdown Automata\")]),_c('b-button',{attrs:{\"variant\":\"primary\",\"disabled\":_vm.type === 'TM'},on:{\"click\":function($event){return _vm.onTypeClick('TM')}}},[_vm._v(\"Turing Machine\")])],1)],1),_c('b-form-group',{attrs:{\"label\":(\"Automata name: \" + (_vm.name ? _vm.name : 'Automata'))}},[_c('b-form-input',{attrs:{\"placeholder\":\"Automata\"},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport Vue from 'vue';\nimport {Component} from 'vue-property-decorator';\nimport ConfigTable from '@/components/rightpane/animation/ConfigTable.vue';\nimport AutomataPreview from '@/components/middlepane/AutomataPreview.vue';\nimport {\n    BButton, BButtonGroup,\n    BCol,\n    BContainer,\n    BForm,\n    BFormInput,\n    BFormTextarea,\n    BModal,\n    BRow,\n    BTab,\n    BTabs\n} from 'bootstrap-vue';\nimport TabBody from '@/components/TabBody.vue';\nimport $ from 'jquery';\n\n@Component({\n    components: {\n        BForm, BFormInput, BFormTextarea, BModal\n    },\n})\nexport default class NewTabModal extends Vue {\n    /** Type of automata selected */\n    private type: string = \"FA\";\n\n    /** Name of automata inputted */\n    private name: string = \"\";\n\n    /** If true, modal is visible. If false, it is not */\n    private isModalVisible: boolean = false;\n\n    /** Callback function to run when new automata has been \"created\" */\n    private callback!: (type: string, name: string) => void;\n\n    mounted() {\n        // Hacky jQuery event that creates automata upon 'enter' keypress\n        $(document).on('keypress', e => {\n            // If user pressed enter *and* modal is visibile, add automata\n            if (e.key === \"Enter\" && this.isModalVisible)\n                this.onAddClick();\n        });\n    }\n\n    /**\n     * Shows the modal\n     */\n    public show(callback: (type: string, name: string) => void) {\n        // Clears data\n        this.type = \"FA\";\n        this.name = \"\";\n\n        // Sets callback\n        this.callback = callback;\n\n        // Shows the modal\n        (this.$refs['newTabModal'] as any).show();\n    }\n\n    /**\n     * Gets automata proper name from type\n     */\n    private getAutomataName() {\n        switch (this.type) {\n            case 'FA':\n                return \"Finite Automata\";\n            case 'PDA':\n                return \"Pushdown Automata\";\n            case 'TM':\n                return \"Turing Machine\";\n            default:\n                return \"Invalid type\";\n        }\n    }\n\n    /**\n     * When the user clicks on a type\n     * @param type - the type that the user clicked on\n     */\n    private onTypeClick(type: string) {\n        this.type = type;\n    }\n\n    /**\n     * When the user clicks on 'add'\n     */\n    private onAddClick() {\n        // Runs callback\n        this.callback(this.type, this.name ? this.name : \"Automata\");\n\n        // Hides modal\n        (this.$refs['newTabModal'] as any).hide();\n    }\n\n    /**\n     * When the user clicks on 'cancel'\n     */\n    private onCancelClick() {\n        // Hides the modal\n        (this.$refs['newTabModal'] as any).hide();\n    }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewTabModal.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NewTabModal.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NewTabModal.vue?vue&type=template&id=7aae6431&scoped=true&\"\nimport script from \"./NewTabModal.vue?vue&type=script&lang=ts&\"\nexport * from \"./NewTabModal.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7aae6431\",\n  null\n  \n)\n\nexport default component.exports","import Automata from '@/classes/Automata';\nimport FiniteAutomata from '@/classes/FiniteAutomata';\nimport PushdownAutomata from '@/classes/PushdownAutomata';\nimport TuringMachine from '@/classes/TuringMachine';\nimport _ from \"lodash\";\n\n/**\n * Deserializes an automata\n * @param serialized - the serialization of the automata to instantiate\n * @returns a new Automata based on the passed serialization\n */\nexport default function(serialized: string): Automata {\n    // Deserialize\n    let json: any = JSON.parse(serialized);\n\n    // Creates automata\n    let automata: Automata;\n\n    // Depending on type, instantiate automata\n    switch (json.modelName) {\n        case \"Finite Automata\":\n        default:\n            automata = new FiniteAutomata();\n            break;\n        case \"Pushdown Automata\":\n            automata = new PushdownAutomata();\n            break;\n        case \"Turing Machine\":\n            automata = new TuringMachine();\n            break;\n    }\n    // Sets up a quick function to convert str --> array to str --> set\n    function arrayToSetMap(setObj: any) {\n        return _.mapValues(setObj, array => new Set(array));\n    }\n\n    // Sets properties\n    automata.setName(json.name);\n    automata.setData(json.data);\n    automata[\"cacheEdgeID\"] = json.cacheEdgeID;\n    automata[\"cacheNodeID\"] = json.cacheNodeID;\n    automata[\"cacheInitialStates\"] = new Set(json.cacheInitialStates);\n    automata[\"cacheFinalStates\"] = new Set(json.cacheFinalStates);\n\n    // Refreshes cache\n    automata.cacheTransition.refresh(automata);\n    automata.cacheFoldedStates.refresh(automata);\n\n    // Return automata\n    return automata;\n}\n","export function readFileAsync(file: File) {\n    return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n\n        reader.onerror = reject;\n\n        reader.readAsText(file, \"UTF-8\");\n    })\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"modals\"}},[_c('NewTabModal',{ref:\"newTabModal\"}),_c('NewTransitionModal',{ref:\"newTransitionModal\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\nimport ModalsEventHandler from \"@/events/ModalsEventHandler\";\nimport {Component} from \"vue-property-decorator\";\nimport Vue from \"vue\";\nimport NewTabModal from \"@/components/modals/NewTabModal.vue\";\nimport NewTransitionModal from \"@/components/modals/NewTransitionModal.vue\";\nimport StylesModal from \"@/components/modals/styles/StylesModal.vue\";\n\n@Component({\n    components: {\n        NewTabModal, NewTransitionModal, StylesModal\n    }\n})\nexport default class Modals extends Vue {\n    /** New tab modal reference */\n    private newTabModal: any;\n\n    /** New transition modal reference */\n    private newTransitionModal: any;\n\n    private mounted() {\n        // Stores references for convenience\n        this.newTabModal = this.$refs[\"newTabModal\"];\n        this.newTransitionModal = this.$refs[\"newTransitionModal\"];\n\n        // --* EVENTS *--\n        // When the user wants to create a new automata\n        ModalsEventHandler.$on(\"onNewAutomata\", (callback: (type: string, name: string) => void) => {\n            // Runs modal\n            this.newTabModal.show((type: string, name: string) => {\n                callback(type, name);\n            });\n        });\n\n        // When the user wants to create a new transition\n        ModalsEventHandler.$on(\"onNewTransition\", (args: any) => {\n            // Deconstructs arguments and runs modal\n            const {automataType, existingSymbols, callback} = args;\n            this.newTransitionModal.show(automataType, existingSymbols, callback);\n        });\n\n        // When the user wants to edit a transition\n        ModalsEventHandler.$on(\"onEditTransition\", (args: any) => {\n            // Deconstructs arguments and runs modal\n            const {automataType, existingSymbols, transition, callback} = args;\n            this.newTransitionModal.showEdit(automataType, existingSymbols, transition, callback);\n        });\n    }\n}\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modals.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/ts-loader/index.js??ref--13-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modals.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Modals.vue?vue&type=template&id=3fc4ccbf&scoped=true&\"\nimport script from \"./Modals.vue?vue&type=script&lang=ts&\"\nexport * from \"./Modals.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3fc4ccbf\",\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Vue, Component } from 'vue-property-decorator';\nimport {\n    BButton,\n    BContainer,\n    BRow,\n    BCol,\n    BTabs,\n    BTab,\n    BFormTextarea,\n    BModal,\n    BButtonGroup,\n    BFormInput, BForm\n} from 'bootstrap-vue';\nimport AutomataPreview from '@/components/middlepane/AutomataPreview.vue';\nimport Automata from '@/classes/Automata';\nimport FiniteAutomata from '@/classes/FiniteAutomata';\nimport uuidv1 from 'uuid/v1';\nimport {Outcome} from \"@/classes/Outcome\";\nimport PushdownAutomata from \"@/classes/PushdownAutomata\";\nimport TuringMachine from \"@/classes/TuringMachine\";\nimport ConfigTable from '@/components/rightpane/animation/ConfigTable.vue';\nimport TabBody from \"@/components/TabBody.vue\";\nimport NewTabModal from '@/components/modals/NewTabModal.vue';\nimport deserialize from '../classes/AutomataDeserializer';\nimport {FileSaverOptions, saveAs} from 'file-saver';\nimport {readFileAsync} from \"@/misc/filereader\";\nimport AutomataDeserializer from \"../classes/AutomataDeserializer\";\nimport { Base64 } from 'js-base64';\nimport ModalsEventHandler from \"@/events/ModalsEventHandler\";\nimport Modals from \"@/components/modals/Modals.vue\";\nimport ordinal from \"ordinal\";\n\n@Component({\n    components: {\n        Modals,\n        ConfigTable,\n        AutomataPreview,\n        NewTabModal,\n        BButton, BContainer, BRow, BCol, BTabs, BTab, BModal, BButtonGroup,\n        TabBody\n    },\n})\nexport default class Main extends Vue {\n    /** The list of automatas that are in the program */\n    private automatas: Automata[] = [];\n\n    /** Stores the tab the user is currently selected */\n    private automataTab: number = 0;\n\n    /**\n     * When the user wants to rename a tab\n     */\n    private async renameTab(index: number) {\n        let response = await (this as any).$dialog.prompt({\n            text: `Type new automata name here`,\n            title: `Renaming '${this.automatas[index].getName()}'`\n        });\n\n        // If it wasn't cancelled, rename\n        if (response)\n            this.automatas[index].setName(response);\n    }\n\n    /**\n     * Closes the tab the user is on\n     */\n    private closeTab(index: number) {\n        // Removes the cytoscape elements\n        for (const dataObjKey of Object.keys(this.automatas[index].getData())) {\n            // Gets cytoscape element\n            const elem = (this.$refs[`tab${index}`] as any);\n\n            // If it exists\n            if (elem)\n                elem[0][\"automataPreview\"].cy.remove(`#${dataObjKey}`);\n        }\n\n        // Destroys the Automata reference\n        this.automatas.splice(index, 1);\n\n        // Updates Vue\n        this.$forceUpdate();\n    }\n\n    /**\n     * Creates automata\n     * @param type - the type of the new automata\n     * @param name - the name of the new automata\n     */\n    private createAutomata(type: string, name: string) {\n        let newAutomata: Automata;\n\n        // Sets type\n        switch (type) {\n            case \"FA\":\n            default:\n                newAutomata = new FiniteAutomata();\n                break;\n            case \"PDA\":\n                newAutomata = new PushdownAutomata();\n                break;\n            case \"TM\":\n                newAutomata = new TuringMachine();\n        }\n\n        // Sets name\n        newAutomata.setName(name);\n\n        // Pushes to array\n        this.automatas.push(newAutomata);\n    }\n\n    /**\n     * When the user wants to make a new automata\n     */\n    private onNewAutomataClick() {\n        ModalsEventHandler.$emit(\"onNewAutomata\", (type: string, name: string) => {\n            this.createAutomata(type, name);\n        });\n    }\n\n    /**\n     * When the user clicks the Load Automata button\n     */\n    private onLoadAutomataClick() {\n        const fileInput: any = document.getElementById('loadFileInput');\n        fileInput.value = null; // Resets what file had already been loaded, so we can load the same multiple times\n        if (fileInput)\n            fileInput.click();\n    }\n\n    /**\n     * When the user loads an automata file\n     * @param event - file selected event\n     */\n    private async onFileLoad(event: any) {\n        // Gets handle on file input tag\n        const fileInput: any = document.getElementById('loadFileInput');\n        if (fileInput) {\n            const file: File = fileInput.files[0];\n            const contents: string = await readFileAsync(file) as string;\n            const decryptedBase64: string = Base64.decode(contents);\n            let jsonContents: any = JSON.parse(decryptedBase64);\n\n            // Parses new automata\n            const newAutomata: Automata = deserialize(jsonContents.automata);\n\n            // Adds it to array and gets new index of this automata\n            this.automatas.push(newAutomata);\n            const automataTabIndex = this.automatas.length - 1;\n\n            // Waits for next tick\n            await this.$nextTick();\n\n            // Gets cytoscape element\n            const elem = (this.$refs[`tab${automataTabIndex}`] as any);\n            const cy = elem[0][\"automataPreview\"].cy;\n\n            // Updates json of cytoscape\n            cy.json(jsonContents.cy);\n\n            // Updates styles, if it's defined (if undefined, default styles are used)\n            if (jsonContents.style)\n                elem[0].updateStyleCards(jsonContents.style);\n        }\n    }\n\n    /**\n     * When the user saves an automata\n     * @param index - index of the automata which is being saved\n     */\n    private async onSaveAutomataClick(index: any) {\n        // Gets cytoscape element\n        const elem = (this.$refs[\"tab\" + index] as any);\n        const cy = elem[0][\"automataPreview\"].cy;\n\n        // Gets cytoscape json\n        const cytoscapeJSON = cy.json();\n        delete cytoscapeJSON.style;\n\n        // Filter out edge handle elements\n        cytoscapeJSON.elements.nodes = cytoscapeJSON.elements.nodes.filter((nodeData: any) => nodeData.classes !== \"eh-handle\");\n\n        // If we are simulating, do not save\n        if (elem[0].RightPane.AnimationPane.isSimulating) {\n            // Tell the user to stop the animation\n            this.$bvToast.toast(`You must cancel the current animation first before saving.`, {\n                title: `Cannot save while animation is active!`,\n                variant: \"danger\",\n                autoHideDelay: 5000\n            });\n            return;\n        }\n\n        // Creates JSON object to save\n        const jsonToSave = {\n            cy: cytoscapeJSON,\n            automata: this.automatas[index].serialize(),\n            style: elem[0].StyleCards\n        };\n\n        // Creates save blob and encodes into Base64\n        let saveBlob: string = JSON.stringify(jsonToSave);\n        saveBlob = Base64.encode(saveBlob);\n\n        // If it exists\n        if (elem) {\n            let jsonBlob = new Blob([ saveBlob ], { type: 'text/plain;charset=utf-8' });\n            saveAs(jsonBlob, `${this.automatas[index].getName()}.automata`);\n        } else {\n            console.log(\"Element doesn't exist!\");\n        }\n    }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Main.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--13-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Main.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Main.vue?vue&type=template&id=d27962b2&\"\nimport script from \"./Main.vue?vue&type=script&lang=ts&\"\nexport * from \"./Main.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Main.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport Main from '../views/Main.vue';\n\nVue.use(VueRouter);\n\nconst routes = [\n    {\n        path: '/',\n        name: 'home',\n        component: Main,\n    },\n];\n\nconst router = new VueRouter({\n    routes,\n});\n\nexport default router;\n","import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n    state: {\n    },\n    mutations: {\n    },\n    actions: {\n    },\n    modules: {\n    },\n});\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\n\nimport {\n    faTimesCircle,\n    faSearchPlus,\n    faSearchMinus,\n    faPenSquare,\n    faSave,\n} from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faTimesCircle);\nlibrary.add(faSearchPlus);\nlibrary.add(faSearchMinus);\nlibrary.add(faPenSquare);\nlibrary.add(faSave);\n\nexport default FontAwesomeIcon;\n","import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\n\n// Imports Cytoscape\nimport VueCytoscape from 'vue-cytoscape';\nVue.use(VueCytoscape);\n\n// Imports Bootstrap-Vue and toast plugin for toasts\nimport BootstrapVue, { ToastPlugin } from 'bootstrap-vue';\nVue.use(BootstrapVue);\nVue.use(ToastPlugin);\nimport './custom.scss';\n\n// Imports Bootstrap-Vue-Dialog\nimport Dialog from 'bootstrap-vue-dialog';\nVue.use(Dialog, {\n    store, router,\n});\n\n// Imports Font Awesome\nimport FontAwesomeIcon from './fontawesome';\nVue.component('font-awesome-icon', FontAwesomeIcon);\n\n// Imports Verte\nimport Verte from 'verte';\nimport 'verte/dist/verte.css';\nVue.component(Verte.name, Verte);\n\nVue.config.productionTip = false;\n\nnew Vue({\n    router,\n    store,\n    render: (h) => h(App),\n}).$mount('#app');\n","module.exports = __webpack_public_path__ + \"img/logo.8f8e1978.png\";","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComputationPane.vue?vue&type=style&index=0&id=12a87784&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ComputationPane.vue?vue&type=style&index=0&id=12a87784&lang=scss&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=e18ab5de&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=e18ab5de&scoped=true&lang=scss&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StyleCard.vue?vue&type=style&index=0&id=6494a582&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./StyleCard.vue?vue&type=style&index=0&id=6494a582&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiddlePane.vue?vue&type=style&index=0&id=379e072f&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MiddlePane.vue?vue&type=style&index=0&id=379e072f&scoped=true&lang=css&\""],"sourceRoot":""}